{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"page-wrapper\"\n};\nconst _hoisted_2 = {\n  class: \"content\"\n};\nconst _hoisted_3 = {\n  class: \"row\"\n};\nconst _hoisted_4 = {\n  class: \"card-body\"\n};\nconst _hoisted_5 = {\n  ref: \"chartCanvas\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Navbar = _resolveComponent(\"Navbar\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Navbar), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createCommentVNode(\" Canvas element for Chart.js \"), _createElementVNode(\"canvas\", _hoisted_5, null, 512 /* NEED_PATCH */), _cache[0] || (_cache[0] = _createElementVNode(\"p\", null, \"Loading chart data...\", -1 /* HOISTED */))])])])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","ref","_createElementBlock","_Fragment","_createVNode","_component_Navbar","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_createCommentVNode","_hoisted_5"],"sources":["C:\\Users\\Administrator\\OneDrive\\Desktop\\POSExpress\\frontend\\src\\components\\Admin\\Main\\Dashboard.vue"],"sourcesContent":["<template>\r\n  <Navbar />\r\n  <div class=\"page-wrapper\">\r\n    <div class=\"content\">\r\n      <div class=\"row\">\r\n        <div class=\"card-body\">\r\n          <!-- Canvas element for Chart.js -->\r\n          <canvas ref=\"chartCanvas\"></canvas>\r\n          <p v-else>Loading chart data...</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, onBeforeUnmount } from \"vue\";\r\nimport Chart from \"chart.js/auto\"; // Import Chart.js (automatically includes necessary components like line, bar, etc.)\r\nimport axios from \"axios\";\r\nimport Navbar from \"/src/components/Admin/Navbar.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    Navbar,\r\n  },\r\n  setup() {\r\n    const chartCanvas = ref(null); // Reference to the canvas element\r\n    let chartInstance = null; // Variable to hold the Chart.js instance\r\n    const salesData = ref([]);\r\n\r\n    // Fetch the sales data\r\n    onMounted(async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/get_sales\");\r\n        if (response.data.success) {\r\n          salesData.value = response.data.salesDatas;\r\n          console.log(\"Sales data fetched:\", salesData.value);\r\n          renderChart(); // Render the chart once the data is fetched\r\n        } else {\r\n          console.error(\"Failed to fetch sales data\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching sales data:\", error);\r\n      }\r\n    });\r\n\r\n    // Function to render the chart after data is fetched\r\n    const renderChart = () => {\r\n      if (salesData.value.length > 0 && chartCanvas.value) {\r\n        const labels = salesData.value.map((data) => data._id); // Assuming '_id' as labels\r\n        const totalSales = salesData.value.map((data) => data.totalSales);\r\n        const totalProfit = salesData.value.map((data) => data.totalProfit);\r\n\r\n        const ctx = chartCanvas.value.getContext(\"2d\"); // Get the context for the canvas element\r\n\r\n        // Initialize the chart with the provided data\r\n        chartInstance = new Chart(ctx, {\r\n          type: \"bar\", // Bar chart type (vertical by default)\r\n          data: {\r\n            labels: labels, // X-axis labels (dates)\r\n            datasets: [\r\n              {\r\n                label: \"Total Sales\",\r\n                data: totalSales,\r\n                backgroundColor: \"rgba(75, 192, 192, 0.6)\", // Bar color for total sales\r\n                borderColor: \"rgb(75, 192, 192)\", // Bar border color\r\n                borderWidth: 1,\r\n              },\r\n              {\r\n                label: \"Total Profit\",\r\n                data: totalProfit,\r\n                backgroundColor: \"rgba(255, 99, 132, 0.6)\", // Bar color for total profit\r\n                borderColor: \"rgb(255, 99, 132)\", // Bar border color\r\n                borderWidth: 1,\r\n              },\r\n            ],\r\n          },\r\n          options: {\r\n            responsive: true,\r\n            plugins: {\r\n              legend: {\r\n                position: \"top\",\r\n              },\r\n              tooltip: {\r\n                enabled: true,\r\n              },\r\n            },\r\n            scales: {\r\n              x: {\r\n                title: {\r\n                  display: true,\r\n                  text: \"Dates\",\r\n                },\r\n              },\r\n              y: {\r\n                title: {\r\n                  display: true,\r\n                  text: \"Values\",\r\n                },\r\n                beginAtZero: true,\r\n              },\r\n            },\r\n          },\r\n        });\r\n      }\r\n    };\r\n\r\n    // Clean up the chart instance when the component is unmounted\r\n    onBeforeUnmount(() => {\r\n      if (chartInstance) {\r\n        chartInstance.destroy();\r\n      }\r\n    });\r\n\r\n    return {\r\n      chartCanvas, // Reference to the canvas element\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Optional styling for your page or components */\r\ncanvas {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  height: 400px;\r\n}\r\n</style>\r\n"],"mappings":";;EAEOA,KAAK,EAAC;AAAc;;EAClBA,KAAK,EAAC;AAAS;;EACbA,KAAK,EAAC;AAAK;;EACTA,KAAK,EAAC;AAAW;;EAEZC,GAAG,EAAC;AAAa;;;uBAPnCC,mBAAA,CAAAC,SAAA,SACEC,YAAA,CAAUC,iBAAA,GACVC,mBAAA,CAUM,OAVNC,UAUM,GATJD,mBAAA,CAQM,OARNE,UAQM,GAPJF,mBAAA,CAMM,OANNG,UAMM,GALJH,mBAAA,CAIM,OAJNI,UAIM,GAHJC,mBAAA,iCAAoC,EACpCL,mBAAA,CAAmC,UAAnCM,UAAmC,+B,0BACnCN,mBAAA,CAAmC,WAAzB,uBAAqB,qB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}