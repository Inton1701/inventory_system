{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"h4\", null, \"Product SKU EAN-13 Barcode\", -1 /* HOISTED */)), _cache[1] || (_cache[1] = _createElementVNode(\"svg\", {\n    id: \"barcode\"\n  }, null, -1 /* HOISTED */)), _createCommentVNode(\" SVG to display the barcode \")]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","id","_createCommentVNode"],"sources":["C:\\Users\\Administrator\\OneDrive\\Desktop\\POSExpress\\frontend\\src\\components\\Admin\\Inventory\\Barcode.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h4>Product SKU EAN-13 Barcode</h4>\r\n    <svg id=\"barcode\"></svg> <!-- SVG to display the barcode -->\r\n  </div>\r\n</template>\r\n<script>\r\nimport JsBarcode from 'jsbarcode';\r\nimport { ref, onMounted } from 'vue';\r\n\r\nexport default {\r\n  props: {\r\n    sku: {\r\n      type: String,\r\n      required: true\r\n    }\r\n  },\r\n  setup(props) {\r\n    // Pad SKU to ensure it's 13 characters for EAN-13 format\r\n    const formatSkuForEAN13 = (sku) => {\r\n      if (sku.length < 13) {\r\n        return sku.padStart(13, '0'); // Pad with leading zeros\r\n      } else if (sku.length > 13) {\r\n        return sku.slice(0, 13); // Truncate if longer than 13\r\n      }\r\n      return sku;\r\n    };\r\n\r\n    // Generate barcode when the component mounts\r\n    onMounted(() => {\r\n      const formattedSku = formatSkuForEAN13(props.sku);\r\n      generateBarcode(formattedSku);\r\n    });\r\n\r\n    const generateBarcode = (formattedSku) => {\r\n      try {\r\n        JsBarcode(\"#barcode\", formattedSku, {\r\n          format: \"EAN13\",\r\n          lineColor: \"#000\",\r\n          width: 2,\r\n          height: 50,\r\n          displayValue: true\r\n        });\r\n      } catch (error) {\r\n        console.error('Error generating barcode:', error);\r\n      }\r\n    };\r\n  }\r\n};\r\n\r\n\r\n</script>\r\n"],"mappings":";;uBACEA,mBAAA,CAGM,c,0BAFJC,mBAAA,CAAmC,YAA/B,4BAA0B,sB,0BAC9BA,mBAAA,CAAwB;IAAnBC,EAAE,EAAC;EAAS,6BAAQC,mBAAA,gCAAmC,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}