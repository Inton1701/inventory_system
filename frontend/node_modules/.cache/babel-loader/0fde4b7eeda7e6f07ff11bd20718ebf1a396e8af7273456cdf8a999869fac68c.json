{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport { ref, onMounted, onBeforeUnmount, nextTick } from 'vue';\nimport { useRouter } from 'vue-router';\nimport axios from 'axios';\nimport { exportToCSV } from '@/utils/exportCSV';\nimport { exportToPDF } from '@/utils/exportPDF';\nimport Papa from 'papaparse';\nimport 'select2';\nimport feather from 'feather-icons';\nimport ClipLoader from 'vue-spinner/src/ClipLoader.vue';\nimport Swal from 'sweetalert2';\nimport Navbar from '/src/components/Admin/Navbar.vue';\nimport $ from 'jquery';\nexport default {\n  components: {\n    Navbar,\n    ClipLoader\n  },\n  setup() {\n    const apiURL = process.env.VUE_APP_URL;\n    const imageURL = process.env.VUE_APP_IMAGE_URL;\n    const products = ref([]);\n    const loading = ref(true);\n    const select = ref(null);\n    const table = ref(null);\n    const jsonData = ref([]);\n    const tableHeaders = ref([]);\n\n    //  get products from the API\n    const getProductList = async () => {\n      loading.value = true;\n      try {\n        const response = await axios.get(`${apiURL}/products_list`);\n        products.value = response.data.products;\n      } catch (error) {\n        Swal.fire('Error', 'Unable to get products', 'error');\n      } finally {\n        loading.value = false;\n      }\n    };\n    const deleteAlert = async productId => {\n      try {\n        const {\n          value: result\n        } = await Swal.fire({\n          title: 'Delete Product',\n          text: \"You won't be able to revert this!\",\n          icon: 'warning',\n          showCancelButton: true,\n          confirmButtonColor: '#3085d6',\n          cancelButtonColor: '#d33',\n          confirmButtonText: 'Yes, delete it!'\n        });\n        if (result) {\n          try {\n            // Send a PUT request to update the product status to \"deleted\"\n            const response = await axios.delete(`${apiURL}/delete_product/${productId}`);\n            if (response.data.success) {\n              Swal.fire('Deleted!', 'Your product has been deleted.', 'success');\n            } else {\n              Swal.fire('Failed', 'There was an issue deleting the product.', 'error');\n            }\n          } catch (error) {\n            console.error('Error updating product:', error);\n            Swal.fire('Error', 'Failed to delete the product.', 'error');\n          }\n        } else {\n          Swal.fire('Cancelled', 'Your product is safe :)', 'error');\n        }\n      } catch (error) {\n        Swal.fire('Error', error, 'error');\n      } finally {\n        getProductList();\n      }\n    };\n    const exportCSVAlert = async () => {\n      try {\n        const {\n          value: result\n        } = await Swal.fire({\n          title: 'Export Product',\n          text: 'Export via CSV',\n          icon: 'question',\n          showCancelButton: true,\n          confirmButtonColor: '#3085d6',\n          cancelButtonColor: '#d33',\n          confirmButtonText: 'Export'\n        });\n        if (result) {\n          const response = await axios.get(`${apiURL}/get_report`);\n\n          // Ensure products are available\n          if (response.data.success && response.data.products && response.data.products.length > 0) {\n            const products = response.data.products;\n            exportToCSV(products, `product_report`); // Call function to export CSV\n            Swal.fire('Success', 'products successfully exported', 'success');\n          } else {\n            Swal.fire('Error', 'No products found to export', 'error');\n          }\n        }\n      } catch (error) {\n        console.error('Error during export:', error);\n        Swal.fire('Error', 'Something went wrong while exporting.', 'error');\n      }\n    };\n    const exportPDFAlert = async () => {\n      try {\n        const {\n          value: result\n        } = await Swal.fire({\n          title: 'Export Product',\n          text: 'Export via PDF',\n          icon: 'question',\n          showCancelButton: true,\n          confirmButtonColor: '#3085d6',\n          cancelButtonColor: '#d33',\n          confirmButtonText: 'Export'\n        });\n        if (result) {\n          const response = await axios.get(`${apiURL}/get_report`);\n\n          // Ensure products are available\n          if (response.data.success && response.data.products && response.data.products.length > 0) {\n            const products = response.data.products;\n            exportToPDF(`product_report`, products); // Call function to export CSV\n            Swal.fire('Success', 'products successfully exported', 'success');\n          } else {\n            Swal.fire('Error', 'No products found to export', 'error');\n          }\n        }\n      } catch (error) {\n        console.error('Error during export:', error);\n        Swal.fire('Error', 'Something went wrong while exporting.', 'error');\n      }\n    };\n    const uploadCSV = event => {\n      const file = event.target.files[0];\n      if (!file) {\n        alert(\"Please select a file to upload\");\n        return;\n      }\n      if (file.type !== \"text/csv\") {\n        alert(\"Please upload a valid CSV file\");\n        return;\n      }\n      Papa.parse(file, {\n        complete: result => {\n          jsonData.value = result.data; // Parsed CSV data\n\n          // Generate table headers dynamically\n          if (jsonData.value.length > 0) {\n            tableHeaders.value = Object.keys(jsonData.value[0]);\n          }\n\n          // Remove 'x' or 'X' from SKU in the parsed data\n          jsonData.value.forEach(row => {\n            if (row.sku) {\n              row.sku = row.sku.replace(/^x/i, ''); // Remove 'x' or 'X' from SKU\n            }\n          });\n        },\n        header: true,\n        skipEmptyLines: true\n      });\n    };\n\n    // Validate CSV Data\n    const validateCSVData = async data => {\n      const validData = [];\n      const invalidData = [];\n\n      // Define required fields\n      const requiredFields = ['sku', 'name', 'price', 'cost'];\n      for (const row of data) {\n        let isValid = true;\n\n        // Check if required fields are present (excluding `sku`)\n        requiredFields.forEach(field => {\n          if (field !== 'sku' && !row[field]) {\n            isValid = false; // Mark as invalid if any field except `sku` is missing\n          }\n        });\n\n        // Ensure the SKU is cleaned up (remove 'x' or 'X')\n        if (row.sku) {\n          row.sku = row.sku.replace(/^x/i, ''); // Remove 'x' or 'X' from SKU\n        }\n\n        // Handle missing `sku`: generate a new one if valid so far\n        if (isValid && (!row.sku || row.sku.trim() === '')) {\n          row.sku = await autoGenerateSKU();\n        }\n\n        // Further validation if `sku` is provided\n        if (isValid && row.sku) {\n          if (!validateSku(row.sku) || !validateNumber(row.price) || !validateNumber(row.cost)) {\n            isValid = false; // Invalid format\n          } else {\n            // Check if SKU already exists\n            const exists = await checkSKU(row.sku);\n            if (exists) {\n              isValid = false; // SKU already exists\n            }\n          }\n        }\n\n        // Add the row to the appropriate list\n        if (isValid) {\n          validData.push(row);\n        } else {\n          invalidData.push(row);\n        }\n      }\n      return {\n        validData,\n        invalidData\n      };\n    };\n\n    // Ensure that `validateSku` validates that the SKU is exactly 13 digits after cleaning\n    const validateSku = sku => {\n      // Ensure SKU is exactly 13 digits long\n      return /^[0-9]{13}$/.test(sku);\n    };\n\n    // Ensure that `validateNumber` handles all types of valid numbers\n    const validateNumber = value => {\n      if (typeof value === 'string') {\n        value = value.trim();\n      }\n      // Ensure value is a positive number (including decimals)\n      return /^[0-9]+(\\.[0-9]{1,2})?$/.test(value) && parseFloat(value) > 0;\n    };\n    const checkSKU = async sku => {\n      try {\n        const response = await axios.get(`${apiURL}/check_sku/${sku}`);\n        console.log(response.data.exists);\n        return response.data.exists; // Return true if SKU exists\n      } catch (error) {\n        console.error('Error checking SKU:', error);\n        return true; // Assume false if error occurs\n      }\n    };\n    const autoGenerateSKU = async () => {\n      let sku = generateEAN13();\n\n      // Loop to regenerate SKU until it's unique\n      while (true) {\n        try {\n          // Check if SKU exists in the database\n          const response = await axios.get(`${apiURL}/check_sku/${sku}`);\n          if (!response.data.exists) {\n            // If SKU is unique, return it\n            return sku;\n          } else {\n            // Regenerate SKU if it exists\n            sku = generateEAN13();\n          }\n        } catch (error) {\n          console.error('Error checking SKU:', error);\n          return null; // Exit if there's an error\n        }\n      }\n    };\n    const generateEAN13 = () => {\n      let digits = '4';\n      for (let i = 0; i < 11; i++) {\n        digits += Math.floor(Math.random() * 10).toString();\n      }\n      let sumOdd = 0;\n      let sumEven = 0;\n      for (let i = 0; i < 12; i++) {\n        const digit = parseInt(digits[i], 10);\n        if (i % 2 === 0) {\n          sumOdd += digit;\n        } else {\n          sumEven += digit;\n        }\n      }\n      const totalSum = sumOdd + sumEven * 3;\n      const checksum = (10 - totalSum % 10) % 10;\n      return digits + checksum;\n    };\n    const submitImport = async () => {\n      loading.value = true;\n\n      // Ensure jsonData is defined and has data\n      if (!jsonData.value || jsonData.value.length === 0) {\n        Swal.fire('Error', 'No data to import', 'error');\n        loading.value = false;\n        return;\n      }\n      try {\n        // Await validation of the CSV data\n        const {\n          validData,\n          invalidData\n        } = await validateCSVData(jsonData.value);\n\n        // Log the valid and invalid data\n        console.log(\"Valid Data:\", validData);\n        console.log(\"Invalid Data:\", invalidData);\n\n        // If there are no valid rows, display an error and stop processing\n        if (validData.length === 0) {\n          Swal.fire('Error', 'No valid data found in the CSV file', 'error');\n          loading.value = false;\n          return;\n        }\n\n        // // Send valid data to the backend\n        // const response = await axios.post(`${apiURL}/import_products`, { products: validData });\n\n        // if (response.data.success) {\n        Swal.fire('Success', `${validData.length} products successfully imported`, 'success');\n        jsonData.value = []; // Clear data after successful import\n        // } else {\n        //   Swal.fire('Error', 'Failed to import products', 'error');\n        // }\n\n        // Show a warning for invalid rows if any\n        if (invalidData.length > 0) {\n          Swal.fire('Warning', `${invalidData.length} rows were skipped due to missing or invalid fields.`, 'warning');\n        }\n      } catch (error) {\n        console.error('Error importing products:', error);\n        Swal.fire('Error', 'Something went wrong while importing.', 'error');\n      } finally {\n        loading.value = false;\n      }\n    };\n    onMounted(async () => {\n      try {\n        await nextTick();\n        await getProductList();\n        nextTick(() => {\n          const table = document.querySelector('.table');\n          if (table) {\n            $(table).DataTable();\n          }\n        });\n        feather.replace();\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    onBeforeUnmount(() => {\n      feather.replace();\n      $(select.value).select2('destroy');\n    });\n    return {\n      products,\n      loading,\n      select,\n      apiURL,\n      imageURL,\n      deleteAlert,\n      exportCSVAlert,\n      exportPDFAlert,\n      uploadCSV,\n      submitImport,\n      jsonData,\n      tableHeaders\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","onBeforeUnmount","nextTick","useRouter","axios","exportToCSV","exportToPDF","Papa","feather","ClipLoader","Swal","Navbar","$","components","setup","apiURL","process","env","VUE_APP_URL","imageURL","VUE_APP_IMAGE_URL","products","loading","select","table","jsonData","tableHeaders","getProductList","value","response","get","data","error","fire","deleteAlert","productId","result","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","delete","success","console","exportCSVAlert","length","exportPDFAlert","uploadCSV","event","file","target","files","alert","type","parse","complete","Object","keys","forEach","row","sku","replace","header","skipEmptyLines","validateCSVData","validData","invalidData","requiredFields","isValid","field","trim","autoGenerateSKU","validateSku","validateNumber","price","cost","exists","checkSKU","push","test","parseFloat","log","generateEAN13","digits","i","Math","floor","random","toString","sumOdd","sumEven","digit","parseInt","totalSum","checksum","submitImport","document","querySelector","DataTable","select2"],"sources":["C:\\Users\\Administrator\\OneDrive\\Desktop\\POSExpress\\frontend\\src\\components\\Admin\\Inventory\\ProductList.vue"],"sourcesContent":["<template>\r\n  <Navbar />\r\n\r\n  <div class=\"page-wrapper\">\r\n    <ClipLoader v-if=\"loading\" />\r\n    <div class=\"content\">\r\n      <div class=\"page-header\">\r\n        <div class=\"add-item d-flex\">\r\n          <div class=\"page-title\">\r\n            <h4>Product List</h4>\r\n            <h6>Manage your products</h6>\r\n          </div>\r\n        </div>\r\n        <ul class=\"table-top-head\">\r\n          <li>\r\n            <a data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Pdf\" type=\"button\"\r\n              @click=\"exportPDFAlert();\"><img src=\"/assets/img/icons/pdf.svg\" alt=\"img\" /></a>\r\n          </li>\r\n          <li>\r\n            <a type=\"button\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Excel\"\r\n              @click=\"exportCSVAlert();\"><img src=\"/assets/img/icons/excel.svg\" alt=\"img\" /></a>\r\n          </li>\r\n          <li>\r\n            <a data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Print\"><i data-feather=\"printer\"\r\n                class=\"feather-rotate-ccw\"></i></a>\r\n          </li>\r\n          <li>\r\n            <router-link to=\"/products\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Refresh\"><i\r\n                data-feather=\"rotate-ccw\" class=\"feather-rotate-ccw\"></i></router-link>\r\n          </li>\r\n          <li>\r\n            <a data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Collapse\" id=\"collapse-header\"><i\r\n                data-feather=\"chevron-up\" class=\"feather-chevron-up\"></i></a>\r\n          </li>\r\n        </ul>\r\n        <div class=\"page-btn\">\r\n          <router-link to=\"create-product\" class=\"btn btn-added\"><i data-feather=\"plus-circle\" class=\"me-2\"></i>Add New\r\n            Product</router-link>\r\n        </div>\r\n        <div class=\"page-btn import\">\r\n          <a href=\"#\" class=\"btn btn-added color\" data-bs-toggle=\"modal\" data-bs-target=\"#view-notes\"><i\r\n              data-feather=\"download\" class=\"me-2\"></i>Import Product</a>\r\n        </div>\r\n      </div>\r\n      <div class=\"card table-list-card\">\r\n        <div class=\"card-body\">\r\n          <div class=\"table-responsive\">\r\n            <table class=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>SKU</th>\r\n                  <th>Product</th>\r\n                  <th>Category</th>\r\n                  <th>Price</th>\r\n                  <th>Status</th>\r\n                  <th>Created On</th>\r\n                  <th>Updated On</th>\r\n\r\n                  <th class=\"no-sort\">Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr v-if=\"products.length <= 0\">\r\n                  <td colspan=\"8\">No products available</td>\r\n                </tr>\r\n                <tr v-else v-for=\"product in products\" :key=\"product._id\">\r\n                  <td>{{ product.sku }}</td>\r\n                  <td>\r\n                    <div class=\"productimgname\">\r\n                      <a href=\"javascript:void(0);\" class=\"product-img stock-img\">\r\n                        <img v-if=\"product.image\" :src=\"`${imageURL}${product.image}`\"\r\n                          alt=\"/img/icons/no-image-icon.png\" />\r\n                        <img v-else :src=\"`/img/icons/no-image-icon.png`\" />\r\n                      </a>\r\n                      <a href=\"javascript:void(0);\">{{ product.name }}</a>\r\n                    </div>\r\n                  </td>\r\n                  <td>{{ product.category }}</td>\r\n                  <td>{{ product.price.toFixed(2) }}</td>\r\n                  <td>\r\n                    <span :class=\"{\r\n                      'badge': true,\r\n                      'badge-linesuccess': product.status === 'active',\r\n                      'badge-linewarning': product.status === 'inactive'\r\n                    }\">\r\n                      {{ product.status }}\r\n                    </span>\r\n                  </td>\r\n                  <td>{{ $formatDate(product.createdAt) }}</td>\r\n                  <td>{{ $formatDate(product.updatedAt) }}</td>\r\n                  <td class=\"action-table-data\">\r\n                    <div class=\"edit-delete-action\">\r\n                      <router-link class=\"me-2 edit-icon p-2\"\r\n                        :to=\"{ name: 'ProductDetails', params: { id: product._id } }\">\r\n                        <font-awesome-icon icon=\"eye\" class=\"feather-eye\" />\r\n                      </router-link>\r\n                      <router-link :to=\"{ name: 'EditProduct', params: { id: product._id } }\" class=\"me-2 p-2\">\r\n                        <font-awesome-icon icon=\"fa-pen-to-square\" class=\"feather-edit\" />\r\n                      </router-link>\r\n                      <a class=\"confirm-text p-2\" href=\"javascript:void(0);\" @click=\"deleteAlert(product._id)\">\r\n                        <font-awesome-icon icon=\"fa-trash\" class=\"feather-trash-2\" />\r\n                      </a>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"modal fade\" id=\"view-notes\">\r\n    <div class=\"modal-dialog modal-dialog-centered\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"page-wrapper-new p-0\">\r\n          <div class=\"content\">\r\n            <div class=\"modal-header border-0 custom-modal-header\">\r\n              <div class=\"page-title\">\r\n                <h4>Import Product</h4>\r\n              </div>\r\n              <button type=\"button\" class=\"close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"modal-body custom-modal-body\">\r\n              <form @submit.prevent=\"submitImport\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-lg-12 col-sm-6 col-12\">\r\n                    <div class=\"modal-footer-btn download-file\">\r\n                      <a href=\"files/Sample.csv\" class=\"btn btn-submit\">Download Sample File</a>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-12\">\r\n                    <div class=\"input-blocks image-upload-down\">\r\n                      <label>Upload CSV File</label>\r\n                      <div class=\"image-upload download\">\r\n                        <input type=\"file\" accept=\".csv\" @change=\"uploadCSV\" />\r\n                        <div class=\"image-uploads\">\r\n                          <img src=\"assets/img/download-img.png\" alt=\"img\" />\r\n                          <h4>Drag and drop a <span>file to upload</span></h4>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- Scrollable Table for Uploaded JSON Data -->\r\n                <div class=\"col-lg-12 mt-4\" v-if=\"jsonData.length > 0\">\r\n                  <h5>Uploaded Data Preview(do not remove the chara)</h5>\r\n                  <div class=\"table-wrapper\">\r\n                    <table class=\"table table-striped table-bordered\">\r\n                      <thead>\r\n                        <tr>\r\n                          <!-- Dynamically generate table headers -->\r\n                          <th v-for=\"(header, index) in tableHeaders\" :key=\"index\">\r\n                            {{ header }}\r\n                          </th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <!-- Dynamically generate table rows -->\r\n                        <tr v-for=\"(row, rowIndex) in jsonData\" :key=\"rowIndex\">\r\n                          <td v-for=\"(value, key, colIndex) in row\" :key=\"colIndex\">\r\n                            {{ value }}\r\n                          </td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"col-lg-12\">\r\n                  <div class=\"modal-footer-btn\">\r\n                    <button type=\"button\" class=\"btn btn-cancel me-2\" data-bs-dismiss=\"modal\">Cancel</button>\r\n                    <button type=\"submit\" class=\"btn btn-submit\">Submit</button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, onBeforeUnmount, nextTick } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport axios from 'axios';\r\nimport { exportToCSV } from '@/utils/exportCSV';\r\nimport { exportToPDF } from '@/utils/exportPDF';\r\nimport Papa from 'papaparse';\r\nimport 'select2';\r\nimport feather from 'feather-icons';\r\nimport ClipLoader from 'vue-spinner/src/ClipLoader.vue';\r\nimport Swal from 'sweetalert2';\r\nimport Navbar from '/src/components/Admin/Navbar.vue';\r\nimport $ from 'jquery';\r\n\r\nexport default {\r\n  components: {\r\n    Navbar,\r\n    ClipLoader,\r\n  },\r\n  setup() {\r\n    const apiURL = process.env.VUE_APP_URL;\r\n    const imageURL = process.env.VUE_APP_IMAGE_URL;\r\n    const products = ref([]);\r\n    const loading = ref(true);\r\n    const select = ref(null);\r\n    const table = ref(null);\r\n    const jsonData = ref([]);\r\n    const tableHeaders = ref([]); \r\n\r\n    //  get products from the API\r\n    const getProductList = async () => {\r\n      loading.value = true;\r\n      try {\r\n        const response = await axios.get(`${apiURL}/products_list`);\r\n        products.value = response.data.products;\r\n\r\n      } catch (error) {\r\n        Swal.fire('Error', 'Unable to get products', 'error')\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n\r\n    const deleteAlert = async (productId) => {\r\n      try {\r\n        const { value: result } = await Swal.fire({\r\n          title: 'Delete Product',\r\n          text: \"You won't be able to revert this!\",\r\n          icon: 'warning',\r\n          showCancelButton: true,\r\n          confirmButtonColor: '#3085d6',\r\n          cancelButtonColor: '#d33',\r\n          confirmButtonText: 'Yes, delete it!',\r\n        });\r\n\r\n        if (result) {\r\n          try {\r\n            // Send a PUT request to update the product status to \"deleted\"\r\n            const response = await axios.delete(`${apiURL}/delete_product/${productId}`);\r\n\r\n            if (response.data.success) {\r\n              Swal.fire('Deleted!', 'Your product has been deleted.', 'success');\r\n\r\n            } else {\r\n              Swal.fire('Failed', 'There was an issue deleting the product.', 'error');\r\n            }\r\n          } catch (error) {\r\n            console.error('Error updating product:', error);\r\n            Swal.fire('Error', 'Failed to delete the product.', 'error');\r\n          }\r\n        } else {\r\n          Swal.fire('Cancelled', 'Your product is safe :)', 'error');\r\n        }\r\n      } catch (error) {\r\n        Swal.fire('Error', error, 'error');\r\n      } finally {\r\n        getProductList();\r\n      }\r\n\r\n    };\r\n    const exportCSVAlert = async () => {\r\n      try {\r\n        const { value: result } = await Swal.fire({\r\n          title: 'Export Product',\r\n          text: 'Export via CSV',\r\n          icon: 'question',\r\n          showCancelButton: true,\r\n          confirmButtonColor: '#3085d6',\r\n          cancelButtonColor: '#d33',\r\n          confirmButtonText: 'Export',\r\n        });\r\n\r\n        if (result) {\r\n          const response = await axios.get(`${apiURL}/get_report`);\r\n\r\n          // Ensure products are available\r\n          if (response.data.success && response.data.products && response.data.products.length > 0) {\r\n            const products = response.data.products;\r\n\r\n            exportToCSV(products, `product_report`); // Call function to export CSV\r\n            Swal.fire('Success', 'products successfully exported', 'success')\r\n          } else {\r\n            Swal.fire('Error', 'No products found to export', 'error');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error during export:', error);\r\n        Swal.fire('Error', 'Something went wrong while exporting.', 'error');\r\n      }\r\n    };\r\n    const exportPDFAlert = async () => {\r\n      try {\r\n        const { value: result } = await Swal.fire({\r\n          title: 'Export Product',\r\n          text: 'Export via PDF',\r\n          icon: 'question',\r\n          showCancelButton: true,\r\n          confirmButtonColor: '#3085d6',\r\n          cancelButtonColor: '#d33',\r\n          confirmButtonText: 'Export',\r\n        });\r\n\r\n        if (result) {\r\n          const response = await axios.get(`${apiURL}/get_report`);\r\n\r\n          // Ensure products are available\r\n          if (response.data.success && response.data.products && response.data.products.length > 0) {\r\n            const products = response.data.products;\r\n\r\n            exportToPDF(`product_report`, products); // Call function to export CSV\r\n            Swal.fire('Success', 'products successfully exported', 'success')\r\n          } else {\r\n            Swal.fire('Error', 'No products found to export', 'error');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error during export:', error);\r\n        Swal.fire('Error', 'Something went wrong while exporting.', 'error');\r\n      }\r\n    }\r\n\r\n\r\n\r\n    const uploadCSV = (event) => {\r\n  const file = event.target.files[0];\r\n  if (!file) {\r\n    alert(\"Please select a file to upload\");\r\n    return;\r\n  }\r\n\r\n  if (file.type !== \"text/csv\") {\r\n    alert(\"Please upload a valid CSV file\");\r\n    return;\r\n  }\r\n\r\n  Papa.parse(file, {\r\n    complete: (result) => {\r\n      jsonData.value = result.data; // Parsed CSV data\r\n\r\n      // Generate table headers dynamically\r\n      if (jsonData.value.length > 0) {\r\n        tableHeaders.value = Object.keys(jsonData.value[0]);\r\n      }\r\n\r\n      // Remove 'x' or 'X' from SKU in the parsed data\r\n      jsonData.value.forEach((row) => {\r\n        if (row.sku) {\r\n          row.sku = row.sku.replace(/^x/i, ''); // Remove 'x' or 'X' from SKU\r\n        }\r\n      });\r\n    },\r\n    header: true,\r\n    skipEmptyLines: true,\r\n  });\r\n};\r\n\r\n// Validate CSV Data\r\nconst validateCSVData = async (data) => {\r\n  const validData = [];\r\n  const invalidData = [];\r\n\r\n  // Define required fields\r\n  const requiredFields = ['sku', 'name', 'price', 'cost'];\r\n\r\n  for (const row of data) {\r\n    let isValid = true;\r\n\r\n    // Check if required fields are present (excluding `sku`)\r\n    requiredFields.forEach((field) => {\r\n      if (field !== 'sku' && !row[field]) {\r\n        isValid = false; // Mark as invalid if any field except `sku` is missing\r\n      }\r\n    });\r\n\r\n    // Ensure the SKU is cleaned up (remove 'x' or 'X')\r\n    if (row.sku) {\r\n      row.sku = row.sku.replace(/^x/i, ''); // Remove 'x' or 'X' from SKU\r\n    }\r\n\r\n    // Handle missing `sku`: generate a new one if valid so far\r\n    if (isValid && (!row.sku || row.sku.trim() === '')) {\r\n      row.sku = await autoGenerateSKU();\r\n    }\r\n\r\n    // Further validation if `sku` is provided\r\n    if (isValid && row.sku) {\r\n      if (!validateSku(row.sku) || !validateNumber(row.price) || !validateNumber(row.cost)) {\r\n        isValid = false; // Invalid format\r\n      } else {\r\n        // Check if SKU already exists\r\n        const exists = await checkSKU(row.sku);\r\n        if (exists) {\r\n          isValid = false; // SKU already exists\r\n        }\r\n      }\r\n    }\r\n\r\n    // Add the row to the appropriate list\r\n    if (isValid) {\r\n      validData.push(row);\r\n    } else {\r\n      invalidData.push(row);\r\n    }\r\n  }\r\n\r\n  return { validData, invalidData };\r\n};\r\n\r\n// Ensure that `validateSku` validates that the SKU is exactly 13 digits after cleaning\r\nconst validateSku = (sku) => {\r\n  // Ensure SKU is exactly 13 digits long\r\n  return /^[0-9]{13}$/.test(sku);\r\n};\r\n\r\n// Ensure that `validateNumber` handles all types of valid numbers\r\nconst validateNumber = (value) => {\r\n  if (typeof value === 'string') {\r\n    value = value.trim();\r\n  }\r\n  // Ensure value is a positive number (including decimals)\r\n  return /^[0-9]+(\\.[0-9]{1,2})?$/.test(value) && parseFloat(value) > 0;\r\n};\r\n    const checkSKU = async (sku) => {\r\n      try {\r\n        const response = await axios.get(`${apiURL}/check_sku/${sku}`);\r\n        console.log(response.data.exists);\r\n        return response.data.exists; // Return true if SKU exists\r\n      } catch (error) {\r\n        console.error('Error checking SKU:', error);\r\n        return true; // Assume false if error occurs\r\n      }\r\n    };\r\n\r\n    const autoGenerateSKU = async () => {\r\n      let sku = generateEAN13();\r\n\r\n      // Loop to regenerate SKU until it's unique\r\n      while (true) {\r\n        try {\r\n          // Check if SKU exists in the database\r\n          const response = await axios.get(`${apiURL}/check_sku/${sku}`);\r\n\r\n          if (!response.data.exists) {\r\n            // If SKU is unique, return it\r\n            return sku;\r\n          } else {\r\n            // Regenerate SKU if it exists\r\n            sku = generateEAN13();\r\n          }\r\n        } catch (error) {\r\n          console.error('Error checking SKU:', error);\r\n          return null; // Exit if there's an error\r\n        }\r\n      }\r\n    };\r\n\r\n\r\n    const generateEAN13 = () => {\r\n      let digits = '4';\r\n      for (let i = 0; i < 11; i++) {\r\n        digits += Math.floor(Math.random() * 10).toString();\r\n      }\r\n\r\n      let sumOdd = 0;\r\n      let sumEven = 0;\r\n\r\n      for (let i = 0; i < 12; i++) {\r\n        const digit = parseInt(digits[i], 10);\r\n        if (i % 2 === 0) {\r\n          sumOdd += digit;\r\n        } else {\r\n          sumEven += digit;\r\n        }\r\n      }\r\n\r\n      const totalSum = sumOdd + (sumEven * 3);\r\n      const checksum = (10 - (totalSum % 10)) % 10;\r\n\r\n      return digits + checksum;\r\n    };\r\n\r\n    const submitImport = async () => {\r\n  loading.value = true;\r\n\r\n  // Ensure jsonData is defined and has data\r\n  if (!jsonData.value || jsonData.value.length === 0) {\r\n    Swal.fire('Error', 'No data to import', 'error');\r\n    loading.value = false;\r\n    return;\r\n  }\r\n\r\n  try {\r\n    // Await validation of the CSV data\r\n    const { validData, invalidData } = await validateCSVData(jsonData.value);\r\n\r\n    // Log the valid and invalid data\r\n    console.log(\"Valid Data:\", validData);\r\n    console.log(\"Invalid Data:\", invalidData);\r\n\r\n    // If there are no valid rows, display an error and stop processing\r\n    if (validData.length === 0) {\r\n      Swal.fire('Error', 'No valid data found in the CSV file', 'error');\r\n      loading.value = false;\r\n      return;\r\n    }\r\n\r\n    // // Send valid data to the backend\r\n    // const response = await axios.post(`${apiURL}/import_products`, { products: validData });\r\n\r\n    // if (response.data.success) {\r\n      Swal.fire('Success', `${validData.length} products successfully imported`, 'success');\r\n      jsonData.value = []; // Clear data after successful import\r\n    // } else {\r\n    //   Swal.fire('Error', 'Failed to import products', 'error');\r\n    // }\r\n\r\n    // Show a warning for invalid rows if any\r\n    if (invalidData.length > 0) {\r\n      Swal.fire('Warning', `${invalidData.length} rows were skipped due to missing or invalid fields.`, 'warning');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error importing products:', error);\r\n    Swal.fire('Error', 'Something went wrong while importing.', 'error');\r\n  } finally {\r\n    loading.value = false;\r\n  }\r\n};\r\n\r\n\r\n    onMounted(async () => {\r\n      try {\r\n        await nextTick()\r\n        await getProductList();\r\n\r\n        nextTick(() => {\r\n          const table = document.querySelector('.table');\r\n          if (table) {\r\n            $(table).DataTable();\r\n          }\r\n        })\r\n        feather.replace();\r\n\r\n\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    });\r\n\r\n    onBeforeUnmount(() => {\r\n      feather.replace();\r\n      $(select.value).select2('destroy');\r\n    });\r\n\r\n\r\n    return {\r\n      products,\r\n      loading,\r\n      select,\r\n      apiURL,\r\n      imageURL,\r\n      deleteAlert,\r\n      exportCSVAlert,\r\n      exportPDFAlert,\r\n      uploadCSV,\r\n      submitImport,\r\n      jsonData,\r\n      tableHeaders\r\n    };\r\n  }\r\n\r\n\r\n};\r\n</script>\r\n\r\n<style>\r\n.table-wrapper {\r\n  max-height: 100px;\r\n  overflow-y: auto;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n}\r\n\r\n.table {\r\n  width: 100%;\r\n  margin: 0;\r\n  border-collapse: collapse;\r\n}\r\n\r\n.table-wrapper th,\r\n.table-wrapper td {\r\n  text-align: left;\r\n  padding: 8px;\r\n  border: 1px solid #ddd;\r\n}\r\n\r\n.table-wrapper th {\r\n  background-color: #f4f4f4;\r\n  font-weight: bold;\r\n}\r\n\r\n.table-wrapper tr:nth-child(even) {\r\n  background-color: #f9f9f9;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}