{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport { ref, computed, onMounted, onBeforeUnmount } from 'vue';\nimport axios from 'axios';\nimport 'sweetalert2';\nexport default {\n  setup() {\n    // Reactive Variables\n    const apiURL = process.env.VUE_APP_URL;\n    const imgURL = process.env.VUE_APP_IMAGE_URL;\n    const selectedCategory = ref('all');\n    const barcode = ref('');\n    const barcodeInput = ref(null);\n    const cart = ref([]);\n    const categories = ref([]);\n    const subtotal = ref(0);\n    const VAT = ref(12); // Example tax rate\n    const discount = ref(0);\n    const barcodeError = ref({\n      message: null\n    });\n    const paymentError = ref({\n      message: null\n    });\n    const lastAddedProduct = ref(null);\n    const stockQuantity = ref(null); // Store the stock quantity of the last fetched product\n    const newQuantity = ref(1); // New quantity input for the modal\n    const quantityError = ref(null);\n    const change = ref(null);\n    const clientPayment = ref(null);\n    const products = ref([]);\n    const transactionId = ref('');\n    const transactionError = ref(null);\n    const returnItems = ref([]);\n    let isPaymentOpen = false;\n    let isReturnOpen = false;\n\n    // Computed Variables\n    const total = computed(() => subtotal.value + subtotal.value * VAT.value / 100 - discount.value);\n\n    // Reusable Modal Toggle Function\n    const toggleModal = (modalId, show = true) => {\n      const modalElement = document.getElementById(modalId);\n      if (modalElement) {\n        const modal = bootstrap.Modal.getOrCreateInstance(modalElement);\n        if (show) {\n          modal.show();\n          modalElement.addEventListener('shown.bs.modal', () => {\n            const inputField = modalElement.querySelector('input');\n            if (inputField) inputField.focus(); // Focus on input if available\n          });\n        } else {\n          modal.hide();\n        }\n      } else {\n        console.error(`Modal with ID '${modalId}' not found.`);\n      }\n    };\n\n    // Methods\n    const openPaymentModal = () => {\n      toggleModal('payment-modal', true);\n      isPaymentOpen = true;\n    };\n    const closePaymentModal = () => {\n      toggleModal('payment-modal', false);\n      isPaymentOpen = false;\n    };\n    const openReturnModal = () => {\n      transactionId.value = '';\n      returnItems.value = [];\n      transactionError.value = null;\n      toggleModal('return-modal', true);\n      isReturnOpen = true;\n    };\n    const closeReturnModal = () => {\n      toggleModal('return-modal', false);\n      isReturnOpen = false;\n    };\n    const openUpdateQuantityModal = () => {\n      if (lastAddedProduct.value) {\n        toggleModal('update-quantity-modal', true);\n      } else {\n        barcodeError.value.message = \"No product in cart yet.\";\n      }\n    };\n    const closeUpdateQuantityModal = () => {\n      toggleModal('update-quantity-modal', false);\n    };\n    const processPayment = async () => {\n      if (clientPayment.value === null || clientPayment.value < total.value) {\n        paymentError.value.message = `Payment must be at least $${total.value}.`;\n        return;\n      }\n      try {\n        const transactionData = {\n          cart: cart.value.map(item => ({\n            _id: item._id,\n            name: item.name,\n            price: item.price,\n            quantity: item.quantity\n          })),\n          paymentMethod: 'Cash',\n          discounts: discount.value,\n          netAmount: subtotal.value,\n          VAT: subtotal.value * VAT.value / 100,\n          totalAmount: total.value,\n          cash: clientPayment.value,\n          change: change.value,\n          status: 'Completed',\n          employee: 'JohnDoe'\n        };\n        const response = await axios.post(`${apiURL}/commit_transaction`, transactionData);\n        if (response.data.success) {\n          change.value = (clientPayment.value - total.value).toFixed(2);\n          clientPayment.value = null;\n          paymentError.value.message = null;\n          Swal.fire({\n            title: 'Success!',\n            text: 'Transaction successful.',\n            icon: 'success',\n            timer: 1500,\n            showConfirmButton: false\n          });\n          closePaymentModal(); // Use reusable function\n          cart.value = [];\n          subtotal.value = 0;\n          discount.value = 0;\n        } else {\n          paymentError.value.message = response.data.message || 'Failed to process transaction.';\n        }\n      } catch (error) {\n        paymentError.value.message = 'An error occurred while processing the payment.';\n      }\n    };\n    const processReturn = async () => {\n      const itemsToReturn = returnItems.value.filter(item => item.selected && item.returnQuantity > 0);\n      if (itemsToReturn.length === 0) {\n        transactionError.value = 'Please select at least one item to return.';\n        return;\n      }\n      try {\n        const response = await axios.post(`${apiURL}/return_transaction/${transactionId.value}`, {\n          returnedItems: itemsToReturn,\n          employee: 'JohnDoe'\n        });\n        if (response.data.success) {\n          Swal.fire({\n            title: 'Returned!',\n            text: 'Transaction successful.',\n            icon: 'success',\n            timer: 1500,\n            showConfirmButton: false\n          });\n          closeReturnModal(); // Use reusable function\n        } else {\n          Swal.fire({\n            title: 'Error',\n            text: response.data.message || 'Failed to process the return.',\n            icon: 'error'\n          });\n        }\n      } catch (error) {\n        Swal.fire({\n          title: 'Error',\n          text: 'An error occurred while processing the return.',\n          icon: 'error'\n        });\n      }\n    };\n\n    // Lifecycle Hooks\n    onMounted(() => {\n      if (barcodeInput.value) barcodeInput.value.focus();\n      window.addEventListener('keydown', event => {\n        if (event.key === 'F1') {\n          event.preventDefault();\n          if (total.value > 0) openPaymentModal();\n        }\n      });\n    });\n    onBeforeUnmount(() => {\n      window.removeEventListener('keydown', handleKeydown);\n    });\n    return {\n      categories,\n      selectedCategory,\n      barcode,\n      barcodeInput,\n      cart,\n      subtotal,\n      VAT,\n      discount,\n      total,\n      barcodeError,\n      lastAddedProduct,\n      stockQuantity,\n      newQuantity,\n      quantityError,\n      openPaymentModal,\n      closePaymentModal,\n      openReturnModal,\n      closeReturnModal,\n      openUpdateQuantityModal,\n      closeUpdateQuantityModal,\n      processPayment,\n      processReturn\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","onBeforeUnmount","axios","setup","apiURL","process","env","VUE_APP_URL","imgURL","VUE_APP_IMAGE_URL","selectedCategory","barcode","barcodeInput","cart","categories","subtotal","VAT","discount","barcodeError","message","paymentError","lastAddedProduct","stockQuantity","newQuantity","quantityError","change","clientPayment","products","transactionId","transactionError","returnItems","isPaymentOpen","isReturnOpen","total","value","toggleModal","modalId","show","modalElement","document","getElementById","modal","bootstrap","Modal","getOrCreateInstance","addEventListener","inputField","querySelector","focus","hide","console","error","openPaymentModal","closePaymentModal","openReturnModal","closeReturnModal","openUpdateQuantityModal","closeUpdateQuantityModal","processPayment","transactionData","map","item","_id","name","price","quantity","paymentMethod","discounts","netAmount","totalAmount","cash","status","employee","response","post","data","success","toFixed","Swal","fire","title","text","icon","timer","showConfirmButton","processReturn","itemsToReturn","filter","selected","returnQuantity","length","returnedItems","window","event","key","preventDefault","removeEventListener","handleKeydown"],"sources":["C:\\Users\\Administrator\\OneDrive\\Desktop\\POSExpress\\frontend\\src\\components\\Apps\\POS.vue"],"sourcesContent":["<template>\r\n  <div class=\"main-wrapper\">\r\n    <div class=\"header\">\r\n      <!-- Header Content -->\r\n    </div>\r\n\r\n    <div class=\"page-wrapper pos-pg-wrapper ms-0\">\r\n      <div class=\"content pos-design p-0\">\r\n        <div class=\"row align-items-start pos-wrapper\">\r\n          <!-- Category Sidebar -->\r\n<!-- Category Sidebar -->\r\n<div class=\"col-md-3 col-lg-2 ps-0\">\r\n  <div class=\"category-list\">\r\n    <h5>Categories</h5>\r\n    <ul \r\n      class=\"list-group text-center overflow-auto\" \r\n      style=\"max-height: 100vh; overflow-y: auto; scrollbar-width: thin;\">\r\n\r\n      <li \r\n        v-for=\"category in categories\" \r\n        :key=\"category.name\" \r\n        class=\"list-group-item\"\r\n        :class=\"{ 'active': selectedCategory === category.name }\" \r\n        @click=\"selectCategory(category.name)\">\r\n        <a href=\"javascript:void(0);\">{{ category.name }}</a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n\r\n\r\n          <!-- Product Display -->\r\n          <div class=\"col-md-12 col-lg-6\">\r\n            <div class=\"row bg-white px-4 pb-5 mx-3 mt-2\">\r\n              <h4>Enter Barcode:</h4>\r\n              <input v-model=\"barcode\" ref=\"barcodeInput\"\r\n                class=\"form-control bg-light border border-dark fs-1 mb-2 mt-3\" type=\"text\" @keyup.enter=\"addProduct()\"\r\n                placeholder=\"Scan Barcode\" />\r\n              <p v-if=\"barcodeError.message\" class=\"text-danger\">ERROR: {{ barcodeError.message }}</p>\r\n\r\n            </div>\r\n            <div class=\"pos-wrapper\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12 col-lg-12\">\r\n                  <div class=\"pos-products\">\r\n                    <div class=\"tabs_container\">\r\n                      <!-- Display products based on selected category -->\r\n                      <div v-if=\"products.length\" class=\"tab_content active\">\r\n                        <div class=\"row\">\r\n                          <div v-for=\"product in products\" :key=\"product.id\"\r\n                            class=\"col-sm-2 col-md-12 col-lg-5 col-xl-5 product-item\">\r\n                            <div class=\"product-info default-cover card\" @click=\"addProduct(product)\">\r\n                              <a href=\"javascript:void(0);\" class=\"img-bg\">\r\n                                <img v-if=\"product.image\" :src=\"`${imgURL}${product.image}`\" alt=\"Product\" />\r\n                                <img v-else :src=\"`/img/icons/no-image-icon.png`\" />\r\n                                <span><i data-feather=\"check\"></i></span>\r\n                              </a>\r\n                              <h6 class=\"product-name\">\r\n                                <a href=\"javascript:void(0);\">{{ product.name }}</a>\r\n                              </h6>\r\n                              <div class=\"d-flex align-items-center justify-content-between price\">\r\n                                <span>Stock: {{ product.quantity }}</span>\r\n                                <p>${{ product.price }}</p>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                        </div>\r\n                      </div>\r\n\r\n                      <!-- If no products, show a message -->\r\n                      <div v-else class=\"no-products-message\">\r\n                        <p>No products available in this category.</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Order List and Summary -->\r\n          <div class=\"col-md-12 col-lg-4 ps-0\">\r\n            <aside class=\"product-order-list\">\r\n              <div class=\"head d-flex align-items-center justify-content-between w-100\">\r\n                <h5>Order List</h5>\r\n                <a class=\"confirm-text\" href=\"javascript:void(0);\"><i data-feather=\"trash-2\"\r\n                    class=\"feather-16 text-danger\"></i></a>\r\n              </div>\r\n\r\n              <div class=\"product-added block-section\">\r\n                <div class=\"product-wrap\">\r\n                  <table class=\"table table-responsive\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Product</th>\r\n                        <th>Price</th>\r\n                        <th>Quantity</th>\r\n                        <th>Total</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr v-for=\"item in cart\" :key=\"item.id\">\r\n                        <td>{{ item.name }}</td>\r\n                        <td>{{ item.price }}</td>\r\n                        <td>{{ item.quantity }}</td>\r\n                        <td>{{ item.quantity * item.price }}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"block-section\">\r\n                <h6>Order Summary</h6>\r\n                <table class=\"table table-responsive table-borderless\">\r\n                  <tr>\r\n                    <td>Sub Total</td>\r\n                    <td class=\"text-end\">${{ subtotal }}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>VAT</td>\r\n                    <td class=\"text-end\">{{ VAT }}%</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td class=\"danger\">Discount</td>\r\n                    <td class=\"danger text-end\">${{ discount }}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Total</td>\r\n                    <td class=\"text-end\">${{ total.toFixed(2) }}</td>\r\n                  </tr>\r\n                  <tr v-if=\"change\">\r\n                    <td>Change</td>\r\n                    <td class=\"text-end\">${{ change }}</td>\r\n                  </tr>\r\n                </table>\r\n              </div>\r\n            </aside>\r\n            <div class=\"btn-row d-sm-flex align-items-center justify-content-between\">\r\n              <a href=\"javascript:void(0);\" class=\"btn btn-success btn-icon flex-fill position-relative p-4 fs-6\"\r\n                data-bs-toggle=\"modal\" data-bs-target=\"payment-modal\">\r\n                <span class=\"keyboard-key\">F1</span>\r\n                <span class=\"me-1 d-flex align-items-center\">\r\n                  <i data-feather=\"credit-card\" class=\"feather-16\"></i>\r\n                </span>Pay\r\n              </a>\r\n              <a href=\"javascript:void(0);\" class=\"btn btn-danger btn-icon flex-fill position-relative p-4 fs-6\">\r\n                <span class=\"keyboard-key\">F2</span>\r\n                <span class=\"me-1 d-flex align-items-center\">\r\n                  <i data-feather=\"trash-2\" class=\"feather-16\"></i>\r\n                </span>Void\r\n              </a>\r\n\r\n              <a href=\"javascript:void(0);\" class=\"btn btn-info btn-icon flex-fill position-relative p-4 fs-6\"\r\n                data-bs-toggle=\"modal\" data-bs-target=\"#hold-order\" @click=\"openReturnModal\">\r\n                <span class=\"keyboard-key\">F3</span>\r\n                <span class=\"me-1 d-flex align-items-center\">\r\n                  <i data-feather=\"corner-up-right\" class=\"feather-16\"></i>\r\n                </span>Return\r\n              </a>\r\n\r\n            </div>\r\n\r\n          </div>\r\n          <!-- Action Buttons -->\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- Modal for Updating Quantity -->\r\n  <div class=\"modal fade\" id=\"update-quantity-modal\" tabindex=\"-1\" aria-labelledby=\"update-quantity-modalLabel\"\r\n    aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"update-quantity-modalLabel\">Update Quantity</h5>\r\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div class=\"form-group\">\r\n            <label for=\"new-quantity\">Quantity</label>\r\n            <input type=\"number\" id=\"new-quantity\" class=\"form-control\" v-model=\"newQuantity\" min=\"1\"\r\n              @keydown=\"handleModalKeydown\" />\r\n          </div>\r\n          <p v-if=\"quantityError\" class=\"text-danger\">{{ quantityError }}</p>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n          <button type=\"button\" class=\"btn btn-primary\" @click=\"updateProductQuantity\">Update</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Modal for Payment -->\r\n  <div class=\"modal fade\" id=\"payment-modal\" tabindex=\"-1\" aria-labelledby=\"payment-modalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"payment-modalLabel\">Payment</h5>\r\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div class=\"form-group\">\r\n            <label for=\"payment\">Amount to Pay: ${{ total }}</label>\r\n            <input type=\"number\" id=\"payment\" class=\"form-control\" v-model=\"clientPayment\" min=\"1\"\r\n              @keydown=\"handlePaymentKeydown\" placeholder=\"Enter payment amount\" />\r\n          </div>\r\n          <p v-if=\"paymentError.message\" class=\"text-danger\">{{ paymentError.message }}</p>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n          <button type=\"button\" class=\"btn btn-primary\" @click=\"processPayment\">Process Payment</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"modal fade\" id=\"return-modal\" tabindex=\"-1\" aria-labelledby=\"return-modalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"return-modalLabel\">Enter Transaction ID for Return</h5>\r\n          <button type=\"button\" class=\"btn-close\" id=\"return-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <input v-model=\"transactionId\" class=\"form-control\" type=\"text\" id=\"return-transaction\"\r\n            placeholder=\"Transaction ID\" />\r\n          <p v-if=\"transactionError\" class=\"text-danger\">{{ transactionError }}</p>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n          <button type=\"button\" class=\"btn btn-primary\" @click=\"fetchTransactionItems\">Fetch Items</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Modal for Return Item Selection -->\r\n  <div class=\"modal fade\" id=\"select-return-items-modal\" tabindex=\"-1\" aria-labelledby=\"select-return-items-modalLabel\"\r\n    aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"select-return-items-modalLabel\">Select Items for Return</h5>\r\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <table class=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Select</th>\r\n                <th>Product</th>\r\n                <th>Quantity</th>\r\n                <th>Return Quantity</th>\r\n                <th>Price</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr v-for=\"item in returnItems\" :key=\"item._id\">\r\n                <td>\r\n                  <input type=\"checkbox\" v-model=\"item.selected\" />\r\n                </td>\r\n                <td>{{ item.name }}</td>\r\n                <td>{{ item.quantity }}</td>\r\n                <td>\r\n                  <input type=\"number\" v-model=\"item.returnQuantity\" :max=\"item.quantity\" min=\"1\" />\r\n                </td>\r\n                <td>${{ item.price }}</td>\r\n              </tr>\r\n\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n          <button type=\"button\" class=\"btn btn-primary\" @click=\"processReturn\">Process Return</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <!-- Void Transaction Modal -->\r\n  <div class=\"modal fade\" id=\"void-transaction-modal\" tabindex=\"-1\" aria-labelledby=\"voidTransactionModalLabel\"\r\n    aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"voidTransactionModalLabel\">Void Transaction</h5>\r\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <form @submit.prevent=\"processVoid\">\r\n            <div class=\"mb-3\">\r\n              <label for=\"transaction-id\" class=\"form-label\">Transaction ID</label>\r\n              <input type=\"text\" id=\"transaction-id\" class=\"form-control\" v-model=\"transactionId\"\r\n                placeholder=\"Enter Transaction ID\" required>\r\n            </div>\r\n            <p v-if=\"transactionError\" class=\"text-danger\">{{ transactionError }}</p>\r\n          </form>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\r\n          <button type=\"button\" class=\"btn btn-danger\" @click=\"processVoid\">Void Transaction</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</template>\r\n<script>\r\nimport { ref, computed, onMounted, onBeforeUnmount } from 'vue';\r\nimport axios from 'axios';\r\nimport 'sweetalert2';\r\n\r\nexport default {\r\n  setup() {\r\n    // Reactive Variables\r\n    const apiURL = process.env.VUE_APP_URL;\r\n    const imgURL = process.env.VUE_APP_IMAGE_URL;\r\n    const selectedCategory = ref('all');\r\n    const barcode = ref('');\r\n    const barcodeInput = ref(null);\r\n    const cart = ref([]);\r\n    const categories = ref([]);\r\n    const subtotal = ref(0);\r\n    const VAT = ref(12); // Example tax rate\r\n    const discount = ref(0);\r\n    const barcodeError = ref({ message: null });\r\n    const paymentError = ref({ message: null });\r\n    const lastAddedProduct = ref(null);\r\n    const stockQuantity = ref(null); // Store the stock quantity of the last fetched product\r\n    const newQuantity = ref(1); // New quantity input for the modal\r\n    const quantityError = ref(null);\r\n    const change = ref(null);\r\n    const clientPayment = ref(null);\r\n    const products = ref([]);\r\n    const transactionId = ref('');\r\n    const transactionError = ref(null);\r\n    const returnItems = ref([]);\r\n\r\n    let isPaymentOpen = false;\r\n    let isReturnOpen = false;\r\n\r\n    // Computed Variables\r\n    const total = computed(() =>\r\n      subtotal.value + (subtotal.value * VAT.value) / 100 - discount.value\r\n    );\r\n\r\n    // Reusable Modal Toggle Function\r\n    const toggleModal = (modalId, show = true) => {\r\n      const modalElement = document.getElementById(modalId);\r\n      if (modalElement) {\r\n        const modal = bootstrap.Modal.getOrCreateInstance(modalElement);\r\n        if (show) {\r\n          modal.show();\r\n          modalElement.addEventListener('shown.bs.modal', () => {\r\n            const inputField = modalElement.querySelector('input');\r\n            if (inputField) inputField.focus(); // Focus on input if available\r\n          });\r\n        } else {\r\n          modal.hide();\r\n        }\r\n      } else {\r\n        console.error(`Modal with ID '${modalId}' not found.`);\r\n      }\r\n    };\r\n\r\n    // Methods\r\n    const openPaymentModal = () => {\r\n      toggleModal('payment-modal', true);\r\n      isPaymentOpen = true;\r\n    };\r\n\r\n    const closePaymentModal = () => {\r\n      toggleModal('payment-modal', false);\r\n      isPaymentOpen = false;\r\n    };\r\n\r\n    const openReturnModal = () => {\r\n      transactionId.value = '';\r\n      returnItems.value = [];\r\n      transactionError.value = null;\r\n      toggleModal('return-modal', true);\r\n      isReturnOpen = true;\r\n    };\r\n\r\n    const closeReturnModal = () => {\r\n      toggleModal('return-modal', false);\r\n      isReturnOpen = false;\r\n    };\r\n\r\n    const openUpdateQuantityModal = () => {\r\n      if (lastAddedProduct.value) {\r\n        toggleModal('update-quantity-modal', true);\r\n      } else {\r\n        barcodeError.value.message = \"No product in cart yet.\";\r\n      }\r\n    };\r\n\r\n    const closeUpdateQuantityModal = () => {\r\n      toggleModal('update-quantity-modal', false);\r\n    };\r\n\r\n    const processPayment = async () => {\r\n      if (clientPayment.value === null || clientPayment.value < total.value) {\r\n        paymentError.value.message = `Payment must be at least $${total.value}.`;\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const transactionData = {\r\n          cart: cart.value.map(item => ({\r\n            _id: item._id,\r\n            name: item.name,\r\n            price: item.price,\r\n            quantity: item.quantity,\r\n          })),\r\n          paymentMethod: 'Cash',\r\n          discounts: discount.value,\r\n          netAmount: subtotal.value,\r\n          VAT: (subtotal.value * VAT.value) / 100,\r\n          totalAmount: total.value,\r\n          cash: clientPayment.value,\r\n          change: change.value,\r\n          status: 'Completed',\r\n          employee: 'JohnDoe',\r\n        };\r\n\r\n        const response = await axios.post(`${apiURL}/commit_transaction`, transactionData);\r\n\r\n        if (response.data.success) {\r\n          change.value = (clientPayment.value - total.value).toFixed(2);\r\n          clientPayment.value = null;\r\n          paymentError.value.message = null;\r\n\r\n          Swal.fire({\r\n            title: 'Success!',\r\n            text: 'Transaction successful.',\r\n            icon: 'success',\r\n            timer: 1500,\r\n            showConfirmButton: false,\r\n          });\r\n\r\n          closePaymentModal(); // Use reusable function\r\n          cart.value = [];\r\n          subtotal.value = 0;\r\n          discount.value = 0;\r\n        } else {\r\n          paymentError.value.message = response.data.message || 'Failed to process transaction.';\r\n        }\r\n      } catch (error) {\r\n        paymentError.value.message = 'An error occurred while processing the payment.';\r\n      }\r\n    };\r\n\r\n    const processReturn = async () => {\r\n      const itemsToReturn = returnItems.value.filter(item => item.selected && item.returnQuantity > 0);\r\n\r\n      if (itemsToReturn.length === 0) {\r\n        transactionError.value = 'Please select at least one item to return.';\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.post(`${apiURL}/return_transaction/${transactionId.value}`, {\r\n          returnedItems: itemsToReturn,\r\n          employee: 'JohnDoe',\r\n        });\r\n\r\n        if (response.data.success) {\r\n          Swal.fire({\r\n            title: 'Returned!',\r\n            text: 'Transaction successful.',\r\n            icon: 'success',\r\n            timer: 1500,\r\n            showConfirmButton: false,\r\n          });\r\n\r\n          closeReturnModal(); // Use reusable function\r\n        } else {\r\n          Swal.fire({\r\n            title: 'Error',\r\n            text: response.data.message || 'Failed to process the return.',\r\n            icon: 'error',\r\n          });\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          title: 'Error',\r\n          text: 'An error occurred while processing the return.',\r\n          icon: 'error',\r\n        });\r\n      }\r\n    };\r\n\r\n    // Lifecycle Hooks\r\n    onMounted(() => {\r\n      if (barcodeInput.value) barcodeInput.value.focus();\r\n      window.addEventListener('keydown', event => {\r\n        if (event.key === 'F1') {\r\n          event.preventDefault();\r\n          if (total.value > 0) openPaymentModal();\r\n        }\r\n      });\r\n    });\r\n\r\n    onBeforeUnmount(() => {\r\n      window.removeEventListener('keydown', handleKeydown);\r\n    });\r\n\r\n    return {\r\n      categories,\r\n      selectedCategory,\r\n      barcode,\r\n      barcodeInput,\r\n      cart,\r\n      subtotal,\r\n      VAT,\r\n      discount,\r\n      total,\r\n      barcodeError,\r\n      lastAddedProduct,\r\n      stockQuantity,\r\n      newQuantity,\r\n      quantityError,\r\n      openPaymentModal,\r\n      closePaymentModal,\r\n      openReturnModal,\r\n      closeReturnModal,\r\n      openUpdateQuantityModal,\r\n      closeUpdateQuantityModal,\r\n      processPayment,\r\n      processReturn,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<style scoped>\r\n/* Container for the product display */\r\n.tabs_container {\r\n  min-height: 620px;\r\n  max-height: 620px;\r\n  overflow-y: auto;\r\n  background: #fff;\r\n  padding: 20px;\r\n\r\n}\r\n\r\n/* Flex container for product display */\r\n.tab_content {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 1rem;\r\n  /* Space between items */\r\n  justify-content: space-between;\r\n}\r\n\r\n/* Ensure product-info fits within columns properly */\r\n.product-info {\r\n  position: relative;\r\n  padding: 15px;\r\n  background: #f9f9f9;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  transition: transform 0.2s ease-in-out;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  /* Optional shadow */\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  /* Flex to ensure each card takes equal width */\r\n  flex: 1 1 calc(33.33% - 1rem);\r\n  /* Default to 3 items per row */\r\n  height: 100%;\r\n\r\n}\r\n\r\n.product-info img {\r\n  width: 100%;\r\n  height: 150px;\r\n  /* Fixed height for images */\r\n  object-fit: cover;\r\n  /* Ensure images cover the area proportionally */\r\n}\r\n\r\n.product-info:hover {\r\n  transform: scale(1.05);\r\n  /* Slight zoom effect on hover */\r\n}\r\n\r\n/* Mobile and tablet adjustments for card layout */\r\n@media (max-width: 1200px) {\r\n  .product-info {\r\n    flex: 1 1 calc(25% - 1rem);\r\n    /* 4 items per row for large screens */\r\n    height: 300px;\r\n    /* Set height for large screens */\r\n  }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .product-info {\r\n    flex: 1 1 calc(33.33% - 1rem);\r\n    /* 3 items per row for medium screens */\r\n    height: 250px;\r\n    /* Adjust height for medium screens */\r\n  }\r\n}\r\n\r\n@media (max-width: 576px) {\r\n  .product-info {\r\n    flex: 1 1 calc(50% - 1rem);\r\n    /* 2 items per row for small screens */\r\n    height: 200px;\r\n    /* Adjust height for small screens */\r\n  }\r\n}\r\n\r\n/* Category List Styling */\r\n.category-list {\r\n  padding: 15px;\r\n  background-color: #f9f9f9;\r\n  border-right: 1px solid #ddd;\r\n}\r\n\r\n.category-list ul {\r\n  list-style-type: none;\r\n  padding-left: 0;\r\n}\r\n\r\n.category-list li {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.category-list a {\r\n  text-decoration: none;\r\n  color: #333;\r\n  font-size: 16px;\r\n  padding: 8px 10px;\r\n  border-radius: 4px;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.category-list a:active {\r\n  color: #fff;\r\n}\r\n\r\n.category-list a:hover {\r\n  color: #fff;\r\n\r\n}\r\n\r\n.list-group-item.active {\r\n  background-color: #22A95E;\r\n  /* Green background for active list item */\r\n  border-color: #22A95E;\r\n  /* Optional: Match border with the active color */\r\n}\r\n\r\n.list-group-item.active a {\r\n  color: #fff;\r\n  /* Make the text white inside the active list item */\r\n}\r\n\r\n/* Keyboard Key Styling for the UI */\r\n.keyboard-key {\r\n  position: absolute;\r\n  top: 5px;\r\n  left: 5px;\r\n  font-size: 12px;\r\n  background-color: rgba(0, 0, 0, 0.1);\r\n  color: white;\r\n  padding: 5px 8px;\r\n  border-radius: 4px;\r\n  font-family: 'Courier New', monospace;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.product-wrap {\r\n  max-height: 100%;\r\n\r\n  overflow: hidden;\r\n\r\n}\r\n\r\n.table {\r\n  width: 100%;\r\n  table-layout: auto;\r\n  word-wrap: break-word;\r\n\r\n}\r\n\r\n.table th,\r\n.table td {\r\n  white-space: normal;\r\n\r\n  word-break: break-word;\r\n\r\n  text-align: left;\r\n\r\n}\r\n\r\n.product-name-cell {\r\n  max-width: 200px;\r\n  /* Adjust as needed for column width */\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  /* Optional: adds \"...\" for long text */\r\n  white-space: normal;\r\n}\r\n\r\n.quantity-input {\r\n  width: 50px;\r\n  /* Ensures quantity input field doesn't take too much space */\r\n  text-align: center;\r\n}\r\n\r\n.no-products-message {\r\n  display: flex;\r\n  justify-content: center;\r\n  /* Center horizontally */\r\n  align-items: center;\r\n  /* Center vertically */\r\n  height: 200px;\r\n  /* Adjust the height as needed */\r\n  text-align: center;\r\n  /* Center the text */\r\n  font-size: 18px;\r\n  /* Optional: Adjust the font size */\r\n  color: #777;\r\n  /* Optional: Set a color for the text */\r\n}\r\n.category-list ul::-webkit-scrollbar {\r\n  width: 8px;\r\n}\r\n\r\n.category-list ul::-webkit-scrollbar-thumb {\r\n  background-color: #ccc;\r\n  border-radius: 4px;\r\n}\r\n\r\n.category-list ul::-webkit-scrollbar-thumb:hover {\r\n  background-color: #aaa;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}