{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"row px-5\"\n};\nconst _hoisted_2 = {\n  class: \"row\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_4 = {\n  ref: \"svgRef\"\n};\nconst _hoisted_5 = {\n  key: 1,\n  class: \"product-name text-center\"\n};\nconst _hoisted_6 = {\n  class: \"row ps-4 pe-3\"\n};\nconst _hoisted_7 = {\n  class: \"row\"\n};\nconst _hoisted_8 = {\n  class: \"show-name-label\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [$setup.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString($setup.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), (_openBlock(), _createElementBlock(\"svg\", _hoisted_4, null, 512 /* NEED_PATCH */)), $setup.showProductName ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _toDisplayString($props.productName), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"button\", {\n    class: \"btn btn-primary fs-6\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.downloadBarcode && $setup.downloadBarcode(...args))\n  }, [_cache[2] || (_cache[2] = _createElementVNode(\"span\", null, \"Download \", -1 /* HOISTED */)), _createVNode(_component_font_awesome_icon, {\n    icon: \"download\",\n    style: {\n      \"color\": \"#ffffff\"\n    }\n  })])]), _createCommentVNode(\" Toggle for controlling visibility of the product name \"), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"label\", _hoisted_8, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.showProductName = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $setup.showProductName]]), _cache[3] || (_cache[3] = _createElementVNode(\"span\", {\n    class: \"text-secondary\"\n  }, \"Show Product Name\", -1 /* HOISTED */))])])]);\n}","map":{"version":3,"names":["class","key","ref","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","$setup","errorMessage","_hoisted_3","_toDisplayString","_createCommentVNode","_hoisted_4","showProductName","_hoisted_5","$props","productName","_hoisted_6","onClick","_cache","args","downloadBarcode","_createVNode","_component_font_awesome_icon","icon","style","_hoisted_7","_hoisted_8","type","$event"],"sources":["C:\\Users\\Administrator\\OneDrive\\Desktop\\POSExpress\\frontend\\src\\components\\Admin\\Inventory\\Barcode.vue"],"sourcesContent":["<script>\r\nimport JsBarcode from 'jsbarcode';\r\nimport { onMounted, watch, ref, nextTick } from 'vue';\r\n\r\nexport default {\r\n  props: {\r\n    sku: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    productName: {\r\n      type: String,\r\n      default: 'Product Name'\r\n    },\r\n    format: {\r\n      type: String,\r\n      default: 'EAN13'\r\n    },\r\n    lineColor: {\r\n      type: String,\r\n      default: '#000000'\r\n    },\r\n    width: {\r\n      type: Number,\r\n      default: 4\r\n    },\r\n    height: {\r\n      type: Number,\r\n      default: 100\r\n    }\r\n  },\r\n  setup(props) {\r\n    const svgRef = ref(null);\r\n    const errorMessage = ref('');\r\n    const showProductName = ref(true);\r\n\r\n    const generateBarcode = async (sku) => {\r\n      try {\r\n        if (!sku || typeof sku !== 'string') {\r\n          throw new Error('Invalid SKU: Must be a string.');\r\n        }\r\n\r\n        // Validate based on barcode format (e.g., EAN13 requires 13 digits)\r\n        if (props.format === 'EAN13' && (!/^\\d{13}$/.test(sku))) {\r\n          throw new Error('Invalid EAN13 SKU: Must be 13 numeric digits.');\r\n        }\r\n\r\n        errorMessage.value = '';\r\n        await nextTick();\r\n\r\n        // Generate barcode directly from the user input\r\n        JsBarcode(svgRef.value, sku, {\r\n          format: props.format,\r\n          lineColor: props.lineColor,\r\n          width: props.width,\r\n          height: props.height,\r\n          displayValue: true\r\n        });\r\n      } catch (error) {\r\n        console.error(error.message);\r\n        errorMessage.value = error.message;\r\n\r\n        // Display fallback barcode if input is invalid\r\n        JsBarcode(svgRef.value, '0000000000000', {\r\n          format: 'CODE128',\r\n          lineColor: props.lineColor,\r\n          width: props.width,\r\n          height: props.height,\r\n          displayValue: true\r\n        });\r\n      }\r\n    };\r\n\r\n    const downloadBarcode = () => {\r\n      const svg = svgRef.value;\r\n      const canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d');\r\n      const svgData = new XMLSerializer().serializeToString(svg);\r\n      const img = new Image();\r\n      const svgBlob = new Blob([svgData], { type: 'image/svg+xml;charset=utf-8' });\r\n      const url = URL.createObjectURL(svgBlob);\r\n\r\n      img.onload = () => {\r\n        canvas.width = img.width;\r\n        canvas.height = img.height + (showProductName.value ? 30 : 0);\r\n        ctx.fillStyle = 'white';\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        ctx.drawImage(img, 0, 0);\r\n\r\n        if (showProductName.value) {\r\n          ctx.font = '14px sans-serif';\r\n          ctx.fillStyle = 'black';\r\n          ctx.textAlign = 'center';\r\n          ctx.fillText(props.productName, canvas.width / 2, img.height + 20);\r\n        }\r\n\r\n        const pngUrl = canvas.toDataURL('image/png');\r\n        const link = document.createElement('a');\r\n        link.href = pngUrl;\r\n        link.download = `${props.productName}_barcode.png`;\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n        URL.revokeObjectURL(url);\r\n      };\r\n      img.src = url;\r\n    };\r\n\r\n    onMounted(() => generateBarcode(props.sku));\r\n    watch(\r\n      () => props.sku,\r\n      (newSku) => {\r\n        generateBarcode(newSku);\r\n      }\r\n    );\r\n\r\n    return {\r\n      svgRef,\r\n      errorMessage,\r\n      downloadBarcode,\r\n      showProductName\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"row px-5\">\r\n    <div class=\"row\">\r\n      <div v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</div>\r\n      <svg ref=\"svgRef\"></svg>\r\n      <div v-if=\"showProductName\" class=\"product-name text-center\">{{ productName }}</div>\r\n    </div>\r\n    <div class=\"row ps-4 pe-3\">\r\n      <button class=\"btn btn-primary fs-6\" @click=\"downloadBarcode\">\r\n        <span>Download </span>\r\n        <font-awesome-icon icon=\"download\" style=\"color: #ffffff;\" />\r\n      </button>\r\n    </div>\r\n    <!-- Toggle for controlling visibility of the product name -->\r\n    <div class=\"row\">\r\n      <label class=\"show-name-label\">\r\n  <input type=\"checkbox\" v-model=\"showProductName\" />\r\n  <span class=\"text-secondary\">Show Product Name</span>\r\n</label>\r\n   \r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.error-message {\r\n  color: red;\r\n  font-weight: bold;\r\n  margin-top: 10px;\r\n}\r\n\r\n.product-name {\r\n  display: flex;\r\n  font-family: 'Times New Roman', serif;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  font-size: 16px;\r\n  margin-top: 5px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  color: black;\r\n  font-weight: bold;\r\n  word-break: break-word;\r\n  max-width: 80%;\r\n}\r\n.show-name-label {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.show-name-label input {\r\n  margin-right: 8px;\r\n}\r\n</style>"],"mappings":";;EAgIOA,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC;AAAK;;EAjIpBC,GAAA;EAkI+BD,KAAK,EAAC;;;EAC1BE,GAAG,EAAC;AAAQ;;EAnIvBD,GAAA;EAoIkCD,KAAK,EAAC;;;EAE/BA,KAAK,EAAC;AAAe;;EAOrBA,KAAK,EAAC;AAAK;;EACPA,KAAK,EAAC;AAAiB;;;uBAdlCG,mBAAA,CAoBM,OApBNC,UAoBM,GAnBJC,mBAAA,CAIM,OAJNC,UAIM,GAHOC,MAAA,CAAAC,YAAY,I,cAAvBL,mBAAA,CAAuE,OAAvEM,UAAuE,EAAAC,gBAAA,CAArBH,MAAA,CAAAC,YAAY,oBAlIpEG,mBAAA,iB,cAmIMR,mBAAA,CAAwB,OAAxBS,UAAwB,gCACbL,MAAA,CAAAM,eAAe,I,cAA1BV,mBAAA,CAAoF,OAApFW,UAAoF,EAAAJ,gBAAA,CAApBK,MAAA,CAAAC,WAAW,oBApIjFL,mBAAA,e,GAsIIN,mBAAA,CAKM,OALNY,UAKM,GAJJZ,mBAAA,CAGS;IAHDL,KAAK,EAAC,sBAAsB;IAAEkB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEb,MAAA,CAAAc,eAAA,IAAAd,MAAA,CAAAc,eAAA,IAAAD,IAAA,CAAe;gCAC1Df,mBAAA,CAAsB,cAAhB,WAAS,sBACfiB,YAAA,CAA6DC,4BAAA;IAA1CC,IAAI,EAAC,UAAU;IAACC,KAAuB,EAAvB;MAAA;IAAA;UAGvCd,mBAAA,2DAA8D,EAC9DN,mBAAA,CAMM,OANNqB,UAMM,GALJrB,mBAAA,CAGE,SAHFsB,UAGE,G,gBAFNtB,mBAAA,CAAmD;IAA5CuB,IAAI,EAAC,UAAU;IA/IxB,uBAAAT,MAAA,QAAAA,MAAA,MAAAU,MAAA,IA+IkCtB,MAAA,CAAAM,eAAe,GAAAgB,MAAA;qDAAftB,MAAA,CAAAM,eAAe,E,6BAC/CR,mBAAA,CAAqD;IAA/CL,KAAK,EAAC;EAAgB,GAAC,mBAAiB,qB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}