{"ast":null,"code":"import \"core-js/modules/web.dom-exception.stack.js\";\nimport { createRouter, createWebHistory } from 'vue-router';\nimport Dashboard from '/src/components/Admin/Main/Dashboard.vue';\nimport ProductList from '/src/components/Admin/Inventory/ProductList.vue';\nimport ProductDetails from '@/components/Admin/Inventory/ProductDetails.vue';\nimport CreateProduct from '/src/components/Admin/Inventory/CreateProduct.vue';\nimport EditProduct from '/src/components/Admin/Inventory/EditProduct.vue';\nimport Category from '/src/components/Admin/Inventory/Category.vue';\nimport ManageStocks from '/src/components/Admin/Inventory/ManageStocks.vue';\nimport Subcategories from '/src/components/Admin/Inventory/Subcategories.vue';\nimport Brands from '/src/components/Admin/Inventory/Brands.vue';\nimport Units from '/src/components/Admin/Inventory/Units.vue';\nimport Variants from '/src/components/Admin/Inventory/Variants.vue';\nimport Barcode from '/src/components/Admin/Inventory/Barcode.vue';\nimport Transactions from '/src/components/Admin/Sales/Transactions.vue';\nimport Returns from '/src/components/Admin/Sales/Returns.vue';\nimport VoidSales from '/src/components/Admin/Sales/VoidSales.vue';\nimport POS from '/src/components/Apps/POS.vue';\nimport CustomerList from '@/components/Admin/Users/CustomerList.vue';\nimport Staffs from '@/components/Admin/Users/Staffs.vue';\nimport Login from '@/components/LandingPage/Login.vue';\nfunction authGuard(to, from, next) {\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    // No token means user is not logged in, redirect to login page\n    return next(\"/\");\n  }\n  try {\n    const payload = JSON.parse(atob(token.split(\".\")[1]));\n    const now = Date.now() / 1000;\n    if (payload.exp < now) {\n      return next(\"/\");\n    }\n\n    // Check if the route requires a role and if the user's role matches\n    if (to.meta.roles && !to.meta.roles.includes(payload.role)) {\n      // User's role is not allowed to access this route\n      return next(\"/\");\n    }\n\n    // Proceed to the requested route if everything is fine\n    next();\n  } catch (error) {\n    // If decoding or any other error occurs, handle it (invalid token format, etc.)\n    return next(\"/\");\n  }\n}\nconst routes = [{\n  name: 'Login',\n  path: '/',\n  component: Login\n}, {\n  name: 'Dashboard',\n  path: '/dashboard',\n  component: Dashboard,\n  meta: {\n    roles: [\"Admin\"]\n  },\n  beforeEnter: authGuard\n}, {\n  name: 'CreateProduct',\n  path: '/create-product',\n  component: CreateProduct,\n  meta: {\n    roles: [\"Admin\"]\n  },\n  beforeEnter: authGuard\n}, {\n  name: 'EditProduct',\n  path: '/product/edit/:id',\n  component: EditProduct,\n  props: true,\n  meta: {\n    roles: [\"Admin\"]\n  },\n  beforeEnter: authGuard\n}, {\n  name: 'ProductList',\n  path: '/products',\n  component: ProductList,\n  meta: {\n    roles: [\"Admin\"]\n  },\n  beforeEnter: authGuard\n},, {\n  name: 'ProductDetails',\n  path: '/products/view/:id',\n  component: ProductDetails,\n  props: true,\n  meta: {\n    roles: [\"Admin\"]\n  },\n  beforeEnter: authGuard\n}, {\n  name: 'Category',\n  path: '/category',\n  component: Category,\n  meta: {\n    roles: [\"Admin\"]\n  },\n  beforeEnter: authGuard\n}, {\n  name: 'ManageStocks',\n  path: '/manage-stocks',\n  component: ManageStocks,\n  meta: {\n    roles: [\"Admin\"]\n  },\n  beforeEnter: authGuard\n}, {\n  name: 'Subcategories',\n  path: '/sub-categories',\n  component: Subcategories,\n  meta: {\n    roles: [\"Admin\"]\n  },\n  beforeEnter: authGuard\n}, {\n  name: 'Brands',\n  path: '/brands',\n  component: Brands,\n  meta: {\n    roles: [\"Admin\"]\n  },\n  beforeEnter: authGuard\n}, {\n  name: 'Units',\n  path: '/units',\n  component: Units,\n  meta: {\n    roles: [\"Admin\"]\n  },\n  beforeEnter: authGuard\n}, {\n  name: 'Variant',\n  path: '/variant',\n  component: Variants,\n  meta: {\n    roles: [\"Admin\"]\n  },\n  beforeEnter: authGuard\n}, {\n  name: 'Barcode',\n  path: '/barcode',\n  component: Barcode,\n  meta: {\n    roles: [\"Admin\"]\n  },\n  beforeEnter: authGuard\n}, {\n  name: 'Transactions',\n  path: '/transactions',\n  component: Transactions,\n  meta: {\n    roles: [\"Admin\"]\n  },\n  beforeEnter: authGuard\n}, {\n  name: 'Returns',\n  path: '/returns',\n  component: Returns,\n  meta: {\n    roles: [\"Admin\"]\n  },\n  beforeEnter: authGuard\n}, {\n  name: 'VoidSales',\n  path: '/voids',\n  component: VoidSales,\n  meta: {\n    roles: [\"Admin\"]\n  },\n  beforeEnter: authGuard\n}, {\n  name: 'POS',\n  path: '/pos',\n  component: POS,\n  meta: {\n    roles: [\"Admin\", \"Cashier\"]\n  },\n  beforeEnter: authGuard\n}, {\n  name: 'CustomerList',\n  path: '/customers',\n  component: CustomerList,\n  meta: {\n    roles: [\"Admin\"]\n  },\n  beforeEnter: authGuard\n}, {\n  name: 'Staffs',\n  path: '/staffs',\n  component: Staffs,\n  meta: {\n    roles: [\"Admin\"]\n  },\n  beforeEnter: authGuard\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Dashboard","ProductList","ProductDetails","CreateProduct","EditProduct","Category","ManageStocks","Subcategories","Brands","Units","Variants","Barcode","Transactions","Returns","VoidSales","POS","CustomerList","Staffs","Login","authGuard","to","from","next","token","localStorage","getItem","payload","JSON","parse","atob","split","now","Date","exp","meta","roles","includes","role","error","routes","name","path","component","beforeEnter","props","router","history"],"sources":["C:/Users/Administrator/OneDrive/Desktop/POSExpress/frontend/src/router/index.js"],"sourcesContent":["import {createRouter, createWebHistory} from 'vue-router';\r\n\r\nimport Dashboard from '/src/components/Admin/Main/Dashboard.vue';\r\n\r\nimport ProductList from '/src/components/Admin/Inventory/ProductList.vue';\r\nimport ProductDetails from '@/components/Admin/Inventory/ProductDetails.vue';\r\nimport CreateProduct from '/src/components/Admin/Inventory/CreateProduct.vue';\r\nimport EditProduct from '/src/components/Admin/Inventory/EditProduct.vue';\r\nimport Category from '/src/components/Admin/Inventory/Category.vue';\r\nimport ManageStocks from '/src/components/Admin/Inventory/ManageStocks.vue';\r\nimport Subcategories from '/src/components/Admin/Inventory/Subcategories.vue';\r\nimport Brands from '/src/components/Admin/Inventory/Brands.vue'\r\nimport Units from '/src/components/Admin/Inventory/Units.vue'\r\nimport Variants from '/src/components/Admin/Inventory/Variants.vue';\r\nimport Barcode from '/src/components/Admin/Inventory/Barcode.vue';\r\nimport Transactions from '/src/components/Admin/Sales/Transactions.vue';\r\nimport Returns from '/src/components/Admin/Sales/Returns.vue'\r\nimport VoidSales from '/src/components/Admin/Sales/VoidSales.vue';\r\nimport POS from '/src/components/Apps/POS.vue'\r\nimport CustomerList from '@/components/Admin/Users/CustomerList.vue';\r\nimport Staffs from '@/components/Admin/Users/Staffs.vue';\r\nimport Login from '@/components/LandingPage/Login.vue';\r\n\r\nfunction authGuard(to, from, next) {\r\n    const token = localStorage.getItem(\"token\");\r\n    \r\n    if (!token) {\r\n      // No token means user is not logged in, redirect to login page\r\n      return next(\"/\");\r\n    }\r\n  \r\n    try {\r\n\r\n      const payload = JSON.parse(atob(token.split(\".\")[1]));\r\n      \r\n   \r\n      const now = Date.now() / 1000; \r\n      if (payload.exp < now) {\r\n  \r\n        return next(\"/\");\r\n      }\r\n  \r\n      // Check if the route requires a role and if the user's role matches\r\n      if (to.meta.roles && !to.meta.roles.includes(payload.role)) {\r\n        // User's role is not allowed to access this route\r\n        return next(\"/\");\r\n      }\r\n  \r\n      // Proceed to the requested route if everything is fine\r\n      next();\r\n  \r\n    } catch (error) {\r\n      // If decoding or any other error occurs, handle it (invalid token format, etc.)\r\n      return next(\"/\");\r\n    }\r\n  }\r\n\r\nconst routes = [\r\n    {\r\n        name: 'Login',\r\n        path: '/',\r\n        component: Login\r\n    },\r\n    {\r\n        name: 'Dashboard',\r\n        path: '/dashboard',\r\n        component : Dashboard,\r\n        meta: { roles: [\"Admin\"] },  \r\n        beforeEnter: authGuard\r\n    },\r\n    {\r\n        name: 'CreateProduct',\r\n        path: '/create-product',\r\n        component : CreateProduct,\r\n        meta: { roles: [\"Admin\"] },  \r\n        beforeEnter: authGuard\r\n    },\r\n    {\r\n        name: 'EditProduct',\r\n        path: '/product/edit/:id',\r\n        component : EditProduct,\r\n        props: true,\r\n        meta: { roles: [\"Admin\"] },  \r\n        beforeEnter: authGuard\r\n    },\r\n    {\r\n        name: 'ProductList',\r\n        path: '/products',\r\n        component : ProductList,\r\n        meta: { roles: [\"Admin\"] },  \r\n        beforeEnter: authGuard\r\n    },\r\n    ,\r\n    {\r\n        name: 'ProductDetails',\r\n        path: '/products/view/:id',\r\n        component : ProductDetails,\r\n        props: true,\r\n        meta: { roles: [\"Admin\"] },  \r\n        beforeEnter: authGuard\r\n    },\r\n    {\r\n        name: 'Category',\r\n        path: '/category',\r\n        component : Category,\r\n        meta: { roles: [\"Admin\"] },  \r\n        beforeEnter: authGuard\r\n    },\r\n    {\r\n        name: 'ManageStocks',\r\n        path: '/manage-stocks',\r\n        component : ManageStocks,\r\n        meta: { roles: [\"Admin\"] },  \r\n        beforeEnter: authGuard\r\n    },\r\n    {\r\n        name: 'Subcategories',\r\n        path: '/sub-categories',\r\n        component : Subcategories,\r\n        meta: { roles: [\"Admin\"] },  \r\n        beforeEnter: authGuard\r\n    },\r\n    {\r\n        name: 'Brands',\r\n        path: '/brands',\r\n        component : Brands,\r\n        meta: { roles: [\"Admin\"] },  \r\n        beforeEnter: authGuard\r\n    },\r\n    {\r\n        name: 'Units',\r\n        path: '/units',\r\n        component : Units,\r\n        meta: { roles: [\"Admin\"] },  \r\n        beforeEnter: authGuard\r\n    },\r\n    {\r\n        name: 'Variant',\r\n        path: '/variant',\r\n        component : Variants,\r\n        meta: { roles: [\"Admin\"] },  \r\n        beforeEnter: authGuard\r\n    },\r\n    {\r\n        name: 'Barcode',\r\n        path: '/barcode',\r\n        component : Barcode,\r\n        meta: { roles: [\"Admin\"] },  \r\n        beforeEnter: authGuard\r\n    },\r\n\r\n    {\r\n        name: 'Transactions',\r\n        path: '/transactions',\r\n        component : Transactions,\r\n        meta: { roles: [\"Admin\"] },  \r\n        beforeEnter: authGuard\r\n    },\r\n    {\r\n        name: 'Returns',\r\n        path: '/returns',\r\n        component : Returns,\r\n        meta: { roles: [\"Admin\"] },  \r\n        beforeEnter: authGuard\r\n    }\r\n    ,\r\n    {\r\n        name: 'VoidSales',\r\n        path: '/voids',\r\n        component : VoidSales,\r\n        meta: { roles: [\"Admin\"] },  \r\n        beforeEnter: authGuard\r\n    },{\r\n        name: 'POS',\r\n        path: '/pos',\r\n        component : POS,\r\n        meta: { roles: [\"Admin\",\"Cashier\"] },  \r\n        beforeEnter: authGuard\r\n    } \r\n    ,{\r\n        name: 'CustomerList',\r\n        path: '/customers',\r\n        component : CustomerList,\r\n        meta: { roles: [\"Admin\"] },  \r\n        beforeEnter: authGuard\r\n    }  \r\n    ,{\r\n        name: 'Staffs',\r\n        path: '/staffs',\r\n        component : Staffs,\r\n        meta: { roles: [\"Admin\"] },  \r\n        beforeEnter: authGuard\r\n    } \r\n\r\n\r\n];\r\nconst router =createRouter({\r\n    history:createWebHistory(),\r\n    routes\r\n});\r\nexport default router;\r\n"],"mappings":";AAAA,SAAQA,YAAY,EAAEC,gBAAgB,QAAO,YAAY;AAEzD,OAAOC,SAAS,MAAM,0CAA0C;AAEhE,OAAOC,WAAW,MAAM,iDAAiD;AACzE,OAAOC,cAAc,MAAM,iDAAiD;AAC5E,OAAOC,aAAa,MAAM,mDAAmD;AAC7E,OAAOC,WAAW,MAAM,iDAAiD;AACzE,OAAOC,QAAQ,MAAM,8CAA8C;AACnE,OAAOC,YAAY,MAAM,kDAAkD;AAC3E,OAAOC,aAAa,MAAM,mDAAmD;AAC7E,OAAOC,MAAM,MAAM,4CAA4C;AAC/D,OAAOC,KAAK,MAAM,2CAA2C;AAC7D,OAAOC,QAAQ,MAAM,8CAA8C;AACnE,OAAOC,OAAO,MAAM,6CAA6C;AACjE,OAAOC,YAAY,MAAM,8CAA8C;AACvE,OAAOC,OAAO,MAAM,yCAAyC;AAC7D,OAAOC,SAAS,MAAM,2CAA2C;AACjE,OAAOC,GAAG,MAAM,8BAA8B;AAC9C,OAAOC,YAAY,MAAM,2CAA2C;AACpE,OAAOC,MAAM,MAAM,qCAAqC;AACxD,OAAOC,KAAK,MAAM,oCAAoC;AAEtD,SAASC,SAASA,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAE;EAC/B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,IAAI,CAACF,KAAK,EAAE;IACV;IACA,OAAOD,IAAI,CAAC,GAAG,CAAC;EAClB;EAEA,IAAI;IAEF,MAAMI,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACN,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAGrD,MAAMC,GAAG,GAAGC,IAAI,CAACD,GAAG,CAAC,CAAC,GAAG,IAAI;IAC7B,IAAIL,OAAO,CAACO,GAAG,GAAGF,GAAG,EAAE;MAErB,OAAOT,IAAI,CAAC,GAAG,CAAC;IAClB;;IAEA;IACA,IAAIF,EAAE,CAACc,IAAI,CAACC,KAAK,IAAI,CAACf,EAAE,CAACc,IAAI,CAACC,KAAK,CAACC,QAAQ,CAACV,OAAO,CAACW,IAAI,CAAC,EAAE;MAC1D;MACA,OAAOf,IAAI,CAAC,GAAG,CAAC;IAClB;;IAEA;IACAA,IAAI,CAAC,CAAC;EAER,CAAC,CAAC,OAAOgB,KAAK,EAAE;IACd;IACA,OAAOhB,IAAI,CAAC,GAAG,CAAC;EAClB;AACF;AAEF,MAAMiB,MAAM,GAAG,CACX;EACIC,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,GAAG;EACTC,SAAS,EAAExB;AACf,CAAC,EACD;EACIsB,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,YAAY;EAClBC,SAAS,EAAG1C,SAAS;EACrBkC,IAAI,EAAE;IAAEC,KAAK,EAAE,CAAC,OAAO;EAAE,CAAC;EAC1BQ,WAAW,EAAExB;AACjB,CAAC,EACD;EACIqB,IAAI,EAAE,eAAe;EACrBC,IAAI,EAAE,iBAAiB;EACvBC,SAAS,EAAGvC,aAAa;EACzB+B,IAAI,EAAE;IAAEC,KAAK,EAAE,CAAC,OAAO;EAAE,CAAC;EAC1BQ,WAAW,EAAExB;AACjB,CAAC,EACD;EACIqB,IAAI,EAAE,aAAa;EACnBC,IAAI,EAAE,mBAAmB;EACzBC,SAAS,EAAGtC,WAAW;EACvBwC,KAAK,EAAE,IAAI;EACXV,IAAI,EAAE;IAAEC,KAAK,EAAE,CAAC,OAAO;EAAE,CAAC;EAC1BQ,WAAW,EAAExB;AACjB,CAAC,EACD;EACIqB,IAAI,EAAE,aAAa;EACnBC,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAGzC,WAAW;EACvBiC,IAAI,EAAE;IAAEC,KAAK,EAAE,CAAC,OAAO;EAAE,CAAC;EAC1BQ,WAAW,EAAExB;AACjB,CAAC,GAED;EACIqB,IAAI,EAAE,gBAAgB;EACtBC,IAAI,EAAE,oBAAoB;EAC1BC,SAAS,EAAGxC,cAAc;EAC1B0C,KAAK,EAAE,IAAI;EACXV,IAAI,EAAE;IAAEC,KAAK,EAAE,CAAC,OAAO;EAAE,CAAC;EAC1BQ,WAAW,EAAExB;AACjB,CAAC,EACD;EACIqB,IAAI,EAAE,UAAU;EAChBC,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAGrC,QAAQ;EACpB6B,IAAI,EAAE;IAAEC,KAAK,EAAE,CAAC,OAAO;EAAE,CAAC;EAC1BQ,WAAW,EAAExB;AACjB,CAAC,EACD;EACIqB,IAAI,EAAE,cAAc;EACpBC,IAAI,EAAE,gBAAgB;EACtBC,SAAS,EAAGpC,YAAY;EACxB4B,IAAI,EAAE;IAAEC,KAAK,EAAE,CAAC,OAAO;EAAE,CAAC;EAC1BQ,WAAW,EAAExB;AACjB,CAAC,EACD;EACIqB,IAAI,EAAE,eAAe;EACrBC,IAAI,EAAE,iBAAiB;EACvBC,SAAS,EAAGnC,aAAa;EACzB2B,IAAI,EAAE;IAAEC,KAAK,EAAE,CAAC,OAAO;EAAE,CAAC;EAC1BQ,WAAW,EAAExB;AACjB,CAAC,EACD;EACIqB,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,SAAS;EACfC,SAAS,EAAGlC,MAAM;EAClB0B,IAAI,EAAE;IAAEC,KAAK,EAAE,CAAC,OAAO;EAAE,CAAC;EAC1BQ,WAAW,EAAExB;AACjB,CAAC,EACD;EACIqB,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAGjC,KAAK;EACjByB,IAAI,EAAE;IAAEC,KAAK,EAAE,CAAC,OAAO;EAAE,CAAC;EAC1BQ,WAAW,EAAExB;AACjB,CAAC,EACD;EACIqB,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAGhC,QAAQ;EACpBwB,IAAI,EAAE;IAAEC,KAAK,EAAE,CAAC,OAAO;EAAE,CAAC;EAC1BQ,WAAW,EAAExB;AACjB,CAAC,EACD;EACIqB,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAG/B,OAAO;EACnBuB,IAAI,EAAE;IAAEC,KAAK,EAAE,CAAC,OAAO;EAAE,CAAC;EAC1BQ,WAAW,EAAExB;AACjB,CAAC,EAED;EACIqB,IAAI,EAAE,cAAc;EACpBC,IAAI,EAAE,eAAe;EACrBC,SAAS,EAAG9B,YAAY;EACxBsB,IAAI,EAAE;IAAEC,KAAK,EAAE,CAAC,OAAO;EAAE,CAAC;EAC1BQ,WAAW,EAAExB;AACjB,CAAC,EACD;EACIqB,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAG7B,OAAO;EACnBqB,IAAI,EAAE;IAAEC,KAAK,EAAE,CAAC,OAAO;EAAE,CAAC;EAC1BQ,WAAW,EAAExB;AACjB,CAAC,EAED;EACIqB,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAG5B,SAAS;EACrBoB,IAAI,EAAE;IAAEC,KAAK,EAAE,CAAC,OAAO;EAAE,CAAC;EAC1BQ,WAAW,EAAExB;AACjB,CAAC,EAAC;EACEqB,IAAI,EAAE,KAAK;EACXC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAG3B,GAAG;EACfmB,IAAI,EAAE;IAAEC,KAAK,EAAE,CAAC,OAAO,EAAC,SAAS;EAAE,CAAC;EACpCQ,WAAW,EAAExB;AACjB,CAAC,EACA;EACGqB,IAAI,EAAE,cAAc;EACpBC,IAAI,EAAE,YAAY;EAClBC,SAAS,EAAG1B,YAAY;EACxBkB,IAAI,EAAE;IAAEC,KAAK,EAAE,CAAC,OAAO;EAAE,CAAC;EAC1BQ,WAAW,EAAExB;AACjB,CAAC,EACA;EACGqB,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,SAAS;EACfC,SAAS,EAAGzB,MAAM;EAClBiB,IAAI,EAAE;IAAEC,KAAK,EAAE,CAAC,OAAO;EAAE,CAAC;EAC1BQ,WAAW,EAAExB;AACjB,CAAC,CAGJ;AACD,MAAM0B,MAAM,GAAE/C,YAAY,CAAC;EACvBgD,OAAO,EAAC/C,gBAAgB,CAAC,CAAC;EAC1BwC;AACJ,CAAC,CAAC;AACF,eAAeM,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}