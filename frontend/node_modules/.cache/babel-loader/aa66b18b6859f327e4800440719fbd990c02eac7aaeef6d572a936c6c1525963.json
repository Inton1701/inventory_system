{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport { ref, onMounted, onBeforeUnmount, computed, nextTick, watc } from 'vue';\nimport axios from 'axios';\nimport 'select2';\nimport feather from 'feather-icons';\nimport ClipLoader from 'vue-spinner/src/ClipLoader.vue';\nimport Swal from 'sweetalert2';\nimport Sidebar from '/src/components/Admin/Sidebar.vue';\nimport Navbar from '/src/components/Admin/Navbar.vue';\nimport $ from 'jquery';\nexport default {\n  components: {\n    Sidebar,\n    Navbar,\n    ClipLoader\n  },\n  setup() {\n    const products = ref([]);\n    const lowStocks = ref([]);\n    const outOfStock = ref([]);\n    const history = ref([]);\n    const select = ref(null);\n    const editProductData = ref({});\n    const selectedProductId = ref(null);\n    const entryValue = ref(null);\n    const newQuantityAlert = ref(0);\n    const activeTab = ref('all');\n    const loadingStates = ref({\n      all: false,\n      low: false,\n      out: false,\n      history: false\n    });\n    const tabs = [{\n      key: 'all',\n      label: 'All Stocks',\n      fetch: () => fetchStock('products_list', products)\n    }, {\n      key: 'low',\n      label: 'Low Stocks',\n      fetch: () => fetchStock('low_stocks', lowStocks)\n    }, {\n      key: 'out',\n      label: 'Out of Stocks',\n      fetch: () => fetchStock('no_stock', outOfStock)\n    }, {\n      key: 'history',\n      label: 'History',\n      fetch: () => fetchStock('stock_history_list', history)\n    }];\n\n    // Function to get products from the API\n    const fetchStock = async (endpoint, stateVariable) => {\n      loadingStates.value[activeTab.value] = true;\n      try {\n        const response = await axios.get(`http://localhost:5000/api/${endpoint}`);\n        stateVariable.value = response.data[endpoint === 'stock_history_list' ? 'history' : 'productList'];\n      } catch (error) {\n        console.error(`Error fetching data from ${endpoint}:`, error);\n      } finally {\n        loadingStates.value[activeTab.value] = false;\n        refreshTable(); // Refresh table after fetching the data\n      }\n    };\n    const changeTab = key => {\n      activeTab.value = key;\n      const selectedTab = tabs.find(tab => tab.key === key);\n      if (selectedTab && selectedTab.fetch) {\n        selectedTab.fetch();\n      }\n    };\n    const filteredProducts = computed(() => {\n      if (activeTab.value === 'all') return products.value;\n      if (activeTab.value === 'low') return lowStocks.value;\n      if (activeTab.value === 'out') return outOfStock.value;\n      if (activeTab.value === 'history') return history.value;\n      return [];\n    });\n    const formatDate = date => {\n      if (date === null || date === undefined) {\n        return 'Not yet restocked';\n      }\n      const toDate = new Date(date);\n      if (isNaN(toDate.getTime())) {\n        return 'Invalid Date';\n      }\n      return toDate.toLocaleString();\n    };\n    const openEditStockModal = async productId => {\n      try {\n        entryValue.value = 0;\n        newQuantityAlert.value = 0;\n        const response = await axios.get(`http://localhost:5000/api/get_product/${productId}`);\n        editProductData.value = response.data.product;\n        newQuantityAlert.value = editProductData.value.quantityAlert;\n        selectedProductId.value = editProductData.value._id;\n        const modal = new bootstrap.Modal(document.getElementById('edit-stock'));\n        modal.show();\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Something Went wrong',\n          showConfirmButton: true\n        });\n      }\n    };\n    tabs[0].fetch();\n    const editStock = async () => {\n      try {\n        const payload = {\n          entryValue: Number(entryValue.value),\n          quantityAlert: Number(newQuantityAlert.value)\n        };\n        const response = await axios.patch(`http://localhost:5000/api/edit_stock/${editProductData.value._id}`, payload);\n        if (response.data.success) {\n          const result = await Swal.fire({\n            icon: 'success',\n            title: response.data.message,\n            showConfirmButton: true\n          });\n          if (result.isConfirmed) {\n            const modal = new bootstrap.Modal(document.getElementById('edit-stock'));\n            modal.hide();\n          }\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: response.data.message,\n            showConfirmButton: true\n          });\n        }\n      } catch (error) {\n        console.error('Error updating stock:', error);\n        Swal.fire({\n          icon: 'error',\n          title: 'Failed to update stock.',\n          showConfirmButton: true\n        });\n      } finally {\n        fetchStockForCurrentTab();\n      }\n    };\n    const fetchStockForCurrentTab = async () => {\n      if (activeTab.value === 'all') {\n        await fetchStock('products_list', products);\n      } else if (activeTab.value === 'low') {\n        await fetchStock('low_stocks', lowStocks);\n      } else if (activeTab.value === 'out') {\n        await fetchStock('no_stock', outOfStock);\n      } else if (activeTab.value === 'history') {\n        await fetchStock('stock_history_list', history);\n      }\n    };\n    const refreshTable = () => {\n      const tableSelector = `#${activeTab.value}Table`;\n      const table = $(tableSelector);\n\n      // Destroy existing DataTable instance if it exists\n      if ($.fn.DataTable.isDataTable(table)) {\n        table.DataTable().destroy();\n      }\n\n      // Reinitialize DataTable with new data\n      table.DataTable({\n        responsive: true,\n        paging: true,\n        searching: true,\n        info: true,\n        autoWidth: false,\n        columnDefs: [{\n          orderable: false,\n          targets: 'no-sort'\n        }] // Disable sorting for specific columns\n      });\n    };\n    onMounted(() => {\n      tabs[0].fetch(); // Fetch data for the default tab\n      feather.replace();\n    });\n    watch(activeTab, () => {\n      refreshTable(); // Refresh table whenever the active tab changes\n    });\n    return {\n      products,\n      select,\n      lowStocks,\n      outOfStock,\n      history,\n      selectedProductId,\n      openEditStockModal,\n      editProductData,\n      editStock,\n      entryValue,\n      newQuantityAlert,\n      activeTab,\n      changeTab,\n      formatDate,\n      filteredProducts,\n      tabs,\n      loadingStates\n    };\n  },\n  methods: {\n    async deleteAlert(productId) {\n      const {\n        value: result\n      } = await Swal.fire({\n        title: 'Delete Product',\n        text: \"You won't be able to revert this!\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes, delete it!'\n      });\n      if (result) {\n        try {\n          const response = await axios.put(`http://localhost:5000/api/edit_products/${productId}`, {\n            status: 'deleted'\n          });\n          if (response.data.success) {\n            Swal.fire('Deleted!', 'Your product has been deleted.', 'success');\n            this.products = this.products.filter(product => product._id !== productId);\n          } else {\n            Swal.fire('Failed', 'There was an issue deleting the product.', 'error');\n          }\n        } catch (error) {\n          console.error('Error updating product:', error);\n          Swal.fire('Error', 'Failed to delete the product.', 'error');\n        }\n      } else {\n        Swal.fire('Cancelled', 'Your product is safe :)', 'error');\n      }\n    }\n  }\n};","map":{"version":3,"names":["ref","onMounted","onBeforeUnmount","computed","nextTick","watc","axios","feather","ClipLoader","Swal","Sidebar","Navbar","$","components","setup","products","lowStocks","outOfStock","history","select","editProductData","selectedProductId","entryValue","newQuantityAlert","activeTab","loadingStates","all","low","out","tabs","key","label","fetch","fetchStock","endpoint","stateVariable","value","response","get","data","error","console","refreshTable","changeTab","selectedTab","find","tab","filteredProducts","formatDate","date","undefined","toDate","Date","isNaN","getTime","toLocaleString","openEditStockModal","productId","product","quantityAlert","_id","modal","bootstrap","Modal","document","getElementById","show","fire","icon","title","showConfirmButton","editStock","payload","Number","patch","success","result","message","isConfirmed","hide","fetchStockForCurrentTab","tableSelector","table","fn","DataTable","isDataTable","destroy","responsive","paging","searching","info","autoWidth","columnDefs","orderable","targets","replace","watch","methods","deleteAlert","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","put","status","filter"],"sources":["C:\\Users\\Administrator\\OneDrive\\Desktop\\POSExpress\\frontend\\src\\components\\Admin\\Inventory\\ManageStocks.vue"],"sourcesContent":["<template>\r\n    <Navbar />\r\n\r\n    <div class=\"page-wrapper\">\r\n\r\n        <div class=\"content\">\r\n            <div class=\"page-header\">\r\n                <div class=\"page-title me-auto\">\r\n                    <h4>Manage Stocks</h4>\r\n\r\n                </div>\r\n                <ul class=\"table-top-head low-stock-top-head\">\r\n                    <li>\r\n                        <div class=\"status-toggle d-flex justify-content-between align-items-center\">\r\n                            <input type=\"checkbox\" id=\"user2\" class=\"check\" checked />\r\n                            <label for=\"user2\" class=\"checktoggle\">checkbox</label>\r\n                            Notify\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        <a data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Pdf\"><img\r\n                                src=\"/assets/img/icons/pdf.svg\" alt=\"img\" /></a>\r\n                    </li>\r\n                    <li>\r\n                        <a data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Excel\"><img\r\n                                src=\"/assets/img/icons/excel.svg\" alt=\"img\" /></a>\r\n                    </li>\r\n                    <li>\r\n                        <a data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Print\"><i data-feather=\"printer\"\r\n                                class=\"feather-rotate-ccw\"></i></a>\r\n                    </li>\r\n                    <li>\r\n                        <a data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Refresh\"><i data-feather=\"rotate-ccw\"\r\n                                class=\"feather-rotate-ccw\"></i></a>\r\n                    </li>\r\n                    <li>\r\n                        <a data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Collapse\" id=\"collapse-header\"><i\r\n                                data-feather=\"chevron-up\" class=\"feather-chevron-up\"></i></a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div class=\"table-tab\">\r\n                <ul class=\"nav nav-pills\" id=\"pills-tab\" role=\"tablist\">\r\n                    <li v-for=\"(tab, index) in tabs\" :key=\"index\" class=\"nav-item\" role=\"presentation\">\r\n                        <button class=\"nav-link\" :class=\"{ active: activeTab === tab.key }\" :id=\"`pills-${tab.key}-tab`\"\r\n                            type=\"button\" @click=\"changeTab(tab.key)\">\r\n                            {{ tab.label }}\r\n                        </button>\r\n                    </li>\r\n                </ul>\r\n\r\n                <div class=\"tab-content\" id=\"pills-tabContent\">\r\n                    <div class=\"tab-pane fade show active\" id=\"pills-table\" role=\"tabpanel\">\r\n                        <div class=\"card table-list-card\">\r\n                            <div class=\"card-body\">\r\n                                <ClipLoader v-if=\"loading\" />\r\n                                <ClipLoader v-if=\"loadingStates[activeTab]\" />\r\n\r\n                 \r\n                                    <div class=\"table-top\"></div>\r\n                                    <div class=\"table-responsive\" v-show=\"activeTab === 'history'\">\r\n                                        <table id=\"historyTable\" class=\"table\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>SKU</th>\r\n                                                    <th>Product Name</th>\r\n                                                    <th>Previous Stock</th>\r\n                                                    <th>Changes</th>\r\n                                                    <th>New Stock</th>\r\n                                                    <th>Updated At</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                <tr v-if=\"loadingStates.history\">\r\n                                                    <td colspan=\"6\">Loading...</td>\r\n                                                </tr>\r\n                                                <tr v-if=\"!loadingStates.history && history.length === 0\">\r\n                                                    <td colspan=\"6\">No history records available</td>\r\n                                                </tr>\r\n                                                <tr v-for=\"record in history\" :key=\"record._id\">\r\n                                                    <td>{{ record.sku }}</td>\r\n                                                    <td>{{ record.product }}</td>\r\n                                                    <td>{{ record.prevStock }}</td>\r\n                                                    <td>{{ record.change }}</td>\r\n                                                    <td>{{ record.newStock }}</td>\r\n                                                    <td>{{ formatDate(record.updatedAt) }}</td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                              \r\n\r\n                                    <div class=\"table-responsive\" v-show=\"activeTab !== 'history'\">\r\n                                        <table id=\"allTable\" class=\"table \">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>SKU</th>\r\n                                                    <th>Product Name</th>\r\n                                                    <th>Category</th>\r\n                                                    <th>Status</th>\r\n                                                    <th>Created On</th>\r\n                                                    <th>Last Restock</th>\r\n                                                    <th>Qty</th>\r\n                                                    <th>Qty Alert</th>\r\n                                                    <th class=\"no-sort\">Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                <tr v-if=\"loadingStates[activeTab]\">\r\n                                                    <td colspan=\"9\">Loading...</td>\r\n                                                </tr>\r\n                                                <tr v-if=\"!loadingStates[activeTab] && products.length === 0\">\r\n                                                    <td colspan=\"9\">No products available</td>\r\n                                                </tr>\r\n                                                <tr v-for=\"product in products\" :key=\"product._id\">\r\n                                                    <td>{{ product.sku }}</td>\r\n                                                    <td>{{ product.name }}</td>\r\n                                                    <td>{{ product.category }}</td>\r\n                                                    <td>\r\n                                                        <span :class=\"{\r\n                                                            'badge': true,\r\n                                                            'badge-linesuccess': product.status === 'active',\r\n                                                            'badge-linewarning': product.status === 'inactive'\r\n                                                        }\">\r\n                                                            {{ product.status }}\r\n                                                        </span>\r\n                                                    </td>\r\n                                                    <td>{{ formatDate(product.updatedAt) }}</td>\r\n                                                    <td>{{ formatDate(product.lastRestock) }}</td>\r\n                                                    <td>{{ product.quantity }}</td>\r\n                                                    <td>{{ product.quantityAlert }}</td>\r\n                                                    <td class=\"action-table-data\">\r\n                                                        <div class=\"edit-delete-action\">\r\n                                                            <a @click=\"openEditStockModal(product._id)\" class=\"me-2 p-2\"\r\n                                                                href=\"javascript:void(0);\">\r\n                                                                <font-awesome-icon icon=\"fa-pen-to-square\"\r\n                                                                    class=\"feather-edit\" />\r\n                                                            </a>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                         \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Modal -->\r\n    <div class=\"modal fade\" id=\"edit-stock\">\r\n        <div class=\"modal-dialog modal-dialog-centered custom-modal-two\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"page-wrapper-new p-0\">\r\n                    <div class=\"content\">\r\n                        <div class=\"modal-header border-0 custom-modal-header\">\r\n                            <div class=\"page-title\">\r\n                                <h4>Edit Stocks</h4>\r\n                            </div>\r\n                            <button type=\"button\" class=\"close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div v-if=\"editProductData\" class=\"modal-body custom-modal-body\">\r\n                            <form @submit.prevent=\"editStock\">\r\n                                <input type=\"hidden\" input=\"\">\r\n                                <p>Product SKU: {{ editProductData.sku }}</p>\r\n                                <p>Note: use (-) to deduct stock, e.g., -5</p>\r\n                                <div class=\"mb-3\">\r\n                                    <label class=\"form-label\">Qty</label>\r\n                                    <input type=\"number\" v-model=\"entryValue\" class=\"form-control\" placeholder=\"0\"\r\n                                        required />\r\n                                </div>\r\n                                <div class=\"mb-3\">\r\n                                    <label class=\"form-label\">Qty Alert</label>\r\n                                    <input type=\"number\" v-model=\"newQuantityAlert\" class=\"form-control\"\r\n                                        placeholder=\"0\" />\r\n                                </div>\r\n                                <div class=\"modal-footer-btn\">\r\n                                    <button type=\"button\" class=\"btn btn-cancel me-2\"\r\n                                        data-bs-dismiss=\"modal\">Cancel</button>\r\n                                    <button type=\"submit\" class=\"btn btn-submit\">Save Changes</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n</template>\r\n<script>\r\nimport { ref, onMounted, onBeforeUnmount, computed, nextTick, watc } from 'vue';\r\nimport axios from 'axios';\r\nimport 'select2';\r\nimport feather from 'feather-icons';\r\nimport ClipLoader from 'vue-spinner/src/ClipLoader.vue';\r\nimport Swal from 'sweetalert2';\r\nimport Sidebar from '/src/components/Admin/Sidebar.vue';\r\nimport Navbar from '/src/components/Admin/Navbar.vue';\r\nimport $ from 'jquery';\r\nexport default {\r\n    components: {\r\n        Sidebar,\r\n        Navbar,\r\n        ClipLoader,\r\n    },\r\n    setup() {\r\n        const products = ref([]);\r\n        const lowStocks = ref([]);\r\n        const outOfStock = ref([]);\r\n        const history = ref([]);\r\n        const select = ref(null);\r\n        const editProductData = ref({});\r\n        const selectedProductId = ref(null);\r\n        const entryValue = ref(null);\r\n        const newQuantityAlert = ref(0);\r\n        const activeTab = ref('all');\r\n        const loadingStates = ref({\r\n            all: false,\r\n            low: false,\r\n            out: false,\r\n            history: false,\r\n        });\r\n\r\n        const tabs = [\r\n            { key: 'all', label: 'All Stocks', fetch: () => fetchStock('products_list', products) },\r\n            { key: 'low', label: 'Low Stocks', fetch: () => fetchStock('low_stocks', lowStocks) },\r\n            { key: 'out', label: 'Out of Stocks', fetch: () => fetchStock('no_stock', outOfStock) },\r\n            { key: 'history', label: 'History', fetch: () => fetchStock('stock_history_list', history) },\r\n        ];\r\n\r\n        // Function to get products from the API\r\n        const fetchStock = async (endpoint, stateVariable) => {\r\n            loadingStates.value[activeTab.value] = true;\r\n            try {\r\n                const response = await axios.get(`http://localhost:5000/api/${endpoint}`);\r\n                stateVariable.value = response.data[endpoint === 'stock_history_list' ? 'history' : 'productList'];\r\n            } catch (error) {\r\n                console.error(`Error fetching data from ${endpoint}:`, error);\r\n            } finally {\r\n                loadingStates.value[activeTab.value] = false;\r\n                refreshTable(); // Refresh table after fetching the data\r\n            }\r\n        };\r\n\r\n        const changeTab = (key) => {\r\n            activeTab.value = key;\r\n            const selectedTab = tabs.find((tab) => tab.key === key);\r\n            if (selectedTab && selectedTab.fetch) {\r\n                selectedTab.fetch();\r\n            }\r\n        };\r\n\r\n        const filteredProducts = computed(() => {\r\n            if (activeTab.value === 'all') return products.value;\r\n            if (activeTab.value === 'low') return lowStocks.value;\r\n            if (activeTab.value === 'out') return outOfStock.value;\r\n            if (activeTab.value === 'history') return history.value;\r\n            return [];\r\n        });\r\n\r\n        const formatDate = (date) => {\r\n            if (date === null || date === undefined) {\r\n                return 'Not yet restocked';\r\n            }\r\n            const toDate = new Date(date);\r\n            if (isNaN(toDate.getTime())) {\r\n                return 'Invalid Date';\r\n            }\r\n            return toDate.toLocaleString();\r\n        };\r\n\r\n        const openEditStockModal = async (productId) => {\r\n            try {\r\n                entryValue.value = 0;\r\n                newQuantityAlert.value = 0;\r\n                const response = await axios.get(`http://localhost:5000/api/get_product/${productId}`);\r\n                editProductData.value = response.data.product;\r\n                newQuantityAlert.value = editProductData.value.quantityAlert;\r\n                selectedProductId.value = editProductData.value._id;\r\n                const modal = new bootstrap.Modal(document.getElementById('edit-stock'));\r\n                modal.show();\r\n            } catch (error) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Something Went wrong',\r\n                    showConfirmButton: true,\r\n                });\r\n            }\r\n        };\r\n\r\n        tabs[0].fetch();\r\n\r\n        const editStock = async () => {\r\n            try {\r\n                const payload = {\r\n                    entryValue: Number(entryValue.value),\r\n                    quantityAlert: Number(newQuantityAlert.value),\r\n                };\r\n\r\n                const response = await axios.patch(\r\n                    `http://localhost:5000/api/edit_stock/${editProductData.value._id}`,\r\n                    payload\r\n                );\r\n\r\n                if (response.data.success) {\r\n                    const result = await Swal.fire({\r\n                        icon: 'success',\r\n                        title: response.data.message,\r\n                        showConfirmButton: true,\r\n                    });\r\n                    if (result.isConfirmed) {\r\n                        const modal = new bootstrap.Modal(document.getElementById('edit-stock'));\r\n                        modal.hide();\r\n                    }\r\n                } else {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: response.data.message,\r\n                        showConfirmButton: true,\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                console.error('Error updating stock:', error);\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Failed to update stock.',\r\n                    showConfirmButton: true,\r\n                });\r\n            } finally {\r\n                fetchStockForCurrentTab();\r\n            }\r\n        };\r\n\r\n        const fetchStockForCurrentTab = async () => {\r\n            if (activeTab.value === 'all') {\r\n                await fetchStock('products_list', products);\r\n            } else if (activeTab.value === 'low') {\r\n                await fetchStock('low_stocks', lowStocks);\r\n            } else if (activeTab.value === 'out') {\r\n                await fetchStock('no_stock', outOfStock);\r\n            } else if (activeTab.value === 'history') {\r\n                await fetchStock('stock_history_list', history);\r\n            }\r\n        };\r\n\r\n        const refreshTable = () => {\r\n      const tableSelector = `#${activeTab.value}Table`;\r\n      const table = $(tableSelector);\r\n\r\n      // Destroy existing DataTable instance if it exists\r\n      if ($.fn.DataTable.isDataTable(table)) {\r\n        table.DataTable().destroy();\r\n      }\r\n\r\n      // Reinitialize DataTable with new data\r\n      table.DataTable({\r\n        responsive: true,\r\n        paging: true,\r\n        searching: true,\r\n        info: true,\r\n        autoWidth: false,\r\n        columnDefs: [{ orderable: false, targets: 'no-sort' }], // Disable sorting for specific columns\r\n      });\r\n    };\r\n\r\n    onMounted(() => {\r\n      tabs[0].fetch(); // Fetch data for the default tab\r\n      feather.replace();\r\n    });\r\n\r\n    watch(activeTab, () => {\r\n      refreshTable(); // Refresh table whenever the active tab changes\r\n    });\r\n  \r\n       \r\n        \r\n\r\n        return {\r\n            products,\r\n            select,\r\n            lowStocks,\r\n            outOfStock,\r\n            history,\r\n            selectedProductId,\r\n            openEditStockModal,\r\n            editProductData,\r\n            editStock,\r\n            entryValue,\r\n            newQuantityAlert,\r\n            activeTab,\r\n            changeTab,\r\n            formatDate,\r\n            filteredProducts,\r\n            tabs,\r\n            loadingStates,\r\n        };\r\n    },\r\n    methods: {\r\n        async deleteAlert(productId) {\r\n            const { value: result } = await Swal.fire({\r\n                title: 'Delete Product',\r\n                text: \"You won't be able to revert this!\",\r\n                icon: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#3085d6',\r\n                cancelButtonColor: '#d33',\r\n                confirmButtonText: 'Yes, delete it!',\r\n            });\r\n\r\n            if (result) {\r\n                try {\r\n                    const response = await axios.put(`http://localhost:5000/api/edit_products/${productId}`, {\r\n                        status: 'deleted',\r\n                    });\r\n\r\n                    if (response.data.success) {\r\n                        Swal.fire('Deleted!', 'Your product has been deleted.', 'success');\r\n                        this.products = this.products.filter(product => product._id !== productId);\r\n                    } else {\r\n                        Swal.fire('Failed', 'There was an issue deleting the product.', 'error');\r\n                    }\r\n                } catch (error) {\r\n                    console.error('Error updating product:', error);\r\n                    Swal.fire('Error', 'Failed to delete the product.', 'error');\r\n                }\r\n            } else {\r\n                Swal.fire('Cancelled', 'Your product is safe :)', 'error');\r\n            }\r\n        },\r\n        \r\n    },\r\n\r\n\r\n};\r\n\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}