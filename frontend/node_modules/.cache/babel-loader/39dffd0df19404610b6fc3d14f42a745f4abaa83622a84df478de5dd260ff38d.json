{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport { ref, computed, onMounted, defineComponent } from \"vue\";\nimport Navbar from \"/src/components/Admin/Navbar.vue\";\nimport LineChart from \"C:\\Users\\Administrator\\OneDrive\\Desktop\\POSExpress\\frontend\\src\\components\\Charts\\LineChart.vue\";\nimport axios from \"axios\";\nexport default defineComponent({\n  components: {\n    Navbar,\n    LineChart\n  },\n  setup() {\n    const salesData = ref([]);\n    const chartData = computed(() => {\n      if (!salesData.value || salesData.value.length === 0) {\n        return {\n          labels: [],\n          datasets: []\n        };\n      }\n      const labels = salesData.value.map(data => data._id);\n      const totalSales = salesData.value.map(data => data.totalSales);\n      const totalProfit = salesData.value.map(data => data.totalProfit);\n      return {\n        labels,\n        datasets: [{\n          label: \"Total Sales\",\n          data: totalSales,\n          borderColor: \"rgb(75, 192, 192)\",\n          backgroundColor: \"rgba(75, 192, 192, 0.2)\",\n          fill: true,\n          tension: 0.4\n        }, {\n          label: \"Total Profit\",\n          data: totalProfit,\n          borderColor: \"rgb(255, 99, 132)\",\n          backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n          fill: true,\n          tension: 0.4\n        }]\n      };\n    });\n    const chartOptions = computed(() => ({\n      responsive: true,\n      plugins: {\n        legend: {\n          position: \"top\"\n        },\n        tooltip: {\n          enabled: true\n        }\n      },\n      scales: {\n        x: {\n          title: {\n            display: true,\n            text: \"Dates\"\n          }\n        },\n        y: {\n          title: {\n            display: true,\n            text: \"Values\"\n          },\n          beginAtZero: true\n        }\n      }\n    }));\n    onMounted(async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/get_sales\");\n        if (response.data.success) {\n          salesData.value = response.data.salesDatas;\n        } else {\n          console.error(\"Failed to fetch sales data\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching sales data:\", error);\n      }\n    });\n    return {\n      chartData,\n      chartOptions\n    };\n  }\n});","map":{"version":3,"names":["ref","computed","onMounted","defineComponent","Navbar","LineChart","axios","components","setup","salesData","chartData","value","length","labels","datasets","map","data","_id","totalSales","totalProfit","label","borderColor","backgroundColor","fill","tension","chartOptions","responsive","plugins","legend","position","tooltip","enabled","scales","x","title","display","text","y","beginAtZero","response","get","success","salesDatas","console","error"],"sources":["C:\\Users\\Administrator\\OneDrive\\Desktop\\POSExpress\\frontend\\src\\components\\Admin\\Main\\Dashboard.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <Navbar />\r\n    <div class=\"content\">\r\n      <div class=\"row\">\r\n        <div class=\"card-body\">\r\n          <LineChart\r\n            v-if=\"chartData.labels && chartData.labels.length > 0\"\r\n            :chart-data=\"chartData\"\r\n            :chart-options=\"chartOptions\"\r\n          />\r\n          <p v-else>Loading chart data...</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted, defineComponent } from \"vue\";\r\nimport Navbar from \"/src/components/Admin/Navbar.vue\";\r\nimport LineChart from \"C:\\Users\\Administrator\\OneDrive\\Desktop\\POSExpress\\frontend\\src\\components\\Charts\\LineChart.vue\";\r\nimport axios from \"axios\";\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    Navbar,\r\n    LineChart,\r\n  },\r\n  setup() {\r\n    const salesData = ref([]);\r\n\r\n    const chartData = computed(() => {\r\n      if (!salesData.value || salesData.value.length === 0) {\r\n        return { labels: [], datasets: [] };\r\n      }\r\n\r\n      const labels = salesData.value.map((data) => data._id);\r\n      const totalSales = salesData.value.map((data) => data.totalSales);\r\n      const totalProfit = salesData.value.map((data) => data.totalProfit);\r\n\r\n      return {\r\n        labels,\r\n        datasets: [\r\n          {\r\n            label: \"Total Sales\",\r\n            data: totalSales,\r\n            borderColor: \"rgb(75, 192, 192)\",\r\n            backgroundColor: \"rgba(75, 192, 192, 0.2)\",\r\n            fill: true,\r\n            tension: 0.4,\r\n          },\r\n          {\r\n            label: \"Total Profit\",\r\n            data: totalProfit,\r\n            borderColor: \"rgb(255, 99, 132)\",\r\n            backgroundColor: \"rgba(255, 99, 132, 0.2)\",\r\n            fill: true,\r\n            tension: 0.4,\r\n          },\r\n        ],\r\n      };\r\n    });\r\n\r\n    const chartOptions = computed(() => ({\r\n      responsive: true,\r\n      plugins: {\r\n        legend: {\r\n          position: \"top\",\r\n        },\r\n        tooltip: {\r\n          enabled: true,\r\n        },\r\n      },\r\n      scales: {\r\n        x: {\r\n          title: {\r\n            display: true,\r\n            text: \"Dates\",\r\n          },\r\n        },\r\n        y: {\r\n          title: {\r\n            display: true,\r\n            text: \"Values\",\r\n          },\r\n          beginAtZero: true,\r\n        },\r\n      },\r\n    }));\r\n\r\n    onMounted(async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/get_sales\");\r\n        if (response.data.success) {\r\n          salesData.value = response.data.salesDatas;\r\n        } else {\r\n          console.error(\"Failed to fetch sales data\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching sales data:\", error);\r\n      }\r\n    });\r\n\r\n    return {\r\n      chartData,\r\n      chartOptions,\r\n    };\r\n  },\r\n});\r\n</script>\r\n"],"mappings":";AAmBA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,eAAc,QAAS,KAAK;AAC/D,OAAOC,MAAK,MAAO,kCAAkC;AACrD,OAAOC,SAAQ,MAAO,iGAAiG;AACvH,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAeH,eAAe,CAAC;EAC7BI,UAAU,EAAE;IACVH,MAAM;IACNC;EACF,CAAC;EACDG,KAAKA,CAAA,EAAG;IACN,MAAMC,SAAQ,GAAIT,GAAG,CAAC,EAAE,CAAC;IAEzB,MAAMU,SAAQ,GAAIT,QAAQ,CAAC,MAAM;MAC/B,IAAI,CAACQ,SAAS,CAACE,KAAI,IAAKF,SAAS,CAACE,KAAK,CAACC,MAAK,KAAM,CAAC,EAAE;QACpD,OAAO;UAAEC,MAAM,EAAE,EAAE;UAAEC,QAAQ,EAAE;QAAG,CAAC;MACrC;MAEA,MAAMD,MAAK,GAAIJ,SAAS,CAACE,KAAK,CAACI,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,GAAG,CAAC;MACtD,MAAMC,UAAS,GAAIT,SAAS,CAACE,KAAK,CAACI,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACE,UAAU,CAAC;MACjE,MAAMC,WAAU,GAAIV,SAAS,CAACE,KAAK,CAACI,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACG,WAAW,CAAC;MAEnE,OAAO;QACLN,MAAM;QACNC,QAAQ,EAAE,CACR;UACEM,KAAK,EAAE,aAAa;UACpBJ,IAAI,EAAEE,UAAU;UAChBG,WAAW,EAAE,mBAAmB;UAChCC,eAAe,EAAE,yBAAyB;UAC1CC,IAAI,EAAE,IAAI;UACVC,OAAO,EAAE;QACX,CAAC,EACD;UACEJ,KAAK,EAAE,cAAc;UACrBJ,IAAI,EAAEG,WAAW;UACjBE,WAAW,EAAE,mBAAmB;UAChCC,eAAe,EAAE,yBAAyB;UAC1CC,IAAI,EAAE,IAAI;UACVC,OAAO,EAAE;QACX,CAAC;MAEL,CAAC;IACH,CAAC,CAAC;IAEF,MAAMC,YAAW,GAAIxB,QAAQ,CAAC,OAAO;MACnCyB,UAAU,EAAE,IAAI;MAChBC,OAAO,EAAE;QACPC,MAAM,EAAE;UACNC,QAAQ,EAAE;QACZ,CAAC;QACDC,OAAO,EAAE;UACPC,OAAO,EAAE;QACX;MACF,CAAC;MACDC,MAAM,EAAE;QACNC,CAAC,EAAE;UACDC,KAAK,EAAE;YACLC,OAAO,EAAE,IAAI;YACbC,IAAI,EAAE;UACR;QACF,CAAC;QACDC,CAAC,EAAE;UACDH,KAAK,EAAE;YACLC,OAAO,EAAE,IAAI;YACbC,IAAI,EAAE;UACR,CAAC;UACDE,WAAW,EAAE;QACf;MACF;IACF,CAAC,CAAC,CAAC;IAEHpC,SAAS,CAAC,YAAY;MACpB,IAAI;QACF,MAAMqC,QAAO,GAAI,MAAMjC,KAAK,CAACkC,GAAG,CAAC,qCAAqC,CAAC;QACvE,IAAID,QAAQ,CAACvB,IAAI,CAACyB,OAAO,EAAE;UACzBhC,SAAS,CAACE,KAAI,GAAI4B,QAAQ,CAACvB,IAAI,CAAC0B,UAAU;QAC5C,OAAO;UACLC,OAAO,CAACC,KAAK,CAAC,4BAA4B,CAAC;QAC7C;MACF,EAAE,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC,CAAC;IAEF,OAAO;MACLlC,SAAS;MACTe;IACF,CAAC;EACH;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}