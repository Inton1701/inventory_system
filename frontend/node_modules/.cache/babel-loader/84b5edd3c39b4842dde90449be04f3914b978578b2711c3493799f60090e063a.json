{"ast":null,"code":"import { ref, onMounted, computed, defineComponent } from \"vue\";\nimport { Line } from \"vue-chartjs\";\nimport { Chart as ChartJS, Title, Tooltip, Legend, LineElement, CategoryScale, LinearScale } from \"chart.js\";\nimport \"select2\";\nimport feather from \"feather-icons\";\nimport \"datatables.net-bs5\";\nimport \"datatables.net-bs5/css/dataTables.bootstrap5.min.css\";\nimport Navbar from \"/src/components/Admin/Navbar.vue\";\nimport axios from \"axios\";\n\n// Register chart.js components\nChartJS.register(Title, Tooltip, Legend, LineElement, CategoryScale, LinearScale);\nexport default defineComponent({\n  components: {\n    Navbar,\n    LineChart: Line\n  },\n  setup() {\n    const select = ref(\".select\");\n    const salesData = ref([]);\n\n    // Initialize chartData with default values\n    const chartData = {\n      labels: ['Jan', 'Feb', 'Mar', 'Apr'],\n      datasets: [{\n        label: 'Sales',\n        data: [30, 40, 35, 50]\n      }]\n    };\n\n    // Chart options for customization\n    const chartOptions = computed(() => ({\n      responsive: true,\n      plugins: {\n        legend: {\n          position: \"top\"\n        },\n        tooltip: {\n          enabled: true\n        }\n      },\n      scales: {\n        x: {\n          title: {\n            display: true,\n            text: \"Dates\"\n          }\n        },\n        y: {\n          title: {\n            display: true,\n            text: \"Values\"\n          },\n          beginAtZero: true\n        }\n      }\n    }));\n\n    // Fetch the sales data\n    onMounted(async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/get_sales\");\n        if (response.data.success) {\n          salesData.value = response.data.salesDatas;\n          console.log(\"Sales data fetched:\", salesData.value);\n        } else {\n          console.error(\"Failed to fetch sales data\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching sales data:\", error);\n      }\n    });\n    return {\n      select,\n      salesData,\n      chartData,\n      // Chart data\n      chartOptions // Chart options\n    };\n  }\n});","map":{"version":3,"names":["ref","onMounted","computed","defineComponent","Line","Chart","ChartJS","Title","Tooltip","Legend","LineElement","CategoryScale","LinearScale","feather","Navbar","axios","register","components","LineChart","setup","select","salesData","chartData","labels","datasets","label","data","chartOptions","responsive","plugins","legend","position","tooltip","enabled","scales","x","title","display","text","y","beginAtZero","response","get","success","value","salesDatas","console","log","error"],"sources":["C:\\Users\\Administrator\\OneDrive\\Desktop\\POSExpress\\frontend\\src\\components\\Admin\\Main\\Dashboard.vue"],"sourcesContent":["<template>\r\n  <Navbar />\r\n  <div class=\"page-wrapper\">\r\n    <div class=\"content\">\r\n      <div class=\"row\">\r\n        <div class=\"card-body\">\r\n          <LineChart \r\n            v-if=\"chartData && chartData.labels && chartData.labels.length > 0\" \r\n            :chart-data=\"chartData\" \r\n            :chart-options=\"chartOptions\" \r\n          />\r\n          <p v-else>Loading chart data...</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport { ref, onMounted, computed, defineComponent } from \"vue\";\r\nimport { Line } from \"vue-chartjs\";\r\nimport { Chart as ChartJS, Title, Tooltip, Legend, LineElement, CategoryScale, LinearScale } from \"chart.js\";\r\nimport \"select2\";\r\nimport feather from \"feather-icons\";\r\nimport \"datatables.net-bs5\";\r\nimport \"datatables.net-bs5/css/dataTables.bootstrap5.min.css\";\r\nimport Navbar from \"/src/components/Admin/Navbar.vue\";\r\nimport axios from \"axios\";\r\n\r\n// Register chart.js components\r\nChartJS.register(Title, Tooltip, Legend, LineElement, CategoryScale, LinearScale);\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    Navbar,\r\n    LineChart: Line,\r\n  },\r\n  setup() {\r\n    const select = ref(\".select\");\r\n    const salesData = ref([]);\r\n\r\n    // Initialize chartData with default values\r\n    const chartData = {\r\n  labels: ['Jan', 'Feb', 'Mar', 'Apr'],\r\n  datasets: [{\r\n    label: 'Sales',\r\n    data: [30, 40, 35, 50],\r\n  }],\r\n};\r\n\r\n    // Chart options for customization\r\n    const chartOptions = computed(() => ({\r\n      responsive: true,\r\n      plugins: {\r\n        legend: {\r\n          position: \"top\",\r\n        },\r\n        tooltip: {\r\n          enabled: true,\r\n        },\r\n      },\r\n      scales: {\r\n        x: {\r\n          title: {\r\n            display: true,\r\n            text: \"Dates\",\r\n          },\r\n        },\r\n        y: {\r\n          title: {\r\n            display: true,\r\n            text: \"Values\",\r\n          },\r\n          beginAtZero: true,\r\n        },\r\n      },\r\n    }));\r\n\r\n    // Fetch the sales data\r\n    onMounted(async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/get_sales\");\r\n        if (response.data.success) {\r\n          salesData.value = response.data.salesDatas;\r\n          console.log(\"Sales data fetched:\", salesData.value);\r\n        } else {\r\n          console.error(\"Failed to fetch sales data\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching sales data:\", error);\r\n      }\r\n    });\r\n\r\n    return {\r\n      select,\r\n      salesData,\r\n      chartData, // Chart data\r\n      chartOptions, // Chart options\r\n    };\r\n  },\r\n});\r\n\r\n</script>\r\n\r\n<style scoped>\r\n/* Optional styling for your page or components */\r\n#salesChart {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  height: 400px;\r\n}\r\n</style>\r\n"],"mappings":"AAoBA,SAASA,GAAG,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,eAAc,QAAS,KAAK;AAC/D,SAASC,IAAG,QAAS,aAAa;AAClC,SAASC,KAAI,IAAKC,OAAO,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,WAAW,EAAEC,aAAa,EAAEC,WAAU,QAAS,UAAU;AAC5G,OAAO,SAAS;AAChB,OAAOC,OAAM,MAAO,eAAe;AACnC,OAAO,oBAAoB;AAC3B,OAAO,sDAAsD;AAC7D,OAAOC,MAAK,MAAO,kCAAkC;AACrD,OAAOC,KAAI,MAAO,OAAO;;AAEzB;AACAT,OAAO,CAACU,QAAQ,CAACT,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,WAAW,EAAEC,aAAa,EAAEC,WAAW,CAAC;AAEjF,eAAeT,eAAe,CAAC;EAC7Bc,UAAU,EAAE;IACVH,MAAM;IACNI,SAAS,EAAEd;EACb,CAAC;EACDe,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIpB,GAAG,CAAC,SAAS,CAAC;IAC7B,MAAMqB,SAAQ,GAAIrB,GAAG,CAAC,EAAE,CAAC;;IAEzB;IACA,MAAMsB,SAAQ,GAAI;MACpBC,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;MACpCC,QAAQ,EAAE,CAAC;QACTC,KAAK,EAAE,OAAO;QACdC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;MACvB,CAAC;IACH,CAAC;;IAEG;IACA,MAAMC,YAAW,GAAIzB,QAAQ,CAAC,OAAO;MACnC0B,UAAU,EAAE,IAAI;MAChBC,OAAO,EAAE;QACPC,MAAM,EAAE;UACNC,QAAQ,EAAE;QACZ,CAAC;QACDC,OAAO,EAAE;UACPC,OAAO,EAAE;QACX;MACF,CAAC;MACDC,MAAM,EAAE;QACNC,CAAC,EAAE;UACDC,KAAK,EAAE;YACLC,OAAO,EAAE,IAAI;YACbC,IAAI,EAAE;UACR;QACF,CAAC;QACDC,CAAC,EAAE;UACDH,KAAK,EAAE;YACLC,OAAO,EAAE,IAAI;YACbC,IAAI,EAAE;UACR,CAAC;UACDE,WAAW,EAAE;QACf;MACF;IACF,CAAC,CAAC,CAAC;;IAEH;IACAvC,SAAS,CAAC,YAAY;MACpB,IAAI;QACF,MAAMwC,QAAO,GAAI,MAAM1B,KAAK,CAAC2B,GAAG,CAAC,qCAAqC,CAAC;QACvE,IAAID,QAAQ,CAACf,IAAI,CAACiB,OAAO,EAAE;UACzBtB,SAAS,CAACuB,KAAI,GAAIH,QAAQ,CAACf,IAAI,CAACmB,UAAU;UAC1CC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE1B,SAAS,CAACuB,KAAK,CAAC;QACrD,OAAO;UACLE,OAAO,CAACE,KAAK,CAAC,4BAA4B,CAAC;QAC7C;MACF,EAAE,OAAOA,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC,CAAC;IAEF,OAAO;MACL5B,MAAM;MACNC,SAAS;MACTC,SAAS;MAAE;MACXK,YAAY,CAAE;IAChB,CAAC;EACH;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}