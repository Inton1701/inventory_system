{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport { ref, computed, onMounted, onBeforeUnmount } from \"vue\";\nimport axios from \"axios\";\nexport default {\n  setup() {\n    // Existing setup variables\n    const apiURL = process.env.VUE_APP_URL;\n    const barcode = ref(\"\");\n    const barcodeInput = ref(null);\n    const cart = ref([]);\n    const selectedProduct = ref({}); // Object to hold the currently selected product\n    const lastInsertedProduct = ref(null); // Track the last added product\n    const barcodeError = ref({\n      message: null\n    });\n    const addProduct = async () => {\n      try {\n        if (!barcode.value.trim()) {\n          barcodeError.value.message = \"Please enter a valid barcode.\";\n          return;\n        }\n        const response = await axios.get(`${apiURL}/get_product_info/${barcode.value.trim()}`);\n        if (response.data.success) {\n          const product = response.data.product;\n          barcodeError.value.message = null;\n          const existingItem = cart.value.find(item => item._id === product._id);\n          if (existingItem) {\n            existingItem.quantity += 1; // Increment quantity if product exists in cart\n            lastInsertedProduct.value = existingItem; // Update reference to last inserted product\n          } else {\n            const newProduct = {\n              ...product,\n              quantity: 1\n            };\n            cart.value.push(newProduct); // Add product to cart\n            lastInsertedProduct.value = newProduct; // Set as last inserted product\n          }\n          updateSubtotal();\n        } else {\n          barcodeError.value.message = response.data.message || \"Product not found.\";\n        }\n      } catch (error) {\n        console.error(\"Error adding product:\", error);\n        barcodeError.value.message = \"An error occurred while fetching the product.\";\n      } finally {\n        barcode.value = \"\"; // Clear barcode input\n      }\n    };\n    const updateProductQuantity = () => {\n      const productIndex = cart.value.findIndex(item => item._id === selectedProduct.value._id);\n      if (productIndex !== -1) {\n        cart.value[productIndex].quantity = selectedProduct.value.quantity;\n        updateSubtotal();\n      }\n    };\n    const updateSubtotal = () => {\n      subtotal.value = cart.value.reduce((sum, item) => sum + item.quantity * item.price, 0);\n    };\n    const openQuantityModal = product => {\n      selectedProduct.value = {\n        ...product\n      }; // Clone product to avoid direct mutations\n      const modal = new bootstrap.Modal(document.getElementById(\"quantityModal\"));\n      modal.show();\n    };\n    const handleKeydown = event => {\n      if (event.key === \"Q\" || event.key === \"q\") {\n        if (lastInsertedProduct.value) {\n          openQuantityModal(lastInsertedProduct.value); // Open modal for last inserted product\n        }\n      }\n    };\n    onMounted(() => {\n      window.addEventListener(\"keydown\", handleKeydown);\n      barcodeInput.value.focus();\n    });\n    onBeforeUnmount(() => {\n      window.removeEventListener(\"keydown\", handleKeydown);\n    });\n    return {\n      barcode,\n      cart,\n      selectedProduct,\n      barcodeInput,\n      addProduct,\n      updateProductQuantity\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","onBeforeUnmount","axios","setup","apiURL","process","env","VUE_APP_URL","barcode","barcodeInput","cart","selectedProduct","lastInsertedProduct","barcodeError","message","addProduct","value","trim","response","get","data","success","product","existingItem","find","item","_id","quantity","newProduct","push","updateSubtotal","error","console","updateProductQuantity","productIndex","findIndex","subtotal","reduce","sum","price","openQuantityModal","modal","bootstrap","Modal","document","getElementById","show","handleKeydown","event","key","window","addEventListener","focus","removeEventListener"],"sources":["C:\\Users\\Administrator\\OneDrive\\Desktop\\POSExpress\\frontend\\src\\components\\Apps\\POS.vue"],"sourcesContent":["<template>\r\n  <div class=\"main-wrapper\">\r\n    <div class=\"header\">\r\n      <!-- Header Content -->\r\n    </div>\r\n\r\n    <div class=\"page-wrapper pos-pg-wrapper ms-0\">\r\n      <div class=\"content pos-design p-0\">\r\n        <div class=\"row align-items-start pos-wrapper\">\r\n          <!-- Category Sidebar -->\r\n          <div class=\"col-md-3 col-lg-2 ps-0\">\r\n            <div class=\"category-list\">\r\n              <h5>Categories</h5>\r\n              <ul class=\"list-group text-center\">\r\n                <li v-for=\"category in categories\" :key=\"category.name\" class=\"list-group-item\"\r\n                  :class=\"{ 'active': selectedCategory === category.name }\" @click=\"selectCategory(category.name)\">\r\n                  <a href=\"javascript:void(0);\">{{ category.name }}</a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Product Display -->\r\n          <div class=\"col-md-12 col-lg-6\">\r\n            <div class=\"row bg-white px-4 pb-5 mx-3 mt-2\">\r\n              <h4>Enter Barcode:</h4>\r\n              <input\r\n  v-model=\"barcode\"\r\n  ref=\"barcodeInput\" \r\n  class=\"form-control bg-light border border-dark fs-1 mb-2 mt-3\"\r\n  type=\"text\"\r\n  @keyup.enter=\"addProduct\"\r\n  placeholder=\"Scan Barcode\"\r\n/>\r\n<p v-if=\"barcodeError.message\" class=\"text-danger\">ERROR: {{ barcodeError.message }}</p>\r\n\r\n            </div>\r\n\r\n            <div class=\"pos-wrapper\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12 col-lg-12\">\r\n                  <div class=\"pos-products\">\r\n                    <div class=\"tabs_container\">\r\n                      <div class=\"tab_content active\" v-for=\"category in filteredCategories\" :key=\"category.name\">\r\n                        <div class=\"row\">\r\n                          <div class=\"col-sm-4 col-md-4 col-lg-5 col-xl-3 product-item\"\r\n                            v-for=\"product in category.products\" :key=\"product.id\">\r\n                            <div class=\"product-info default-cover card\">\r\n                              <a href=\"javascript:void(0);\" class=\"img-bg\">\r\n                                <img :src=\"product.image\" alt=\"Product\" />\r\n                                <span><i data-feather=\"check\"></i></span>\r\n                              </a>\r\n                              <h6 class=\"product-name\">\r\n                                <a href=\"javascript:void(0);\">{{ product.name }}</a>\r\n                              </h6>\r\n                              <div class=\"d-flex align-items-center justify-content-between price\">\r\n                                <span>{{ product.stock }} Pcs</span>\r\n                                <p>${{ product.price }}</p>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Order List and Summary -->\r\n          <div class=\"col-md-12 col-lg-4 ps-0\">\r\n            <aside class=\"product-order-list\">\r\n              <div class=\"head d-flex align-items-center justify-content-between w-100\">\r\n                <h5>Order List</h5>\r\n                <a class=\"confirm-text\" href=\"javascript:void(0);\"><i data-feather=\"trash-2\"\r\n                    class=\"feather-16 text-danger\"></i></a>\r\n              </div>\r\n\r\n              <div class=\"product-added block-section\">\r\n                <div class=\"product-wrap\">\r\n  <table class=\"table table-responsive\">\r\n    <thead>\r\n      <tr>\r\n        <th>Product</th>\r\n        <th>Price</th>\r\n        <th>Quantity</th>\r\n        <th>Total</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr v-for=\"item in cart\" :key=\"item.id\">\r\n        <td class=\"product-name-cell\">{{ item.name }}</td>\r\n        <td>${{ item.price }}</td>\r\n        <td>\r\n          <input\r\n            type=\"number\"\r\n            v-model.number=\"item.quantity\"\r\n            class=\"quantity-input\"\r\n            @input=\"updateSubtotal\"\r\n          />\r\n        </td>\r\n        <td>${{ item.quantity * item.price }}</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n              </div>\r\n\r\n              <div class=\"block-section\">\r\n                <h6>Order Summary</h6>\r\n                <table class=\"table table-responsive table-borderless\">\r\n                  <tr>\r\n                    <td>Sub Total</td>\r\n                    <td class=\"text-end\">${{ subtotal }}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Tax</td>\r\n                    <td class=\"text-end\">{{ tax }}%</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td class=\"danger\">Discount</td>\r\n                    <td class=\"danger text-end\">${{ discount }}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Total</td>\r\n                    <td class=\"text-end\">${{ total }}</td>\r\n                  </tr>\r\n                </table>\r\n              </div>\r\n            </aside>\r\n            <div class=\"btn-row d-sm-flex align-items-center justify-content-between\">\r\n            <a href=\"javascript:void(0);\" class=\"btn btn-info btn-icon flex-fill position-relative p-4 fs-6\"\r\n              data-bs-toggle=\"modal\" data-bs-target=\"#hold-order\">\r\n              <span class=\"keyboard-key\">F1</span>\r\n              <span class=\"me-1 d-flex align-items-center\">\r\n                <i data-feather=\"corner-up-right\" class=\"feather-16\"></i>\r\n              </span>Return\r\n            </a>\r\n            <a href=\"javascript:void(0);\" class=\"btn btn-danger btn-icon flex-fill position-relative p-4 fs-6\">\r\n              <span class=\"keyboard-key\">F2</span>\r\n              <span class=\"me-1 d-flex align-items-center\">\r\n                <i data-feather=\"trash-2\" class=\"feather-16\"></i>\r\n              </span>Void\r\n            </a>\r\n            <a href=\"javascript:void(0);\" class=\"btn btn-success btn-icon flex-fill position-relative p-4 fs-6\"\r\n              data-bs-toggle=\"modal\" data-bs-target=\"#payment-completed\">\r\n              <span class=\"keyboard-key\">F3</span>\r\n              <span class=\"me-1 d-flex align-items-center\">\r\n                <i data-feather=\"credit-card\" class=\"feather-16\"></i>\r\n              </span>Pay\r\n            </a>\r\n          </div>\r\n \r\n          </div>\r\n          <!-- Action Buttons -->\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted, onBeforeUnmount } from \"vue\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  setup() {\r\n    // Existing setup variables\r\n    const apiURL = process.env.VUE_APP_URL;\r\n    const barcode = ref(\"\");\r\n    const barcodeInput = ref(null);\r\n    const cart = ref([]);\r\n    const selectedProduct = ref({}); // Object to hold the currently selected product\r\n    const lastInsertedProduct = ref(null); // Track the last added product\r\n    const barcodeError = ref({ message: null });\r\n\r\n    const addProduct = async () => {\r\n      try {\r\n        if (!barcode.value.trim()) {\r\n          barcodeError.value.message = \"Please enter a valid barcode.\";\r\n          return;\r\n        }\r\n\r\n        const response = await axios.get(`${apiURL}/get_product_info/${barcode.value.trim()}`);\r\n        if (response.data.success) {\r\n          const product = response.data.product;\r\n          barcodeError.value.message = null;\r\n\r\n          const existingItem = cart.value.find((item) => item._id === product._id);\r\n          if (existingItem) {\r\n            existingItem.quantity += 1; // Increment quantity if product exists in cart\r\n            lastInsertedProduct.value = existingItem; // Update reference to last inserted product\r\n          } else {\r\n            const newProduct = { ...product, quantity: 1 };\r\n            cart.value.push(newProduct); // Add product to cart\r\n            lastInsertedProduct.value = newProduct; // Set as last inserted product\r\n          }\r\n\r\n          updateSubtotal();\r\n        } else {\r\n          barcodeError.value.message = response.data.message || \"Product not found.\";\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error adding product:\", error);\r\n        barcodeError.value.message = \"An error occurred while fetching the product.\";\r\n      } finally {\r\n        barcode.value = \"\"; // Clear barcode input\r\n      }\r\n    };\r\n\r\n    const updateProductQuantity = () => {\r\n      const productIndex = cart.value.findIndex(\r\n        (item) => item._id === selectedProduct.value._id\r\n      );\r\n      if (productIndex !== -1) {\r\n        cart.value[productIndex].quantity = selectedProduct.value.quantity;\r\n        updateSubtotal();\r\n      }\r\n    };\r\n\r\n    const updateSubtotal = () => {\r\n      subtotal.value = cart.value.reduce(\r\n        (sum, item) => sum + item.quantity * item.price,\r\n        0\r\n      );\r\n    };\r\n\r\n    const openQuantityModal = (product) => {\r\n      selectedProduct.value = { ...product }; // Clone product to avoid direct mutations\r\n      const modal = new bootstrap.Modal(document.getElementById(\"quantityModal\"));\r\n      modal.show();\r\n    };\r\n\r\n    const handleKeydown = (event) => {\r\n      if (event.key === \"Q\" || event.key === \"q\") {\r\n        if (lastInsertedProduct.value) {\r\n          openQuantityModal(lastInsertedProduct.value); // Open modal for last inserted product\r\n        }\r\n      }\r\n    };\r\n\r\n    onMounted(() => {\r\n      window.addEventListener(\"keydown\", handleKeydown);\r\n      barcodeInput.value.focus();\r\n    });\r\n\r\n    onBeforeUnmount(() => {\r\n      window.removeEventListener(\"keydown\", handleKeydown);\r\n    });\r\n\r\n    return {\r\n      barcode,\r\n      cart,\r\n      selectedProduct,\r\n      barcodeInput,\r\n      addProduct,\r\n      updateProductQuantity,\r\n    };\r\n  },\r\n};\r\n\r\n</script>\r\n<style scoped>\r\n/* Container for the product display */\r\n.tabs_container {\r\n  min-height: 620px;\r\n  max-height: 620px;\r\n  overflow-y: auto;\r\n  background: #fff;\r\n  padding: 20px;\r\n\r\n}\r\n\r\n/* Flex container for product display */\r\n.tab_content {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 1rem;\r\n  /* Space between items */\r\n  justify-content: space-between;\r\n}\r\n\r\n/* Ensure product-info fits within columns properly */\r\n.product-info {\r\n  position: relative;\r\n  padding: 15px;\r\n  background: #f9f9f9;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  transition: transform 0.2s ease-in-out;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  /* Optional shadow */\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  /* Flex to ensure each card takes equal width */\r\n  flex: 1 1 calc(33.33% - 1rem);\r\n  /* Default to 3 items per row */\r\n  height: 100%;\r\n\r\n}\r\n\r\n.product-info img {\r\n  width: 100%;\r\n  height: 150px;\r\n  /* Fixed height for images */\r\n  object-fit: cover;\r\n  /* Ensure images cover the area proportionally */\r\n}\r\n\r\n.product-info:hover {\r\n  transform: scale(1.05);\r\n  /* Slight zoom effect on hover */\r\n}\r\n\r\n/* Mobile and tablet adjustments for card layout */\r\n@media (max-width: 1200px) {\r\n  .product-info {\r\n    flex: 1 1 calc(25% - 1rem);\r\n    /* 4 items per row for large screens */\r\n    height: 300px;\r\n    /* Set height for large screens */\r\n  }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .product-info {\r\n    flex: 1 1 calc(33.33% - 1rem);\r\n    /* 3 items per row for medium screens */\r\n    height: 250px;\r\n    /* Adjust height for medium screens */\r\n  }\r\n}\r\n\r\n@media (max-width: 576px) {\r\n  .product-info {\r\n    flex: 1 1 calc(50% - 1rem);\r\n    /* 2 items per row for small screens */\r\n    height: 200px;\r\n    /* Adjust height for small screens */\r\n  }\r\n}\r\n\r\n/* Category List Styling */\r\n.category-list {\r\n  padding: 15px;\r\n  background-color: #f9f9f9;\r\n  border-right: 1px solid #ddd;\r\n}\r\n\r\n.category-list ul {\r\n  list-style-type: none;\r\n  padding-left: 0;\r\n}\r\n\r\n.category-list li {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.category-list a {\r\n  text-decoration: none;\r\n  color: #333;\r\n  font-size: 16px;\r\n  padding: 8px 10px;\r\n  border-radius: 4px;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.category-list a:active {\r\n  color: #fff;\r\n}\r\n\r\n.category-list a:hover {\r\n  color: #fff;\r\n\r\n}\r\n\r\n.list-group-item.active {\r\n  background-color: #22A95E;\r\n  /* Green background for active list item */\r\n  border-color: #22A95E;\r\n  /* Optional: Match border with the active color */\r\n}\r\n\r\n.list-group-item.active a {\r\n  color: #fff;\r\n  /* Make the text white inside the active list item */\r\n}\r\n\r\n/* Keyboard Key Styling for the UI */\r\n.keyboard-key {\r\n  position: absolute;\r\n  top: 5px;\r\n  left: 5px;\r\n  font-size: 12px;\r\n  background-color: rgba(0, 0, 0, 0.1);\r\n  color: white;\r\n  padding: 5px 8px;\r\n  border-radius: 4px;\r\n  font-family: 'Courier New', monospace;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\r\n}\r\n.product-wrap {\r\n  max-height: 100%; /* Prevents fixed height causing auto-scroll */\r\n  overflow: hidden; /* Prevents unnecessary scrollbars */\r\n}\r\n\r\n.table {\r\n  width: 100%; /* Ensures the table fits within its container */\r\n  table-layout: auto; /* Allows cells to resize based on content */\r\n  word-wrap: break-word; /* Enables word wrapping for text */\r\n}\r\n\r\n.table th,\r\n.table td {\r\n  white-space: normal; /* Allows text to wrap to the next line */\r\n  word-break: break-word; /* Forces breaking of long words if needed */\r\n  text-align: left; /* Aligns text for readability */\r\n}\r\n\r\n.product-name-cell {\r\n  max-width: 200px; /* Adjust as needed for column width */\r\n  overflow: hidden;\r\n  text-overflow: ellipsis; /* Optional: adds \"...\" for long text */\r\n  white-space: normal;\r\n}\r\n\r\n.quantity-input {\r\n  width: 50px; /* Ensures quantity input field doesn't take too much space */\r\n  text-align: center;\r\n}\r\n\r\n</style>\r\n"],"mappings":";;;;AAqKA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,eAAc,QAAS,KAAK;AAC/D,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN;IACA,MAAMC,MAAK,GAAIC,OAAO,CAACC,GAAG,CAACC,WAAW;IACtC,MAAMC,OAAM,GAAIV,GAAG,CAAC,EAAE,CAAC;IACvB,MAAMW,YAAW,GAAIX,GAAG,CAAC,IAAI,CAAC;IAC9B,MAAMY,IAAG,GAAIZ,GAAG,CAAC,EAAE,CAAC;IACpB,MAAMa,eAAc,GAAIb,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;IACjC,MAAMc,mBAAkB,GAAId,GAAG,CAAC,IAAI,CAAC,EAAE;IACvC,MAAMe,YAAW,GAAIf,GAAG,CAAC;MAAEgB,OAAO,EAAE;IAAK,CAAC,CAAC;IAE3C,MAAMC,UAAS,GAAI,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,IAAI,CAACP,OAAO,CAACQ,KAAK,CAACC,IAAI,CAAC,CAAC,EAAE;UACzBJ,YAAY,CAACG,KAAK,CAACF,OAAM,GAAI,+BAA+B;UAC5D;QACF;QAEA,MAAMI,QAAO,GAAI,MAAMhB,KAAK,CAACiB,GAAG,CAAC,GAAGf,MAAM,qBAAqBI,OAAO,CAACQ,KAAK,CAACC,IAAI,CAAC,CAAC,EAAE,CAAC;QACtF,IAAIC,QAAQ,CAACE,IAAI,CAACC,OAAO,EAAE;UACzB,MAAMC,OAAM,GAAIJ,QAAQ,CAACE,IAAI,CAACE,OAAO;UACrCT,YAAY,CAACG,KAAK,CAACF,OAAM,GAAI,IAAI;UAEjC,MAAMS,YAAW,GAAIb,IAAI,CAACM,KAAK,CAACQ,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,GAAE,KAAMJ,OAAO,CAACI,GAAG,CAAC;UACxE,IAAIH,YAAY,EAAE;YAChBA,YAAY,CAACI,QAAO,IAAK,CAAC,EAAE;YAC5Bf,mBAAmB,CAACI,KAAI,GAAIO,YAAY,EAAE;UAC5C,OAAO;YACL,MAAMK,UAAS,GAAI;cAAE,GAAGN,OAAO;cAAEK,QAAQ,EAAE;YAAE,CAAC;YAC9CjB,IAAI,CAACM,KAAK,CAACa,IAAI,CAACD,UAAU,CAAC,EAAE;YAC7BhB,mBAAmB,CAACI,KAAI,GAAIY,UAAU,EAAE;UAC1C;UAEAE,cAAc,CAAC,CAAC;QAClB,OAAO;UACLjB,YAAY,CAACG,KAAK,CAACF,OAAM,GAAII,QAAQ,CAACE,IAAI,CAACN,OAAM,IAAK,oBAAoB;QAC5E;MACF,EAAE,OAAOiB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7ClB,YAAY,CAACG,KAAK,CAACF,OAAM,GAAI,+CAA+C;MAC9E,UAAU;QACRN,OAAO,CAACQ,KAAI,GAAI,EAAE,EAAE;MACtB;IACF,CAAC;IAED,MAAMiB,qBAAoB,GAAIA,CAAA,KAAM;MAClC,MAAMC,YAAW,GAAIxB,IAAI,CAACM,KAAK,CAACmB,SAAS,CACtCV,IAAI,IAAKA,IAAI,CAACC,GAAE,KAAMf,eAAe,CAACK,KAAK,CAACU,GAC/C,CAAC;MACD,IAAIQ,YAAW,KAAM,CAAC,CAAC,EAAE;QACvBxB,IAAI,CAACM,KAAK,CAACkB,YAAY,CAAC,CAACP,QAAO,GAAIhB,eAAe,CAACK,KAAK,CAACW,QAAQ;QAClEG,cAAc,CAAC,CAAC;MAClB;IACF,CAAC;IAED,MAAMA,cAAa,GAAIA,CAAA,KAAM;MAC3BM,QAAQ,CAACpB,KAAI,GAAIN,IAAI,CAACM,KAAK,CAACqB,MAAM,CAChC,CAACC,GAAG,EAAEb,IAAI,KAAKa,GAAE,GAAIb,IAAI,CAACE,QAAO,GAAIF,IAAI,CAACc,KAAK,EAC/C,CACF,CAAC;IACH,CAAC;IAED,MAAMC,iBAAgB,GAAKlB,OAAO,IAAK;MACrCX,eAAe,CAACK,KAAI,GAAI;QAAE,GAAGM;MAAQ,CAAC,EAAE;MACxC,MAAMmB,KAAI,GAAI,IAAIC,SAAS,CAACC,KAAK,CAACC,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC,CAAC;MAC3EJ,KAAK,CAACK,IAAI,CAAC,CAAC;IACd,CAAC;IAED,MAAMC,aAAY,GAAKC,KAAK,IAAK;MAC/B,IAAIA,KAAK,CAACC,GAAE,KAAM,GAAE,IAAKD,KAAK,CAACC,GAAE,KAAM,GAAG,EAAE;QAC1C,IAAIrC,mBAAmB,CAACI,KAAK,EAAE;UAC7BwB,iBAAiB,CAAC5B,mBAAmB,CAACI,KAAK,CAAC,EAAE;QAChD;MACF;IACF,CAAC;IAEDhB,SAAS,CAAC,MAAM;MACdkD,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEJ,aAAa,CAAC;MACjDtC,YAAY,CAACO,KAAK,CAACoC,KAAK,CAAC,CAAC;IAC5B,CAAC,CAAC;IAEFnD,eAAe,CAAC,MAAM;MACpBiD,MAAM,CAACG,mBAAmB,CAAC,SAAS,EAAEN,aAAa,CAAC;IACtD,CAAC,CAAC;IAEF,OAAO;MACLvC,OAAO;MACPE,IAAI;MACJC,eAAe;MACfF,YAAY;MACZM,UAAU;MACVkB;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}