{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport { ref, onMounted, onBeforeUnmount, computed, nextTick } from 'vue';\nimport axios from 'axios';\nimport 'select2';\nimport feather from 'feather-icons';\nimport ClipLoader from 'vue-spinner/src/ClipLoader.vue';\nimport 'datatables.net-bs5';\nimport 'datatables.net-bs5/css/dataTables.bootstrap5.min.css';\nimport Swal from 'sweetalert2';\nimport Sidebar from '/src/components/Admin/Sidebar.vue';\nimport Navbar from '/src/components/Admin/Navbar.vue';\nimport $ from 'jquery';\nexport default {\n  components: {\n    Sidebar,\n    Navbar,\n    ClipLoader\n  },\n  setup() {\n    const products = ref([]);\n    const lowStocks = ref([]);\n    const outOfStock = ref([]);\n    const history = ref([]);\n    const select = ref(null);\n    const editProductData = ref({});\n    const selectedProductId = ref(null);\n    const entryValue = ref(null);\n    const newQuantityAlert = ref(0);\n    const activeTab = ref('all');\n    const dataTable = ref(null);\n    const tabs = [{\n      key: 'all',\n      label: 'All Stocks',\n      fetch: () => fetchStock('products_list', products)\n    }, {\n      key: 'low',\n      label: 'Low Stocks',\n      fetch: () => fetchStock('low_stocks', lowStocks)\n    }, {\n      key: 'out',\n      label: 'Out of Stocks',\n      fetch: () => fetchStock('no_stock', outOfStock)\n    }, {\n      key: 'history',\n      label: 'History',\n      fetch: () => fetchStock('stock_history_list', history)\n    }];\n    const loadingStates = ref({\n      all: false,\n      low: false,\n      out: false,\n      history: false\n    });\n\n    // Function to get products from the API\n    const fetchStock = async (endpoint, stateVariable) => {\n      loadingStates.value[activeTab.value] = true;\n      try {\n        const response = await axios.get(`http://localhost:5000/api/${endpoint}`);\n        stateVariable.value = response.data[endpoint === 'stock_history_list' ? 'history' : 'productList'];\n      } catch (error) {\n        console.error(`Error fetching data from ${endpoint}:`, error);\n      } finally {\n        loadingStates.value[activeTab.value] = false;\n        // await refreshDataTable();\n      }\n    };\n    const changeTab = key => {\n      activeTab.value = key;\n      const selectedTab = tabs.find(tab => tab.key === key);\n      if (selectedTab && selectedTab.fetch) {\n        selectedTab.fetch();\n      }\n    };\n    const filteredProducts = computed(() => {\n      if (activeTab.value === 'all') return products.value;\n      if (activeTab.value === 'low') return lowStocks.value;\n      if (activeTab.value === 'out') return outOfStock.value;\n      return [];\n    });\n    const formatDate = date => {\n      if (date === null || date === undefined) {\n        return 'Not yet restocked';\n      }\n      const toDate = new Date(date);\n      if (isNaN(toDate.getTime())) {\n        return 'Invalid Date';\n      }\n      return toDate.toLocaleString();\n    };\n    const openEditStockModal = async productId => {\n      try {\n        entryValue.value = 0;\n        newQuantityAlert.value = 0;\n\n        // Fetch the product data\n        const response = await axios.get(`http://localhost:5000/api/get_product/${productId}`);\n        editProductData.value = response.data.product;\n        newQuantityAlert.value = editProductData.value.quantityAlert;\n        selectedProductId.value = editProductData.value._id;\n\n        // Show the modal\n        const modal = new bootstrap.Modal(document.getElementById('edit-stock'));\n        modal.show();\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Something went wrong',\n          showConfirmButton: true\n        });\n      }\n    };\n    const editStock = async () => {\n      try {\n        const payload = {\n          entryValue: Number(entryValue.value),\n          quantityAlert: Number(newQuantityAlert.value)\n        };\n        const response = await axios.patch(`http://localhost:5000/api/edit_stock/${editProductData.value._id}`, payload);\n        if (response.data.success) {\n          const result = await Swal.fire({\n            icon: 'success',\n            title: response.data.message,\n            showConfirmButton: true\n          });\n          if (result.isConfirmed) {\n            const modal = new bootstrap.Modal(document.getElementById('edit-stock'));\n            modal.hide(); // Close the modal\n          }\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: response.data.message,\n            showConfirmButton: true\n          });\n        }\n      } catch (error) {\n        console.error('Error updating stock:', error);\n        Swal.fire({\n          icon: 'error',\n          title: 'Failed to update stock.',\n          showConfirmButton: true\n        });\n      } finally {\n        await fetchStockForCurrentTab();\n      }\n    };\n    const fetchStockForCurrentTab = async () => {\n      if (activeTab.value === 'all') {\n        await fetchStock('products_list', products);\n      } else if (activeTab.value === 'low') {\n        await fetchStock('low_stocks', lowStocks);\n      } else if (activeTab.value === 'out') {\n        await fetchStock('no_stock', outOfStock);\n      }\n    };\n\n    // const refreshDataTable = async () => {\n    //   await nextTick(() => {\n    //     if (dataTable.value) {\n    //       dataTable.value.clear().draw();\n    //       dataTable.value.rows.add(filteredProducts.value).draw();\n    //     }\n    //   });\n    // };\n\n    onMounted(async () => {\n      try {\n        // Initialize the select2 dropdown\n        await $(select.value).select2();\n        await feather.replace();\n\n        // Initialize the DataTable\n        dataTable.value = $('.table').DataTable();\n        tabs[0].fetch(); // Fetch the default tab data\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    onBeforeUnmount(() => {\n      $(select.value).select2('destroy');\n    });\n    return {\n      products,\n      lowStocks,\n      outOfStock,\n      history,\n      select,\n      editProductData,\n      selectedProductId,\n      entryValue,\n      newQuantityAlert,\n      activeTab,\n      tabs,\n      loadingStates,\n      changeTab,\n      formatDate,\n      filteredProducts,\n      openEditStockModal,\n      editStock,\n      refreshDataTable\n    };\n  },\n  methods: {\n    async deleteAlert(productId) {\n      const {\n        value: result\n      } = await Swal.fire({\n        title: 'Delete Product',\n        text: \"You won't be able to revert this!\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes, delete it!'\n      });\n      if (result) {\n        try {\n          const response = await axios.put(`http://localhost:5000/api/edit_products/${productId}`, {\n            status: 'deleted'\n          });\n          if (response.data.success) {\n            Swal.fire('Deleted!', 'Your product has been deleted.', 'success');\n            this.products = this.products.filter(product => product._id !== productId);\n          } else {\n            Swal.fire('Failed', 'There was an issue deleting the product.', 'error');\n          }\n        } catch (error) {\n          console.error('Error updating product:', error);\n          Swal.fire('Error', 'Failed to delete the product.', 'error');\n        }\n      } else {\n        Swal.fire('Cancelled', 'Your product is safe :)', 'error');\n      }\n    }\n  }\n};","map":{"version":3,"names":["ref","onMounted","onBeforeUnmount","computed","nextTick","axios","feather","ClipLoader","Swal","Sidebar","Navbar","$","components","setup","products","lowStocks","outOfStock","history","select","editProductData","selectedProductId","entryValue","newQuantityAlert","activeTab","dataTable","tabs","key","label","fetch","fetchStock","loadingStates","all","low","out","endpoint","stateVariable","value","response","get","data","error","console","changeTab","selectedTab","find","tab","filteredProducts","formatDate","date","undefined","toDate","Date","isNaN","getTime","toLocaleString","openEditStockModal","productId","product","quantityAlert","_id","modal","bootstrap","Modal","document","getElementById","show","fire","icon","title","showConfirmButton","editStock","payload","Number","patch","success","result","message","isConfirmed","hide","fetchStockForCurrentTab","select2","replace","DataTable","log","refreshDataTable","methods","deleteAlert","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","put","status","filter"],"sources":["C:\\Users\\Administrator\\OneDrive\\Desktop\\POSExpress\\frontend\\src\\components\\Admin\\Inventory\\ManageStocks.vue"],"sourcesContent":["<template>\r\n    <Navbar />\r\n\r\n    <div class=\"page-wrapper\">\r\n\r\n        <div class=\"content\">\r\n            <div class=\"page-header\">\r\n                <div class=\"page-title me-auto\">\r\n                    <h4>Manage Stocks</h4>\r\n\r\n                </div>\r\n                <ul class=\"table-top-head low-stock-top-head\">\r\n                    <li>\r\n                        <div class=\"status-toggle d-flex justify-content-between align-items-center\">\r\n                            <input type=\"checkbox\" id=\"user2\" class=\"check\" checked />\r\n                            <label for=\"user2\" class=\"checktoggle\">checkbox</label>\r\n                            Notify\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        <a data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Pdf\"><img\r\n                                src=\"/assets/img/icons/pdf.svg\" alt=\"img\" /></a>\r\n                    </li>\r\n                    <li>\r\n                        <a data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Excel\"><img\r\n                                src=\"/assets/img/icons/excel.svg\" alt=\"img\" /></a>\r\n                    </li>\r\n                    <li>\r\n                        <a data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Print\"><i data-feather=\"printer\"\r\n                                class=\"feather-rotate-ccw\"></i></a>\r\n                    </li>\r\n                    <li>\r\n                        <a data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Refresh\"><i data-feather=\"rotate-ccw\"\r\n                                class=\"feather-rotate-ccw\"></i></a>\r\n                    </li>\r\n                    <li>\r\n                        <a data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Collapse\" id=\"collapse-header\"><i\r\n                                data-feather=\"chevron-up\" class=\"feather-chevron-up\"></i></a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div class=\"table-tab\">\r\n                <ul class=\"nav nav-pills\" id=\"pills-tab\" role=\"tablist\">\r\n                    <li v-for=\"(tab, index) in tabs\" :key=\"index\" class=\"nav-item\" role=\"presentation\">\r\n                        <button class=\"nav-link\" :class=\"{ active: activeTab === tab.key }\" :id=\"`pills-${tab.key}-tab`\"\r\n                            type=\"button\" @click=\"changeTab(tab.key)\">\r\n                            {{ tab.label }}\r\n                        </button>\r\n                    </li>\r\n                </ul>\r\n\r\n                <div class=\"tab-content\" id=\"pills-tabContent\">\r\n                    <div class=\"tab-pane fade show active\" id=\"pills-table\" role=\"tabpanel\">\r\n                        <div class=\"card table-list-card\">\r\n                            <div class=\"card-body\">\r\n                                <ClipLoader v-if=\"loading\" />\r\n                                <ClipLoader v-if=\"loadingStates[activeTab]\" />\r\n\r\n                 \r\n                                    <div class=\"table-top\"></div>\r\n                                    <div class=\"table-responsive\" v-show=\"activeTab === 'history'\">\r\n                                        <table class=\"table datanew\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>SKU</th>\r\n                                                    <th>Product Name</th>\r\n                                                    <th>Previous Stock</th>\r\n                                                    <th>Changes</th>\r\n                                                    <th>New Stock</th>\r\n                                                    <th>Updated At</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                <tr v-if=\"loadingStates.history\">\r\n                                                    <td colspan=\"6\">Loading...</td>\r\n                                                </tr>\r\n                                                <tr v-if=\"!loadingStates.history && history.length === 0\">\r\n                                                    <td colspan=\"6\">No history records available</td>\r\n                                                </tr>\r\n                                                <tr v-for=\"record in history\" :key=\"record._id\">\r\n                                                    <td>{{ record.sku }}</td>\r\n                                                    <td>{{ record.product }}</td>\r\n                                                    <td>{{ record.prevStock }}</td>\r\n                                                    <td>{{ record.change }}</td>\r\n                                                    <td>{{ record.newStock }}</td>\r\n                                                    <td>{{ formatDate(record.updatedAt) }}</td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                              \r\n\r\n                                    <div class=\"table-responsive\" v-show=\"activeTab !== 'history'\">\r\n                                        <table class=\"table datanew\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>SKU</th>\r\n                                                    <th>Product Name</th>\r\n                                                    <th>Category</th>\r\n                                                    <th>Status</th>\r\n                                                    <th>Created On</th>\r\n                                                    <th>Last Restock</th>\r\n                                                    <th>Qty</th>\r\n                                                    <th>Qty Alert</th>\r\n                                                    <th class=\"no-sort\">Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                <tr v-if=\"loadingStates[activeTab]\">\r\n                                                    <td colspan=\"9\">Loading...</td>\r\n                                                </tr>\r\n                                                <tr v-if=\"!loadingStates[activeTab] && products.length === 0\">\r\n                                                    <td colspan=\"9\">No products available</td>\r\n                                                </tr>\r\n                                                <tr v-for=\"product in products\" :key=\"product._id\">\r\n                                                    <td>{{ product.sku }}</td>\r\n                                                    <td>{{ product.name }}</td>\r\n                                                    <td>{{ product.category }}</td>\r\n                                                    <td>\r\n                                                        <span :class=\"{\r\n                                                            'badge': true,\r\n                                                            'badge-linesuccess': product.status === 'active',\r\n                                                            'badge-linewarning': product.status === 'inactive'\r\n                                                        }\">\r\n                                                            {{ product.status }}\r\n                                                        </span>\r\n                                                    </td>\r\n                                                    <td>{{ formatDate(product.updatedAt) }}</td>\r\n                                                    <td>{{ formatDate(product.lastRestock) }}</td>\r\n                                                    <td>{{ product.quantity }}</td>\r\n                                                    <td>{{ product.quantityAlert }}</td>\r\n                                                    <td class=\"action-table-data\">\r\n                                                        <div class=\"edit-delete-action\">\r\n                                                            <a @click=\"openEditStockModal(product._id)\" class=\"me-2 p-2\"\r\n                                                                href=\"javascript:void(0);\">\r\n                                                                <font-awesome-icon icon=\"fa-pen-to-square\"\r\n                                                                    class=\"feather-edit\" />\r\n                                                            </a>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                         \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Modal -->\r\n    <div class=\"modal fade\" id=\"edit-stock\">\r\n        <div class=\"modal-dialog modal-dialog-centered custom-modal-two\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"page-wrapper-new p-0\">\r\n                    <div class=\"content\">\r\n                        <div class=\"modal-header border-0 custom-modal-header\">\r\n                            <div class=\"page-title\">\r\n                                <h4>Edit Stocks</h4>\r\n                            </div>\r\n                            <button type=\"button\" class=\"close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div v-if=\"editProductData\" class=\"modal-body custom-modal-body\">\r\n                            <form @submit.prevent=\"editStock\">\r\n                                <input type=\"hidden\" input=\"\">\r\n                                <p>Product SKU: {{ editProductData.sku }}</p>\r\n                                <p>Note: use (-) to deduct stock, e.g., -5</p>\r\n                                <div class=\"mb-3\">\r\n                                    <label class=\"form-label\">Qty</label>\r\n                                    <input type=\"number\" v-model=\"entryValue\" class=\"form-control\" placeholder=\"0\"\r\n                                        required />\r\n                                </div>\r\n                                <div class=\"mb-3\">\r\n                                    <label class=\"form-label\">Qty Alert</label>\r\n                                    <input type=\"number\" v-model=\"newQuantityAlert\" class=\"form-control\"\r\n                                        placeholder=\"0\" />\r\n                                </div>\r\n                                <div class=\"modal-footer-btn\">\r\n                                    <button type=\"button\" class=\"btn btn-cancel me-2\"\r\n                                        data-bs-dismiss=\"modal\">Cancel</button>\r\n                                    <button type=\"submit\" class=\"btn btn-submit\">Save Changes</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n</template>\r\n<script>\r\nimport { ref, onMounted, onBeforeUnmount, computed, nextTick } from 'vue';\r\nimport axios from 'axios';\r\nimport 'select2';\r\nimport feather from 'feather-icons';\r\nimport ClipLoader from 'vue-spinner/src/ClipLoader.vue';\r\nimport 'datatables.net-bs5';\r\nimport 'datatables.net-bs5/css/dataTables.bootstrap5.min.css';\r\nimport Swal from 'sweetalert2';\r\nimport Sidebar from '/src/components/Admin/Sidebar.vue';\r\nimport Navbar from '/src/components/Admin/Navbar.vue';\r\nimport $ from 'jquery';\r\n\r\nexport default {\r\n  components: {\r\n    Sidebar,\r\n    Navbar,\r\n    ClipLoader,\r\n  },\r\n  setup() {\r\n    const products = ref([]);\r\n    const lowStocks = ref([]);\r\n    const outOfStock = ref([]);\r\n    const history = ref([]);\r\n    const select = ref(null);\r\n    const editProductData = ref({});\r\n    const selectedProductId = ref(null);\r\n    const entryValue = ref(null);\r\n    const newQuantityAlert = ref(0);\r\n    const activeTab = ref('all');\r\n    const dataTable = ref(null);\r\n\r\n    const tabs = [\r\n      { key: 'all', label: 'All Stocks', fetch: () => fetchStock('products_list', products) },\r\n      { key: 'low', label: 'Low Stocks', fetch: () => fetchStock('low_stocks', lowStocks) },\r\n      { key: 'out', label: 'Out of Stocks', fetch: () => fetchStock('no_stock', outOfStock) },\r\n      { key: 'history', label: 'History', fetch: () => fetchStock('stock_history_list', history) },\r\n    ];\r\n\r\n    const loadingStates = ref({\r\n      all: false,\r\n      low: false,\r\n      out: false,\r\n      history: false,\r\n    });\r\n\r\n    // Function to get products from the API\r\n    const fetchStock = async (endpoint, stateVariable) => {\r\n      loadingStates.value[activeTab.value] = true;\r\n\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/${endpoint}`);\r\n        stateVariable.value = response.data[endpoint === 'stock_history_list' ? 'history' : 'productList'];\r\n      } catch (error) {\r\n        console.error(`Error fetching data from ${endpoint}:`, error);\r\n      } finally {\r\n        loadingStates.value[activeTab.value] = false;\r\n        // await refreshDataTable();\r\n      }\r\n    };\r\n\r\n    const changeTab = (key) => {\r\n      activeTab.value = key;\r\n      const selectedTab = tabs.find((tab) => tab.key === key);\r\n      if (selectedTab && selectedTab.fetch) {\r\n        selectedTab.fetch();\r\n      }\r\n    };\r\n\r\n    const filteredProducts = computed(() => {\r\n      if (activeTab.value === 'all') return products.value;\r\n      if (activeTab.value === 'low') return lowStocks.value;\r\n      if (activeTab.value === 'out') return outOfStock.value;\r\n      return [];\r\n    });\r\n\r\n    const formatDate = (date) => {\r\n      if (date === null || date === undefined) {\r\n        return 'Not yet restocked';\r\n      }\r\n      const toDate = new Date(date);\r\n      if (isNaN(toDate.getTime())) {\r\n        return 'Invalid Date';\r\n      }\r\n      return toDate.toLocaleString();\r\n    };\r\n\r\n    const openEditStockModal = async (productId) => {\r\n      try {\r\n        entryValue.value = 0;\r\n        newQuantityAlert.value = 0;\r\n\r\n        // Fetch the product data\r\n        const response = await axios.get(`http://localhost:5000/api/get_product/${productId}`);\r\n        editProductData.value = response.data.product;\r\n        newQuantityAlert.value = editProductData.value.quantityAlert;\r\n        selectedProductId.value = editProductData.value._id;\r\n\r\n        // Show the modal\r\n        const modal = new bootstrap.Modal(document.getElementById('edit-stock'));\r\n        modal.show();\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Something went wrong',\r\n          showConfirmButton: true,\r\n        });\r\n      }\r\n    };\r\n\r\n    const editStock = async () => {\r\n      try {\r\n        const payload = {\r\n          entryValue: Number(entryValue.value),\r\n          quantityAlert: Number(newQuantityAlert.value),\r\n        };\r\n\r\n        const response = await axios.patch(`http://localhost:5000/api/edit_stock/${editProductData.value._id}`, payload);\r\n\r\n        if (response.data.success) {\r\n          const result = await Swal.fire({\r\n            icon: 'success',\r\n            title: response.data.message,\r\n            showConfirmButton: true,\r\n          });\r\n          if (result.isConfirmed) {\r\n            const modal = new bootstrap.Modal(document.getElementById('edit-stock'));\r\n            modal.hide();  // Close the modal\r\n          }\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: response.data.message,\r\n            showConfirmButton: true,\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error('Error updating stock:', error);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Failed to update stock.',\r\n          showConfirmButton: true,\r\n        });\r\n      } finally {\r\n        await fetchStockForCurrentTab();\r\n      }\r\n    };\r\n\r\n    const fetchStockForCurrentTab = async () => {\r\n      if (activeTab.value === 'all') {\r\n        await fetchStock('products_list', products);\r\n      } else if (activeTab.value === 'low') {\r\n        await fetchStock('low_stocks', lowStocks);\r\n      } else if (activeTab.value === 'out') {\r\n        await fetchStock('no_stock', outOfStock);\r\n      }\r\n    };\r\n\r\n    // const refreshDataTable = async () => {\r\n    //   await nextTick(() => {\r\n    //     if (dataTable.value) {\r\n    //       dataTable.value.clear().draw();\r\n    //       dataTable.value.rows.add(filteredProducts.value).draw();\r\n    //     }\r\n    //   });\r\n    // };\r\n\r\n    onMounted(async () => {\r\n      try {\r\n        // Initialize the select2 dropdown\r\n        await $(select.value).select2();\r\n        await feather.replace();\r\n\r\n        // Initialize the DataTable\r\n        dataTable.value = $('.table').DataTable();\r\n        tabs[0].fetch(); // Fetch the default tab data\r\n\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    });\r\n\r\n    onBeforeUnmount(() => {\r\n      $(select.value).select2('destroy');\r\n    });\r\n\r\n    return {\r\n      products,\r\n      lowStocks,\r\n      outOfStock,\r\n      history,\r\n      select,\r\n      editProductData,\r\n      selectedProductId,\r\n      entryValue,\r\n      newQuantityAlert,\r\n      activeTab,\r\n      tabs,\r\n      loadingStates,\r\n      changeTab,\r\n      formatDate,\r\n      filteredProducts,\r\n      openEditStockModal,\r\n      editStock,\r\n      refreshDataTable,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    async deleteAlert(productId) {\r\n      const { value: result } = await Swal.fire({\r\n        title: 'Delete Product',\r\n        text: \"You won't be able to revert this!\",\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Yes, delete it!',\r\n      });\r\n\r\n      if (result) {\r\n        try {\r\n          const response = await axios.put(`http://localhost:5000/api/edit_products/${productId}`, {\r\n            status: 'deleted', \r\n          });\r\n\r\n          if (response.data.success) {\r\n            Swal.fire('Deleted!', 'Your product has been deleted.', 'success');\r\n            this.products = this.products.filter(product => product._id !== productId);\r\n          } else {\r\n            Swal.fire('Failed', 'There was an issue deleting the product.', 'error');\r\n          }\r\n        } catch (error) {\r\n          console.error('Error updating product:', error);\r\n          Swal.fire('Error', 'Failed to delete the product.', 'error');\r\n        }\r\n      } else {\r\n        Swal.fire('Cancelled', 'Your product is safe :)', 'error');\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}