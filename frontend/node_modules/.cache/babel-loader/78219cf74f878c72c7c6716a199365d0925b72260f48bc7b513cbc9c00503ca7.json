{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport { ref, computed, onMounted, onBeforeUnmount, nextTick } from 'vue';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport 'bootstrap';\nexport default {\n  setup() {\n    const apiURL = process.env.VUE_APP_URL;\n    const imgURL = process.env.VUE_APP_IMAGE_URL;\n\n    // Reactive variables\n    const barcode = ref('');\n    const cart = ref([]);\n    const categories = ref([]);\n    const products = ref([]);\n    const subtotal = ref(0);\n    const VAT = ref(12);\n    const discount = ref(0);\n    const change = ref(null);\n    const clientPayment = ref(null);\n    const barcodeError = ref(null);\n    const transactionId = ref('');\n    const transactionError = ref(null);\n    const returnItems = ref([]);\n    const paymentError = ref({\n      message: null\n    });\n\n    // Modals state\n    const modalState = ref({\n      payment: false,\n      return: false,\n      quantity: false,\n      void: false\n    });\n    const lastAddedProduct = ref(null);\n    const stockQuantity = ref(0);\n    const newQuantity = ref(1);\n    const quantityError = ref(null);\n\n    // Computed properties\n    const total = computed(() => subtotal.value + subtotal.value * VAT.value / 100 - discount.value);\n\n    // Methods\n    const fetchData = async (endpoint, targetRef) => {\n      try {\n        const response = await axios.get(`${apiURL}/${endpoint}`);\n        targetRef.value = response.data[Object.keys(response.data)[0]] || [];\n      } catch (error) {\n        console.error(`Error fetching ${endpoint}:`, error);\n      }\n    };\n    const updateSubtotal = () => {\n      subtotal.value = cart.value.reduce((sum, item) => sum + item.quantity * item.price, 0);\n    };\n    const addProduct = async (product = null) => {\n      try {\n        if (!product) {\n          if (!barcode.value.trim()) return;\n          const response = await axios.get(`${apiURL}/get_product_info/${barcode.value.trim()}`);\n          if (response.data.success) {\n            product = response.data.product;\n            barcodeError.value = null;\n          } else {\n            barcodeError.value = response.data.message || 'Product not found.';\n            return;\n          }\n        }\n        const existingItem = cart.value.find(item => item._id === product._id);\n        if (existingItem) {\n          if (existingItem.quantity + 1 <= product.quantity) {\n            existingItem.quantity += 1;\n          } else {\n            barcodeError.value = `Maximum stock reached for ${product.name}.`;\n          }\n        } else {\n          cart.value.push({\n            ...product,\n            quantity: 1\n          });\n        }\n        updateSubtotal();\n      } catch (error) {\n        barcodeError.value = 'Error fetching product.';\n        console.error('Add Product Error:', error);\n      } finally {\n        barcode.value = '';\n      }\n    };\n    const processTransaction = async type => {\n      const endpoints = {\n        payment: 'commit_transaction',\n        void: 'void_transaction',\n        return: `return_transaction/${transactionId.value}`\n      };\n      const payload = {\n        payment: {\n          cart: cart.value.map(({\n            _id,\n            name,\n            price,\n            quantity\n          }) => ({\n            _id,\n            name,\n            price,\n            quantity\n          })),\n          netAmount: subtotal.value,\n          totalAmount: total.value,\n          cash: clientPayment.value || 0,\n          change: change.value || 0\n        },\n        void: {\n          transactionId: transactionId.value\n        },\n        return: {\n          returnedItems: returnItems.value.filter(item => item.selected && item.returnQuantity > 0)\n        }\n      }[type];\n      try {\n        const response = await axios.post(`${apiURL}/${endpoints[type]}`, payload);\n        if (response.data.success) {\n          Swal.fire('Success', `${type.charAt(0).toUpperCase() + type.slice(1)} processed successfully.`, 'success');\n          resetCart();\n        } else {\n          Swal.fire('Error', response.data.message || 'Failed to process transaction.', 'error');\n        }\n      } catch (error) {\n        console.error(`${type} Error:`, error);\n        Swal.fire('Error', 'An error occurred while processing.', 'error');\n      }\n    };\n    const openModal = type => {\n      modalState.value[type] = true;\n      nextTick(() => {\n        const modalElement = document.getElementById(`${type}-modal`);\n        if (modalElement) {\n          const modal = new bootstrap.Modal(modalElement);\n          modal.show();\n          modalElement.addEventListener('shown.bs.modal', () => {\n            const inputField = modalElement.querySelector('input');\n            if (inputField) inputField.focus();\n          });\n        }\n      });\n    };\n    const resetCart = () => {\n      cart.value = [];\n      subtotal.value = 0;\n      discount.value = 0;\n      clientPayment.value = null;\n      change.value = null;\n    };\n    const handleKeydown = event => {\n      const actions = {\n        F1: () => openModal('payment'),\n        F2: () => openModal('void'),\n        F3: () => openModal('return'),\n        q: () => openModal('quantity'),\n        Escape: () => barcode.value = ''\n      };\n      if (actions[event.key]) {\n        event.preventDefault();\n        actions[event.key]();\n      }\n    };\n\n    // Lifecycle hooks\n    onMounted(() => {\n      fetchData('get_category_list', categories);\n      window.addEventListener('keydown', handleKeydown);\n    });\n    onBeforeUnmount(() => {\n      window.removeEventListener('keydown', handleKeydown);\n    });\n    return {\n      apiURL,\n      imgURL,\n      barcode,\n      cart,\n      categories,\n      products,\n      subtotal,\n      VAT,\n      discount,\n      total,\n      change,\n      clientPayment,\n      barcodeError,\n      transactionId,\n      transactionError,\n      returnItems,\n      modalState,\n      addProduct,\n      processTransaction,\n      openModal,\n      paymentError\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","onBeforeUnmount","nextTick","axios","Swal","setup","apiURL","process","env","VUE_APP_URL","imgURL","VUE_APP_IMAGE_URL","barcode","cart","categories","products","subtotal","VAT","discount","change","clientPayment","barcodeError","transactionId","transactionError","returnItems","paymentError","message","modalState","payment","return","quantity","void","lastAddedProduct","stockQuantity","newQuantity","quantityError","total","value","fetchData","endpoint","targetRef","response","get","data","Object","keys","error","console","updateSubtotal","reduce","sum","item","price","addProduct","product","trim","success","existingItem","find","_id","name","push","processTransaction","type","endpoints","payload","map","netAmount","totalAmount","cash","returnedItems","filter","selected","returnQuantity","post","fire","charAt","toUpperCase","slice","resetCart","openModal","modalElement","document","getElementById","modal","bootstrap","Modal","show","addEventListener","inputField","querySelector","focus","handleKeydown","event","actions","F1","F2","F3","q","Escape","key","preventDefault","window","removeEventListener"],"sources":["C:\\Users\\Administrator\\OneDrive\\Desktop\\POSExpress\\frontend\\src\\components\\Apps\\POS.vue"],"sourcesContent":["<template>\r\n  <div class=\"main-wrapper\">\r\n    <div class=\"header\">\r\n      <!-- Header Content -->\r\n    </div>\r\n\r\n    <div class=\"page-wrapper pos-pg-wrapper ms-0\">\r\n      <div class=\"content pos-design p-0\">\r\n        <div class=\"row align-items-start pos-wrapper\">\r\n          <!-- Category Sidebar -->\r\n          <!-- Category Sidebar -->\r\n          <div class=\"col-md-3 col-lg-2 ps-0\">\r\n            <div class=\"category-list\">\r\n              <h5>Categories</h5>\r\n              <ul class=\"list-group text-center overflow-auto\"\r\n                style=\"max-height: 100vh; overflow-y: auto; scrollbar-width: thin;\">\r\n\r\n                <li v-for=\"category in categories\" :key=\"category.name\" class=\"list-group-item\"\r\n                  :class=\"{ 'active': selectedCategory === category.name }\" @click=\"selectCategory(category.name)\">\r\n                  <a href=\"javascript:void(0);\">{{ category.name }}</a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <!-- Product Display -->\r\n          <div class=\"col-md-12 col-lg-6\">\r\n            <div class=\"row bg-white px-4 pb-5 mx-3 mt-2\">\r\n              <h4>Enter Barcode:</h4>\r\n              <input v-model=\"barcode\" ref=\"barcodeInput\"\r\n                class=\"form-control bg-light border border-dark fs-1 mb-2 mt-3\" type=\"text\" @keyup.enter=\"addProduct()\"\r\n                placeholder=\"Scan Barcode\" />\r\n              <p v-if=\"barcodeError.message\" class=\"text-danger\">ERROR: {{ barcodeError.message }}</p>\r\n\r\n            </div>\r\n            <div class=\"pos-wrapper\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12 col-lg-12\">\r\n                  <div class=\"pos-products\">\r\n                    <div class=\"tabs_container\">\r\n                      <!-- Display products based on selected category -->\r\n                      <div v-if=\"products.length\" class=\"tab_content active\">\r\n                        <div class=\"row\">\r\n                          <div v-for=\"product in products\" :key=\"product.id\"\r\n                            class=\"col-sm-2 col-md-12 col-lg-5 col-xl-5 product-item\">\r\n                            <div class=\"product-info default-cover card\" @click=\"addProduct(product)\">\r\n                              <a href=\"javascript:void(0);\" class=\"img-bg\">\r\n                                <img v-if=\"product.image\" :src=\"`${imgURL}${product.image}`\" alt=\"Product\" />\r\n                                <img v-else :src=\"`/img/icons/no-image-icon.png`\" />\r\n                                <span><i data-feather=\"check\"></i></span>\r\n                              </a>\r\n                              <h6 class=\"product-name\">\r\n                                <a href=\"javascript:void(0);\">{{ product.name }}</a>\r\n                              </h6>\r\n                              <div class=\"d-flex align-items-center justify-content-between price\">\r\n                                <span>Stock: {{ product.quantity }}</span>\r\n                                <p>${{ product.price }}</p>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                        </div>\r\n                      </div>\r\n\r\n                      <!-- If no products, show a message -->\r\n                      <div v-else class=\"no-products-message\">\r\n                        <p>No products available in this category.</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Order List and Summary -->\r\n          <div class=\"col-md-12 col-lg-4 ps-0\">\r\n            <aside class=\"product-order-list\">\r\n              <div class=\"head d-flex align-items-center justify-content-between w-100\">\r\n                <h5>Order List</h5>\r\n                <a class=\"confirm-text\" href=\"javascript:void(0);\"><i data-feather=\"trash-2\"\r\n                    class=\"feather-16 text-danger\"></i></a>\r\n              </div>\r\n\r\n              <div class=\"product-added block-section\">\r\n                <div class=\"product-wrap\">\r\n                  <table class=\"table table-responsive\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Product</th>\r\n                        <th>Price</th>\r\n                        <th>Quantity</th>\r\n                        <th>Total</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr v-for=\"item in cart\" :key=\"item.id\">\r\n                        <td>{{ item.name }}</td>\r\n                        <td>{{ item.price }}</td>\r\n                        <td>{{ item.quantity }}</td>\r\n                        <td>{{ item.quantity * item.price }}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"block-section\">\r\n                <h6>Order Summary</h6>\r\n                <table class=\"table table-responsive table-borderless\">\r\n                  <tr>\r\n                    <td>Sub Total</td>\r\n                    <td class=\"text-end\">${{ subtotal }}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>VAT</td>\r\n                    <td class=\"text-end\">{{ VAT }}%</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td class=\"danger\">Discount</td>\r\n                    <td class=\"danger text-end\">${{ discount }}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Total</td>\r\n                    <td class=\"text-end\">${{ total.toFixed(2) }}</td>\r\n                  </tr>\r\n                  <tr v-if=\"change\">\r\n                    <td>Change</td>\r\n                    <td class=\"text-end\">${{ change }}</td>\r\n                  </tr>\r\n                </table>\r\n              </div>\r\n            </aside>\r\n            <div class=\"btn-row d-sm-flex align-items-center justify-content-between\">\r\n              <a href=\"javascript:void(0);\" class=\"btn btn-success btn-icon flex-fill position-relative p-4 fs-6\"\r\n                data-bs-toggle=\"modal\" data-bs-target=\"payment-modal\">\r\n                <span class=\"keyboard-key\">F1</span>\r\n                <span class=\"me-1 d-flex align-items-center\">\r\n                  <i data-feather=\"credit-card\" class=\"feather-16\"></i>\r\n                </span>Pay\r\n              </a>\r\n              <a href=\"javascript:void(0);\" class=\"btn btn-danger btn-icon flex-fill position-relative p-4 fs-6\">\r\n                <span class=\"keyboard-key\">F2</span>\r\n                <span class=\"me-1 d-flex align-items-center\">\r\n                  <i data-feather=\"trash-2\" class=\"feather-16\"></i>\r\n                </span>Void\r\n              </a>\r\n\r\n              <a href=\"javascript:void(0);\" class=\"btn btn-info btn-icon flex-fill position-relative p-4 fs-6\"\r\n                data-bs-toggle=\"modal\" data-bs-target=\"#hold-order\" @click=\"openReturnModal\">\r\n                <span class=\"keyboard-key\">F3</span>\r\n                <span class=\"me-1 d-flex align-items-center\">\r\n                  <i data-feather=\"corner-up-right\" class=\"feather-16\"></i>\r\n                </span>Return\r\n              </a>\r\n\r\n            </div>\r\n\r\n          </div>\r\n          <!-- Action Buttons -->\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- Modal for Updating Quantity -->\r\n  <div class=\"modal fade\" id=\"update-quantity-modal\" tabindex=\"-1\" aria-labelledby=\"update-quantity-modalLabel\"\r\n    aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"update-quantity-modalLabel\">Update Quantity</h5>\r\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div class=\"form-group\">\r\n            <label for=\"new-quantity\">Quantity</label>\r\n            <input type=\"number\" id=\"new-quantity\" class=\"form-control\" v-model=\"newQuantity\" min=\"1\"\r\n              @keydown=\"handleModalKeydown\" />\r\n          </div>\r\n          <p v-if=\"quantityError\" class=\"text-danger\">{{ quantityError }}</p>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n          <button type=\"button\" class=\"btn btn-primary\" @click=\"updateProductQuantity\">Update</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Modal for Payment -->\r\n  <div class=\"modal fade\" id=\"payment-modal\" tabindex=\"-1\" aria-labelledby=\"payment-modalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"payment-modalLabel\">Payment</h5>\r\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div class=\"form-group\">\r\n            <label for=\"payment\">Amount to Pay: ${{ total }}</label>\r\n            <input type=\"number\" id=\"payment\" class=\"form-control\" v-model=\"clientPayment\" min=\"1\"\r\n              @keydown=\"handlePaymentKeydown\" placeholder=\"Enter payment amount\" />\r\n          </div>\r\n          <p v-if=\"paymentError.message\" class=\"text-danger\">{{ paymentError.message }}</p>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n          <button type=\"button\" class=\"btn btn-primary\" @click=\"processPayment\">Process Payment</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"modal fade\" id=\"return-modal\" tabindex=\"-1\" aria-labelledby=\"return-modalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"return-modalLabel\">Enter Transaction ID for Return</h5>\r\n          <button type=\"button\" class=\"btn-close\" id=\"return-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <input v-model=\"transactionId\" class=\"form-control\" type=\"text\" id=\"return-transaction\"\r\n            placeholder=\"Transaction ID\" />\r\n          <p v-if=\"transactionError\" class=\"text-danger\">{{ transactionError }}</p>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n          <button type=\"button\" class=\"btn btn-primary\" @click=\"fetchTransactionItems\">Fetch Items</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Modal for Return Item Selection -->\r\n  <div class=\"modal fade\" id=\"select-return-items-modal\" tabindex=\"-1\" aria-labelledby=\"select-return-items-modalLabel\"\r\n    aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"select-return-items-modalLabel\">Select Items for Return</h5>\r\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <table class=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Select</th>\r\n                <th>Product</th>\r\n                <th>Quantity</th>\r\n                <th>Return Quantity</th>\r\n                <th>Price</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr v-for=\"item in returnItems\" :key=\"item._id\">\r\n                <td>\r\n                  <input type=\"checkbox\" v-model=\"item.selected\" />\r\n                </td>\r\n                <td>{{ item.name }}</td>\r\n                <td>{{ item.quantity }}</td>\r\n                <td>\r\n                  <input type=\"number\" v-model=\"item.returnQuantity\" :max=\"item.quantity\" min=\"1\" />\r\n                </td>\r\n                <td>${{ item.price }}</td>\r\n              </tr>\r\n\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n          <button type=\"button\" class=\"btn btn-primary\" @click=\"processReturn\">Process Return</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <!-- Void Transaction Modal -->\r\n  <div class=\"modal fade\" id=\"void-transaction-modal\" tabindex=\"-1\" aria-labelledby=\"voidTransactionModalLabel\"\r\n    aria-hidden=\"true\" ref=\"voidModal\">\r\n    <div class=\"modal-dialog modal-dialog-centered\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"voidTransactionModalLabel\">Void Transaction</h5>\r\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <form @submit.prevent=\"processVoid\">\r\n            <div class=\"mb-3\">\r\n              <label for=\"transaction-id\" class=\"form-label\">Transaction ID</label>\r\n              <input type=\"text\" id=\"transaction-id\" class=\"form-control\" v-model=\"transactionId\"\r\n                placeholder=\"Enter Transaction ID\" required>\r\n            </div>\r\n            <p v-if=\"transactionError\" class=\"text-danger\">{{ transactionError }}</p>\r\n          </form>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\r\n          <button type=\"button\" class=\"btn btn-danger\" @click=\"processVoid\">Void Transaction</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</template>\r\n<script>\r\nimport { ref, computed, onMounted, onBeforeUnmount, nextTick } from 'vue';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport 'bootstrap';\r\n\r\nexport default {\r\n  setup() {\r\n    const apiURL = process.env.VUE_APP_URL;\r\n    const imgURL = process.env.VUE_APP_IMAGE_URL;\r\n\r\n    // Reactive variables\r\n    const barcode = ref('');\r\n    const cart = ref([]);\r\n    const categories = ref([]);\r\n    const products = ref([]);\r\n    const subtotal = ref(0);\r\n    const VAT = ref(12);\r\n    const discount = ref(0);\r\n    const change = ref(null);\r\n    const clientPayment = ref(null);\r\n    const barcodeError = ref(null);\r\n    const transactionId = ref('');\r\n    const transactionError = ref(null);\r\n    const returnItems = ref([]);\r\n\r\n\r\n  const paymentError = ref({ message: null });\r\n\r\n    // Modals state\r\n    const modalState = ref({ payment: false, return: false, quantity: false, void: false });\r\n    const lastAddedProduct = ref(null);\r\n    const stockQuantity = ref(0);\r\n    const newQuantity = ref(1);\r\n    const quantityError = ref(null);\r\n\r\n    // Computed properties\r\n    const total = computed(() => subtotal.value + (subtotal.value * VAT.value) / 100 - discount.value);\r\n\r\n    // Methods\r\n    const fetchData = async (endpoint, targetRef) => {\r\n      try {\r\n        const response = await axios.get(`${apiURL}/${endpoint}`);\r\n        targetRef.value = response.data[Object.keys(response.data)[0]] || [];\r\n      } catch (error) {\r\n        console.error(`Error fetching ${endpoint}:`, error);\r\n      }\r\n    };\r\n\r\n    const updateSubtotal = () => {\r\n      subtotal.value = cart.value.reduce((sum, item) => sum + item.quantity * item.price, 0);\r\n    };\r\n\r\n    const addProduct = async (product = null) => {\r\n      try {\r\n        if (!product) {\r\n          if (!barcode.value.trim()) return;\r\n          const response = await axios.get(`${apiURL}/get_product_info/${barcode.value.trim()}`);\r\n          if (response.data.success) {\r\n            product = response.data.product;\r\n            barcodeError.value = null;\r\n          } else {\r\n            barcodeError.value = response.data.message || 'Product not found.';\r\n            return;\r\n          }\r\n        }\r\n\r\n        const existingItem = cart.value.find((item) => item._id === product._id);\r\n        if (existingItem) {\r\n          if (existingItem.quantity + 1 <= product.quantity) {\r\n            existingItem.quantity += 1;\r\n          } else {\r\n            barcodeError.value = `Maximum stock reached for ${product.name}.`;\r\n          }\r\n        } else {\r\n          cart.value.push({ ...product, quantity: 1 });\r\n        }\r\n\r\n        updateSubtotal();\r\n      } catch (error) {\r\n        barcodeError.value = 'Error fetching product.';\r\n        console.error('Add Product Error:', error);\r\n      } finally {\r\n        barcode.value = '';\r\n      }\r\n    };\r\n\r\n    const processTransaction = async (type) => {\r\n      const endpoints = {\r\n        payment: 'commit_transaction',\r\n        void: 'void_transaction',\r\n        return: `return_transaction/${transactionId.value}`,\r\n      };\r\n      const payload = {\r\n        payment: {\r\n          cart: cart.value.map(({ _id, name, price, quantity }) => ({ _id, name, price, quantity })),\r\n          netAmount: subtotal.value,\r\n          totalAmount: total.value,\r\n          cash: clientPayment.value || 0,\r\n          change: change.value || 0,\r\n        },\r\n        void: { transactionId: transactionId.value },\r\n        return: {\r\n          returnedItems: returnItems.value.filter((item) => item.selected && item.returnQuantity > 0),\r\n        },\r\n      }[type];\r\n\r\n      try {\r\n        const response = await axios.post(`${apiURL}/${endpoints[type]}`, payload);\r\n        if (response.data.success) {\r\n          Swal.fire('Success', `${type.charAt(0).toUpperCase() + type.slice(1)} processed successfully.`, 'success');\r\n          resetCart();\r\n        } else {\r\n          Swal.fire('Error', response.data.message || 'Failed to process transaction.', 'error');\r\n        }\r\n      } catch (error) {\r\n        console.error(`${type} Error:`, error);\r\n        Swal.fire('Error', 'An error occurred while processing.', 'error');\r\n      }\r\n    };\r\n\r\n    const openModal = (type) => {\r\n      modalState.value[type] = true;\r\n      nextTick(() => {\r\n        const modalElement = document.getElementById(`${type}-modal`);\r\n        if (modalElement) {\r\n          const modal = new bootstrap.Modal(modalElement);\r\n          modal.show();\r\n          modalElement.addEventListener('shown.bs.modal', () => {\r\n            const inputField = modalElement.querySelector('input');\r\n            if (inputField) inputField.focus();\r\n          });\r\n        }\r\n      });\r\n    };\r\n\r\n    const resetCart = () => {\r\n      cart.value = [];\r\n      subtotal.value = 0;\r\n      discount.value = 0;\r\n      clientPayment.value = null;\r\n      change.value = null;\r\n    };\r\n\r\n    const handleKeydown = (event) => {\r\n      const actions = {\r\n        F1: () => openModal('payment'),\r\n        F2: () => openModal('void'),\r\n        F3: () => openModal('return'),\r\n        q: () => openModal('quantity'),\r\n        Escape: () => (barcode.value = ''),\r\n      };\r\n      if (actions[event.key]) {\r\n        event.preventDefault();\r\n        actions[event.key]();\r\n      }\r\n    };\r\n\r\n    // Lifecycle hooks\r\n    onMounted(() => {\r\n      fetchData('get_category_list', categories);\r\n      window.addEventListener('keydown', handleKeydown);\r\n    });\r\n\r\n    onBeforeUnmount(() => {\r\n      window.removeEventListener('keydown', handleKeydown);\r\n    });\r\n\r\n    return {\r\n      apiURL,\r\n      imgURL,\r\n      barcode,\r\n      cart,\r\n      categories,\r\n      products,\r\n      subtotal,\r\n      VAT,\r\n      discount,\r\n      total,\r\n      change,\r\n      clientPayment,\r\n      barcodeError,\r\n      transactionId,\r\n      transactionError,\r\n      returnItems,\r\n      modalState,\r\n      addProduct,\r\n      processTransaction,\r\n      openModal,\r\n      paymentError\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n\r\n\r\n\r\n\r\n<style scoped>\r\n/* Container for the product display */\r\n.tabs_container {\r\n  min-height: 620px;\r\n  max-height: 620px;\r\n  overflow-y: auto;\r\n  background: #fff;\r\n  padding: 20px;\r\n\r\n}\r\n\r\n/* Flex container for product display */\r\n.tab_content {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 1rem;\r\n  /* Space between items */\r\n  justify-content: space-between;\r\n}\r\n\r\n/* Ensure product-info fits within columns properly */\r\n.product-info {\r\n  position: relative;\r\n  padding: 15px;\r\n  background: #f9f9f9;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  transition: transform 0.2s ease-in-out;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  /* Optional shadow */\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  /* Flex to ensure each card takes equal width */\r\n  flex: 1 1 calc(33.33% - 1rem);\r\n  /* Default to 3 items per row */\r\n  height: 100%;\r\n\r\n}\r\n\r\n.product-info img {\r\n  width: 100%;\r\n  height: 150px;\r\n  /* Fixed height for images */\r\n  object-fit: cover;\r\n  /* Ensure images cover the area proportionally */\r\n}\r\n\r\n.product-info:hover {\r\n  transform: scale(1.05);\r\n  /* Slight zoom effect on hover */\r\n}\r\n\r\n/* Mobile and tablet adjustments for card layout */\r\n@media (max-width: 1200px) {\r\n  .product-info {\r\n    flex: 1 1 calc(25% - 1rem);\r\n    /* 4 items per row for large screens */\r\n    height: 300px;\r\n    /* Set height for large screens */\r\n  }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .product-info {\r\n    flex: 1 1 calc(33.33% - 1rem);\r\n    /* 3 items per row for medium screens */\r\n    height: 250px;\r\n    /* Adjust height for medium screens */\r\n  }\r\n}\r\n\r\n@media (max-width: 576px) {\r\n  .product-info {\r\n    flex: 1 1 calc(50% - 1rem);\r\n    /* 2 items per row for small screens */\r\n    height: 200px;\r\n    /* Adjust height for small screens */\r\n  }\r\n}\r\n\r\n/* Category List Styling */\r\n.category-list {\r\n  padding: 15px;\r\n  background-color: #f9f9f9;\r\n  border-right: 1px solid #ddd;\r\n}\r\n\r\n.category-list ul {\r\n  list-style-type: none;\r\n  padding-left: 0;\r\n}\r\n\r\n.category-list li {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.category-list a {\r\n  text-decoration: none;\r\n  color: #333;\r\n  font-size: 16px;\r\n  padding: 8px 10px;\r\n  border-radius: 4px;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.category-list a:active {\r\n  color: #fff;\r\n}\r\n\r\n.category-list a:hover {\r\n  color: #fff;\r\n\r\n}\r\n\r\n.list-group-item.active {\r\n  background-color: #22A95E;\r\n  /* Green background for active list item */\r\n  border-color: #22A95E;\r\n  /* Optional: Match border with the active color */\r\n}\r\n\r\n.list-group-item.active a {\r\n  color: #fff;\r\n  /* Make the text white inside the active list item */\r\n}\r\n\r\n/* Keyboard Key Styling for the UI */\r\n.keyboard-key {\r\n  position: absolute;\r\n  top: 5px;\r\n  left: 5px;\r\n  font-size: 12px;\r\n  background-color: rgba(0, 0, 0, 0.1);\r\n  color: white;\r\n  padding: 5px 8px;\r\n  border-radius: 4px;\r\n  font-family: 'Courier New', monospace;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.product-wrap {\r\n  max-height: 100%;\r\n\r\n  overflow: hidden;\r\n\r\n}\r\n\r\n.table {\r\n  width: 100%;\r\n  table-layout: auto;\r\n  word-wrap: break-word;\r\n\r\n}\r\n\r\n.table th,\r\n.table td {\r\n  white-space: normal;\r\n\r\n  word-break: break-word;\r\n\r\n  text-align: left;\r\n\r\n}\r\n\r\n.product-name-cell {\r\n  max-width: 200px;\r\n  /* Adjust as needed for column width */\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  /* Optional: adds \"...\" for long text */\r\n  white-space: normal;\r\n}\r\n\r\n.quantity-input {\r\n  width: 50px;\r\n  /* Ensures quantity input field doesn't take too much space */\r\n  text-align: center;\r\n}\r\n\r\n.no-products-message {\r\n  display: flex;\r\n  justify-content: center;\r\n  /* Center horizontally */\r\n  align-items: center;\r\n  /* Center vertically */\r\n  height: 200px;\r\n  /* Adjust the height as needed */\r\n  text-align: center;\r\n  /* Center the text */\r\n  font-size: 18px;\r\n  /* Optional: Adjust the font size */\r\n  color: #777;\r\n  /* Optional: Set a color for the text */\r\n}\r\n\r\n.category-list ul::-webkit-scrollbar {\r\n  width: 8px;\r\n}\r\n\r\n.category-list ul::-webkit-scrollbar-thumb {\r\n  background-color: #ccc;\r\n  border-radius: 4px;\r\n}\r\n\r\n.category-list ul::-webkit-scrollbar-thumb:hover {\r\n  background-color: #aaa;\r\n}\r\n</style>\r\n"],"mappings":";;;;;;AAqTA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,eAAe,EAAEC,QAAO,QAAS,KAAK;AACzE,OAAOC,KAAI,MAAO,OAAO;AACzB,OAAOC,IAAG,MAAO,aAAa;AAC9B,OAAO,WAAW;AAElB,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIC,OAAO,CAACC,GAAG,CAACC,WAAW;IACtC,MAAMC,MAAK,GAAIH,OAAO,CAACC,GAAG,CAACG,iBAAiB;;IAE5C;IACA,MAAMC,OAAM,GAAId,GAAG,CAAC,EAAE,CAAC;IACvB,MAAMe,IAAG,GAAIf,GAAG,CAAC,EAAE,CAAC;IACpB,MAAMgB,UAAS,GAAIhB,GAAG,CAAC,EAAE,CAAC;IAC1B,MAAMiB,QAAO,GAAIjB,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMkB,QAAO,GAAIlB,GAAG,CAAC,CAAC,CAAC;IACvB,MAAMmB,GAAE,GAAInB,GAAG,CAAC,EAAE,CAAC;IACnB,MAAMoB,QAAO,GAAIpB,GAAG,CAAC,CAAC,CAAC;IACvB,MAAMqB,MAAK,GAAIrB,GAAG,CAAC,IAAI,CAAC;IACxB,MAAMsB,aAAY,GAAItB,GAAG,CAAC,IAAI,CAAC;IAC/B,MAAMuB,YAAW,GAAIvB,GAAG,CAAC,IAAI,CAAC;IAC9B,MAAMwB,aAAY,GAAIxB,GAAG,CAAC,EAAE,CAAC;IAC7B,MAAMyB,gBAAe,GAAIzB,GAAG,CAAC,IAAI,CAAC;IAClC,MAAM0B,WAAU,GAAI1B,GAAG,CAAC,EAAE,CAAC;IAG7B,MAAM2B,YAAW,GAAI3B,GAAG,CAAC;MAAE4B,OAAO,EAAE;IAAK,CAAC,CAAC;;IAEzC;IACA,MAAMC,UAAS,GAAI7B,GAAG,CAAC;MAAE8B,OAAO,EAAE,KAAK;MAAEC,MAAM,EAAE,KAAK;MAAEC,QAAQ,EAAE,KAAK;MAAEC,IAAI,EAAE;IAAM,CAAC,CAAC;IACvF,MAAMC,gBAAe,GAAIlC,GAAG,CAAC,IAAI,CAAC;IAClC,MAAMmC,aAAY,GAAInC,GAAG,CAAC,CAAC,CAAC;IAC5B,MAAMoC,WAAU,GAAIpC,GAAG,CAAC,CAAC,CAAC;IAC1B,MAAMqC,aAAY,GAAIrC,GAAG,CAAC,IAAI,CAAC;;IAE/B;IACA,MAAMsC,KAAI,GAAIrC,QAAQ,CAAC,MAAMiB,QAAQ,CAACqB,KAAI,GAAKrB,QAAQ,CAACqB,KAAI,GAAIpB,GAAG,CAACoB,KAAK,GAAI,GAAE,GAAInB,QAAQ,CAACmB,KAAK,CAAC;;IAElG;IACA,MAAMC,SAAQ,GAAI,MAAAA,CAAOC,QAAQ,EAAEC,SAAS,KAAK;MAC/C,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMtC,KAAK,CAACuC,GAAG,CAAC,GAAGpC,MAAM,IAAIiC,QAAQ,EAAE,CAAC;QACzDC,SAAS,CAACH,KAAI,GAAII,QAAQ,CAACE,IAAI,CAACC,MAAM,CAACC,IAAI,CAACJ,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE;MACtE,EAAE,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kBAAkBP,QAAQ,GAAG,EAAEO,KAAK,CAAC;MACrD;IACF,CAAC;IAED,MAAME,cAAa,GAAIA,CAAA,KAAM;MAC3BhC,QAAQ,CAACqB,KAAI,GAAIxB,IAAI,CAACwB,KAAK,CAACY,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAE,GAAIC,IAAI,CAACrB,QAAO,GAAIqB,IAAI,CAACC,KAAK,EAAE,CAAC,CAAC;IACxF,CAAC;IAED,MAAMC,UAAS,GAAI,MAAAA,CAAOC,OAAM,GAAI,IAAI,KAAK;MAC3C,IAAI;QACF,IAAI,CAACA,OAAO,EAAE;UACZ,IAAI,CAAC1C,OAAO,CAACyB,KAAK,CAACkB,IAAI,CAAC,CAAC,EAAE;UAC3B,MAAMd,QAAO,GAAI,MAAMtC,KAAK,CAACuC,GAAG,CAAC,GAAGpC,MAAM,qBAAqBM,OAAO,CAACyB,KAAK,CAACkB,IAAI,CAAC,CAAC,EAAE,CAAC;UACtF,IAAId,QAAQ,CAACE,IAAI,CAACa,OAAO,EAAE;YACzBF,OAAM,GAAIb,QAAQ,CAACE,IAAI,CAACW,OAAO;YAC/BjC,YAAY,CAACgB,KAAI,GAAI,IAAI;UAC3B,OAAO;YACLhB,YAAY,CAACgB,KAAI,GAAII,QAAQ,CAACE,IAAI,CAACjB,OAAM,IAAK,oBAAoB;YAClE;UACF;QACF;QAEA,MAAM+B,YAAW,GAAI5C,IAAI,CAACwB,KAAK,CAACqB,IAAI,CAAEP,IAAI,IAAKA,IAAI,CAACQ,GAAE,KAAML,OAAO,CAACK,GAAG,CAAC;QACxE,IAAIF,YAAY,EAAE;UAChB,IAAIA,YAAY,CAAC3B,QAAO,GAAI,KAAKwB,OAAO,CAACxB,QAAQ,EAAE;YACjD2B,YAAY,CAAC3B,QAAO,IAAK,CAAC;UAC5B,OAAO;YACLT,YAAY,CAACgB,KAAI,GAAI,6BAA6BiB,OAAO,CAACM,IAAI,GAAG;UACnE;QACF,OAAO;UACL/C,IAAI,CAACwB,KAAK,CAACwB,IAAI,CAAC;YAAE,GAAGP,OAAO;YAAExB,QAAQ,EAAE;UAAE,CAAC,CAAC;QAC9C;QAEAkB,cAAc,CAAC,CAAC;MAClB,EAAE,OAAOF,KAAK,EAAE;QACdzB,YAAY,CAACgB,KAAI,GAAI,yBAAyB;QAC9CU,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC5C,UAAU;QACRlC,OAAO,CAACyB,KAAI,GAAI,EAAE;MACpB;IACF,CAAC;IAED,MAAMyB,kBAAiB,GAAI,MAAOC,IAAI,IAAK;MACzC,MAAMC,SAAQ,GAAI;QAChBpC,OAAO,EAAE,oBAAoB;QAC7BG,IAAI,EAAE,kBAAkB;QACxBF,MAAM,EAAE,sBAAsBP,aAAa,CAACe,KAAK;MACnD,CAAC;MACD,MAAM4B,OAAM,GAAI;QACdrC,OAAO,EAAE;UACPf,IAAI,EAAEA,IAAI,CAACwB,KAAK,CAAC6B,GAAG,CAAC,CAAC;YAAEP,GAAG;YAAEC,IAAI;YAAER,KAAK;YAAEtB;UAAS,CAAC,MAAM;YAAE6B,GAAG;YAAEC,IAAI;YAAER,KAAK;YAAEtB;UAAS,CAAC,CAAC,CAAC;UAC1FqC,SAAS,EAAEnD,QAAQ,CAACqB,KAAK;UACzB+B,WAAW,EAAEhC,KAAK,CAACC,KAAK;UACxBgC,IAAI,EAAEjD,aAAa,CAACiB,KAAI,IAAK,CAAC;UAC9BlB,MAAM,EAAEA,MAAM,CAACkB,KAAI,IAAK;QAC1B,CAAC;QACDN,IAAI,EAAE;UAAET,aAAa,EAAEA,aAAa,CAACe;QAAM,CAAC;QAC5CR,MAAM,EAAE;UACNyC,aAAa,EAAE9C,WAAW,CAACa,KAAK,CAACkC,MAAM,CAAEpB,IAAI,IAAKA,IAAI,CAACqB,QAAO,IAAKrB,IAAI,CAACsB,cAAa,GAAI,CAAC;QAC5F;MACF,CAAC,CAACV,IAAI,CAAC;MAEP,IAAI;QACF,MAAMtB,QAAO,GAAI,MAAMtC,KAAK,CAACuE,IAAI,CAAC,GAAGpE,MAAM,IAAI0D,SAAS,CAACD,IAAI,CAAC,EAAE,EAAEE,OAAO,CAAC;QAC1E,IAAIxB,QAAQ,CAACE,IAAI,CAACa,OAAO,EAAE;UACzBpD,IAAI,CAACuE,IAAI,CAAC,SAAS,EAAE,GAAGZ,IAAI,CAACa,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,IAAId,IAAI,CAACe,KAAK,CAAC,CAAC,CAAC,0BAA0B,EAAE,SAAS,CAAC;UAC1GC,SAAS,CAAC,CAAC;QACb,OAAO;UACL3E,IAAI,CAACuE,IAAI,CAAC,OAAO,EAAElC,QAAQ,CAACE,IAAI,CAACjB,OAAM,IAAK,gCAAgC,EAAE,OAAO,CAAC;QACxF;MACF,EAAE,OAAOoB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,GAAGiB,IAAI,SAAS,EAAEjB,KAAK,CAAC;QACtC1C,IAAI,CAACuE,IAAI,CAAC,OAAO,EAAE,qCAAqC,EAAE,OAAO,CAAC;MACpE;IACF,CAAC;IAED,MAAMK,SAAQ,GAAKjB,IAAI,IAAK;MAC1BpC,UAAU,CAACU,KAAK,CAAC0B,IAAI,IAAI,IAAI;MAC7B7D,QAAQ,CAAC,MAAM;QACb,MAAM+E,YAAW,GAAIC,QAAQ,CAACC,cAAc,CAAC,GAAGpB,IAAI,QAAQ,CAAC;QAC7D,IAAIkB,YAAY,EAAE;UAChB,MAAMG,KAAI,GAAI,IAAIC,SAAS,CAACC,KAAK,CAACL,YAAY,CAAC;UAC/CG,KAAK,CAACG,IAAI,CAAC,CAAC;UACZN,YAAY,CAACO,gBAAgB,CAAC,gBAAgB,EAAE,MAAM;YACpD,MAAMC,UAAS,GAAIR,YAAY,CAACS,aAAa,CAAC,OAAO,CAAC;YACtD,IAAID,UAAU,EAAEA,UAAU,CAACE,KAAK,CAAC,CAAC;UACpC,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;IACJ,CAAC;IAED,MAAMZ,SAAQ,GAAIA,CAAA,KAAM;MACtBlE,IAAI,CAACwB,KAAI,GAAI,EAAE;MACfrB,QAAQ,CAACqB,KAAI,GAAI,CAAC;MAClBnB,QAAQ,CAACmB,KAAI,GAAI,CAAC;MAClBjB,aAAa,CAACiB,KAAI,GAAI,IAAI;MAC1BlB,MAAM,CAACkB,KAAI,GAAI,IAAI;IACrB,CAAC;IAED,MAAMuD,aAAY,GAAKC,KAAK,IAAK;MAC/B,MAAMC,OAAM,GAAI;QACdC,EAAE,EAAEA,CAAA,KAAMf,SAAS,CAAC,SAAS,CAAC;QAC9BgB,EAAE,EAAEA,CAAA,KAAMhB,SAAS,CAAC,MAAM,CAAC;QAC3BiB,EAAE,EAAEA,CAAA,KAAMjB,SAAS,CAAC,QAAQ,CAAC;QAC7BkB,CAAC,EAAEA,CAAA,KAAMlB,SAAS,CAAC,UAAU,CAAC;QAC9BmB,MAAM,EAAEA,CAAA,KAAOvF,OAAO,CAACyB,KAAI,GAAI;MACjC,CAAC;MACD,IAAIyD,OAAO,CAACD,KAAK,CAACO,GAAG,CAAC,EAAE;QACtBP,KAAK,CAACQ,cAAc,CAAC,CAAC;QACtBP,OAAO,CAACD,KAAK,CAACO,GAAG,CAAC,CAAC,CAAC;MACtB;IACF,CAAC;;IAED;IACApG,SAAS,CAAC,MAAM;MACdsC,SAAS,CAAC,mBAAmB,EAAExB,UAAU,CAAC;MAC1CwF,MAAM,CAACd,gBAAgB,CAAC,SAAS,EAAEI,aAAa,CAAC;IACnD,CAAC,CAAC;IAEF3F,eAAe,CAAC,MAAM;MACpBqG,MAAM,CAACC,mBAAmB,CAAC,SAAS,EAAEX,aAAa,CAAC;IACtD,CAAC,CAAC;IAEF,OAAO;MACLtF,MAAM;MACNI,MAAM;MACNE,OAAO;MACPC,IAAI;MACJC,UAAU;MACVC,QAAQ;MACRC,QAAQ;MACRC,GAAG;MACHC,QAAQ;MACRkB,KAAK;MACLjB,MAAM;MACNC,aAAa;MACbC,YAAY;MACZC,aAAa;MACbC,gBAAgB;MAChBC,WAAW;MACXG,UAAU;MACV0B,UAAU;MACVS,kBAAkB;MAClBkB,SAAS;MACTvD;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}