{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"row px-5\"\n};\nconst _hoisted_2 = {\n  class: \"row\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_4 = {\n  ref: \"svgRef\"\n};\nconst _hoisted_5 = {\n  class: \"product-name text-center\"\n};\nconst _hoisted_6 = {\n  class: \"row ps-4 pe-3\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [$setup.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString($setup.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), (_openBlock(), _createElementBlock(\"svg\", _hoisted_4, null, 512 /* NEED_PATCH */)), _createElementVNode(\"div\", _hoisted_5, _toDisplayString($props.productName), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"button\", {\n    class: \"btn btn-primary\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.downloadBarcode && $setup.downloadBarcode(...args))\n  }, _cache[1] || (_cache[1] = [_createTextVNode(\"Downloads\"), _createElementVNode(\"span\", null, \"<\", -1 /* HOISTED */)]))])]);\n}","map":{"version":3,"names":["class","key","ref","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","$setup","errorMessage","_hoisted_3","_toDisplayString","_createCommentVNode","_hoisted_4","_hoisted_5","$props","productName","_hoisted_6","onClick","_cache","args","downloadBarcode","_createTextVNode"],"sources":["C:\\Users\\Administrator\\OneDrive\\Desktop\\POSExpress\\frontend\\src\\components\\Admin\\Inventory\\Barcode.vue"],"sourcesContent":["<script>\r\nimport JsBarcode from 'jsbarcode';\r\nimport { onMounted, watch, ref, nextTick } from 'vue';\r\n\r\nexport default {\r\n  props: {\r\n    sku: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    productName: {\r\n      type: String,\r\n      default: 'Product Name' // Default label if no product name is provided\r\n    }\r\n  },\r\n  setup(props) {\r\n    const svgRef = ref(null);\r\n    const errorMessage = ref('');\r\n    const fallbackSku = '0000000000000';\r\n\r\n    const calculateEAN13Checksum = (sku) => {\r\n      const digits = sku.split('').map(Number);\r\n      let sum = 0;\r\n      for (let i = 0; i < 12; i++) {\r\n        sum += (i % 2 === 0 ? digits[i] : digits[i] * 3);\r\n      }\r\n      return (10 - (sum % 10)) % 10;\r\n    };\r\n\r\n    const generateBarcode = async (sku) => {\r\n      try {\r\n        if (!sku || typeof sku !== 'string') {\r\n          throw new Error('Invalid SKU');\r\n        }\r\n        if (sku.length < 13) {\r\n          sku = sku.padStart(13, '0');\r\n        } else if (sku.length > 13) {\r\n          sku = sku.slice(0, 13);\r\n        }\r\n        if (sku.length !== 13 || !/^\\d{13}$/.test(sku)) {\r\n          throw new Error('Invalid SKU format: must be numeric and 13 digits.');\r\n        }\r\n\r\n        const checksum = calculateEAN13Checksum(sku);\r\n        sku = sku.slice(0, 12) + checksum;\r\n        errorMessage.value = '';\r\n        await nextTick();\r\n\r\n        JsBarcode(svgRef.value, sku, {\r\n          format: 'EAN13',\r\n          lineColor: '#000',\r\n          width: 2,\r\n          height: 50,\r\n          displayValue: true\r\n        });\r\n      } catch (error) {\r\n        console.error(error.message);\r\n        errorMessage.value = error.message;\r\n        JsBarcode(svgRef.value, fallbackSku, {\r\n          format: 'CODE128',\r\n          lineColor: '#000',\r\n          width: 2,\r\n          height: 50,\r\n          displayValue: true\r\n        });\r\n      }\r\n    };\r\n\r\n    const downloadBarcode = () => {\r\n  const svg = svgRef.value;\r\n  const canvas = document.createElement('canvas');\r\n  const ctx = canvas.getContext('2d');\r\n  const svgData = new XMLSerializer().serializeToString(svg);\r\n  const img = new Image();\r\n  const svgBlob = new Blob([svgData], { type: 'image/svg+xml;charset=utf-8' });\r\n  const url = URL.createObjectURL(svgBlob);\r\n\r\n  img.onload = () => {\r\n    canvas.width = img.width;\r\n    canvas.height = img.height + 30; // Extra space for product name\r\n    ctx.fillStyle = 'white';\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n    // Draw the barcode image on the canvas\r\n    ctx.drawImage(img, 0, 0);\r\n\r\n    // Center the text\r\n    ctx.font = '16px Arial';\r\n    ctx.fillStyle = 'black';\r\n    ctx.textAlign = 'center';\r\n    ctx.fillText(props.productName, canvas.width / 2, img.height + 20);\r\n\r\n    const pngUrl = canvas.toDataURL('image/png');\r\n    const link = document.createElement('a');\r\n    link.href = pngUrl;\r\n    link.download = `${props.sku}_barcode.png`;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n  img.src = url;\r\n};\r\n\r\n    onMounted(() => generateBarcode(props.sku));\r\n    watch(() => props.sku, (newSku) => {\r\n      generateBarcode(newSku);\r\n    });\r\n\r\n    return {\r\n      svgRef,\r\n      errorMessage,\r\n      downloadBarcode\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"row px-5\">\r\n    <div class=\"row\">\r\n      <div v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</div>\r\n      <svg ref=\"svgRef\"></svg>\r\n      <div class=\"product-name text-center\">{{ productName }}</div>\r\n    </div>\r\n    <div class=\"row ps-4 pe-3\">\r\n      <button class=\"btn btn-primary\" @click=\"downloadBarcode\">Downloads<span><</span></button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.error-message {\r\n  color: red;\r\n  font-weight: bold;\r\n  margin-top: 10px;\r\n}\r\n\r\n.product-name {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  font-size: 12px;\r\n  margin-top: 5px;\r\n  color: black;\r\n  font-weight: bold;\r\n}\r\n\r\n</style>"],"mappings":";;EAuHOA,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC;AAAK;;EAxHpBC,GAAA;EAyH+BD,KAAK,EAAC;;;EAC1BE,GAAG,EAAC;AAAQ;;EACZF,KAAK,EAAC;AAA0B;;EAElCA,KAAK,EAAC;AAAe;;uBAN5BG,mBAAA,CASM,OATNC,UASM,GARJC,mBAAA,CAIM,OAJNC,UAIM,GAHOC,MAAA,CAAAC,YAAY,I,cAAvBL,mBAAA,CAAuE,OAAvEM,UAAuE,EAAAC,gBAAA,CAArBH,MAAA,CAAAC,YAAY,oBAzHpEG,mBAAA,iB,cA0HMR,mBAAA,CAAwB,OAAxBS,UAAwB,gCACxBP,mBAAA,CAA6D,OAA7DQ,UAA6D,EAAAH,gBAAA,CAApBI,MAAA,CAAAC,WAAW,iB,GAEtDV,mBAAA,CAEM,OAFNW,UAEM,GADJX,mBAAA,CAAyF;IAAjFL,KAAK,EAAC,iBAAiB;IAAEiB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEZ,MAAA,CAAAa,eAAA,IAAAb,MAAA,CAAAa,eAAA,IAAAD,IAAA,CAAe;gCA9H7DE,gBAAA,CA8H+D,WAAS,GAAAhB,mBAAA,CAAc,cAAR,GAAC,oB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}