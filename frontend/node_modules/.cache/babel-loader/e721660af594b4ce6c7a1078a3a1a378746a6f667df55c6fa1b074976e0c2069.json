{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"content\"\n};\nconst _hoisted_2 = {\n  class: \"row\"\n};\nconst _hoisted_3 = {\n  class: \"card-body\"\n};\nconst _hoisted_4 = {\n  key: 1\n};\nexport function render(_ctx, _cache) {\n  const _component_Navbar = _resolveComponent(\"Navbar\");\n  const _component_LineChart = _resolveComponent(\"LineChart\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_Navbar), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_ctx.chartData.labels && _ctx.chartData.labels.length > 0 ? (_openBlock(), _createBlock(_component_LineChart, {\n    key: 0,\n    \"chart-data\": _ctx.chartData,\n    \"chart-options\": _ctx.chartOptions\n  }, null, 8 /* PROPS */, [\"chart-data\", \"chart-options\"])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_4, \"Loading chart data...\"))])])])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_createVNode","_component_Navbar","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","_ctx","chartData","labels","length","_createBlock","_component_LineChart","chartOptions","_hoisted_4"],"sources":["C:\\Users\\Administrator\\OneDrive\\Desktop\\POSExpress\\frontend\\src\\components\\Admin\\Main\\Dashboard.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <Navbar />\r\n    <div class=\"content\">\r\n      <div class=\"row\">\r\n        <div class=\"card-body\">\r\n          <LineChart\r\n            v-if=\"chartData.labels && chartData.labels.length > 0\"\r\n            :chart-data=\"chartData\"\r\n            :chart-options=\"chartOptions\"\r\n          />\r\n          <p v-else>Loading chart data...</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted, defineComponent } from \"vue\";\r\nimport Navbar from \"/src/components/Admin/Navbar.vue\";\r\nimport LineChart from /LineChart.vue\";\r\nimport axios from \"axios\";\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    Navbar,\r\n    LineChart,\r\n  },\r\n  setup() {\r\n    const salesData = ref([]);\r\n\r\n    const chartData = computed(() => {\r\n      if (!salesData.value || salesData.value.length === 0) {\r\n        return { labels: [], datasets: [] };\r\n      }\r\n\r\n      const labels = salesData.value.map((data) => data._id);\r\n      const totalSales = salesData.value.map((data) => data.totalSales);\r\n      const totalProfit = salesData.value.map((data) => data.totalProfit);\r\n\r\n      return {\r\n        labels,\r\n        datasets: [\r\n          {\r\n            label: \"Total Sales\",\r\n            data: totalSales,\r\n            borderColor: \"rgb(75, 192, 192)\",\r\n            backgroundColor: \"rgba(75, 192, 192, 0.2)\",\r\n            fill: true,\r\n            tension: 0.4,\r\n          },\r\n          {\r\n            label: \"Total Profit\",\r\n            data: totalProfit,\r\n            borderColor: \"rgb(255, 99, 132)\",\r\n            backgroundColor: \"rgba(255, 99, 132, 0.2)\",\r\n            fill: true,\r\n            tension: 0.4,\r\n          },\r\n        ],\r\n      };\r\n    });\r\n\r\n    const chartOptions = computed(() => ({\r\n      responsive: true,\r\n      plugins: {\r\n        legend: {\r\n          position: \"top\",\r\n        },\r\n        tooltip: {\r\n          enabled: true,\r\n        },\r\n      },\r\n      scales: {\r\n        x: {\r\n          title: {\r\n            display: true,\r\n            text: \"Dates\",\r\n          },\r\n        },\r\n        y: {\r\n          title: {\r\n            display: true,\r\n            text: \"Values\",\r\n          },\r\n          beginAtZero: true,\r\n        },\r\n      },\r\n    }));\r\n\r\n    onMounted(async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/get_sales\");\r\n        if (response.data.success) {\r\n          salesData.value = response.data.salesDatas;\r\n        } else {\r\n          console.error(\"Failed to fetch sales data\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching sales data:\", error);\r\n      }\r\n    });\r\n\r\n    return {\r\n      chartData,\r\n      chartOptions,\r\n    };\r\n  },\r\n});\r\n</script>\r\n"],"mappings":";;EAGSA,KAAK,EAAC;AAAS;;EACbA,KAAK,EAAC;AAAK;;EACTA,KAAK,EAAC;AAAW;;EAL9BC,GAAA;AAAA;;;;uBACEC,mBAAA,CAcM,cAbJC,YAAA,CAAUC,iBAAA,GACVC,mBAAA,CAWM,OAXNC,UAWM,GAVJD,mBAAA,CASM,OATNE,UASM,GARJF,mBAAA,CAOM,OAPNG,UAOM,GALIC,IAAA,CAAAC,SAAS,CAACC,MAAM,IAAIF,IAAA,CAAAC,SAAS,CAACC,MAAM,CAACC,MAAM,Q,cADnDC,YAAA,CAIEC,oBAAA;IAVZb,GAAA;IAQa,YAAU,EAAEQ,IAAA,CAAAC,SAAS;IACrB,eAAa,EAAED,IAAA,CAAAM;6EAElBb,mBAAA,CAAmC,KAX7Cc,UAAA,EAWoB,uBAAqB,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}