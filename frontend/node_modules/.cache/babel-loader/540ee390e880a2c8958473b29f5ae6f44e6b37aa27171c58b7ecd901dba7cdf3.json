{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nexport default {\n  setup() {\n    const password = ref(\"\");\n    const router = useRouter();\n    const isPasswordVisible = ref(false);\n    const email = localStorage.getItem(\"email\");\n    const togglePassword = () => {\n      isPasswordVisible.value = !isPasswordVisible.value;\n    };\n    const login = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/re_login/\", {\n          email: email.value,\n          password: password.value\n        });\n        const {\n          token,\n          role,\n          user,\n          id,\n          email\n        } = response.data;\n\n        // Store token and role in local storage\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"role\", role);\n        localStorage.setItem(\"user\", user);\n        localStorage.setItem(\"id\", id);\n        localStorage.setItem(\"email\", email);\n\n        // Show success notification\n        Swal.fire({\n          icon: \"success\",\n          title: \"Login Successful\",\n          timer: 1500,\n          // \n          showConfirmButton: false\n        });\n\n        // Redirect based on role\n        if (role === \"Admin\") {\n          router.push(\"/dashboard\");\n        } else if (role === \"Cashier\") {\n          router.push(\"/pos\");\n        }\n      } catch (error) {\n        // Show error notification\n        Swal.fire({\n          icon: \"error\",\n          title: \"Login Failed\",\n          text: error.response?.data?.message || \"An error occurred during login\",\n          timer: 1500,\n          // \n          showConfirmButton: false\n        });\n      }\n    };\n    return {\n      email,\n      password,\n      login,\n      togglePassword,\n      isPasswordVisible\n    };\n  }\n};","map":{"version":3,"names":["ref","useRouter","axios","Swal","setup","password","router","isPasswordVisible","email","localStorage","getItem","togglePassword","value","login","response","get","token","role","user","id","data","setItem","fire","icon","title","timer","showConfirmButton","push","error","text","message"],"sources":["C:\\Users\\Administrator\\OneDrive\\Desktop\\POSExpress\\frontend\\src\\components\\LandingPage\\LockScreen.vue"],"sourcesContent":["<template>\r\n    <div class=\"container mt-5\">\r\n      <div class=\"row justify-content-center\">\r\n        <div class=\"col-md-5\">\r\n          <div class=\"card shadow-lg border-0 rounded\">\r\n            <div class=\"text-center mt-3\">\r\n              <img\r\n                src=\"/img/logo.png\"\r\n                alt=\"Logo\"\r\n                class=\"img-fluid \"\r\n                style=\"width: 400px; height: 100px;\"\r\n              />\r\n            </div>\r\n            <div class=\"card-header text-center  text-white\">\r\n              <h4 class=\"m-0\">Re-Enter The Password</h4>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <form @submit.prevent=\"login\">\r\n                <div class=\"mb-3\">\r\n                  <h5 for=\"email\" class=\"form-label text-center\">Email Address</h5>\r\n                </div>\r\n                <div class=\"mb-3 pass-group\">\r\n                  <label for=\"password\" class=\"form-label\">Password</label>\r\n                  <input\r\n                     :type=\"isPasswordVisible ? 'text' : 'password'\" \r\n                    class=\"form-control form-control-lg\"\r\n                    id=\"password\"\r\n                    v-model=\"password\"\r\n                    placeholder=\"Enter your password\"\r\n                    required\r\n                  />\r\n                  <font-awesome-icon :icon=\"isPasswordVisible ? 'fa-eye' : 'fa-eye-slash'\" @click=\"togglePassword()\"\r\n                  class=\"toggle-password fa-xs mt-3\" style=\"font-size: 8px;\" />\r\n                </div>\r\n                <div class=\"d-grid gap-2\">\r\n                  <button type=\"submit\" class=\"btn btn-primary btn-lg\">\r\n                    Login\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div class=\"card-footer text-center text-muted\">\r\n              <small>Powered By POSExpress</small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n\r\n<label>Password</label>\r\n\r\n\r\n  <script>\r\n  import { ref } from \"vue\";\r\n  import { useRouter } from \"vue-router\";\r\n  import axios from \"axios\";\r\n  import Swal from \"sweetalert2\";\r\n  \r\n  export default {\r\n    setup() {\r\n  \r\n      const password = ref(\"\");\r\n      const router = useRouter();\r\n      const isPasswordVisible = ref(false);\r\n      const email = localStorage.getItem(\"email\");\r\n      const togglePassword = ()=>{\r\n        isPasswordVisible.value = !isPasswordVisible.value;\r\n    } \r\n      const login = async () => {\r\n        try {\r\n          const response = await axios.get(\"http://localhost:5000/api/re_login/\", {\r\n            email: email.value,\r\n            password: password.value,\r\n          });\r\n  \r\n          const { token, role, user, id, email } = response.data;\r\n  \r\n          // Store token and role in local storage\r\n          localStorage.setItem(\"token\", token);\r\n          localStorage.setItem(\"role\", role);\r\n          localStorage.setItem(\"user\", user);\r\n          localStorage.setItem(\"id\", id);\r\n          localStorage.setItem(\"email\", email);\r\n  \r\n          // Show success notification\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: \"Login Successful\",\r\n            timer: 1500, // \r\n            showConfirmButton: false \r\n\r\n          });\r\n  \r\n          // Redirect based on role\r\n          if (role === \"Admin\") {\r\n            router.push(\"/dashboard\");\r\n          } else if (role === \"Cashier\") {\r\n            router.push(\"/pos\");\r\n          }\r\n        } catch (error) {\r\n          // Show error notification\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Login Failed\",\r\n            text: error.response?.data?.message || \"An error occurred during login\",\r\n            timer: 1500, // \r\n            showConfirmButton: false \r\n          });\r\n        }\r\n      };\r\n  \r\n      return {\r\n        email,\r\n        password,\r\n        login,\r\n        togglePassword,\r\n        isPasswordVisible\r\n      };\r\n    },\r\n  };\r\n  </script>"],"mappings":";AAsDE,SAASA,GAAE,QAAS,KAAK;AACzB,SAASC,SAAQ,QAAS,YAAY;AACtC,OAAOC,KAAI,MAAO,OAAO;AACzB,OAAOC,IAAG,MAAO,aAAa;AAE9B,eAAe;EACbC,KAAKA,CAAA,EAAG;IAEN,MAAMC,QAAO,GAAIL,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMM,MAAK,GAAIL,SAAS,CAAC,CAAC;IAC1B,MAAMM,iBAAgB,GAAIP,GAAG,CAAC,KAAK,CAAC;IACpC,MAAMQ,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,cAAa,GAAIA,CAAA,KAAI;MACzBJ,iBAAiB,CAACK,KAAI,GAAI,CAACL,iBAAiB,CAACK,KAAK;IACtD;IACE,MAAMC,KAAI,GAAI,MAAAA,CAAA,KAAY;MACxB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMZ,KAAK,CAACa,GAAG,CAAC,qCAAqC,EAAE;UACtEP,KAAK,EAAEA,KAAK,CAACI,KAAK;UAClBP,QAAQ,EAAEA,QAAQ,CAACO;QACrB,CAAC,CAAC;QAEF,MAAM;UAAEI,KAAK;UAAEC,IAAI;UAAEC,IAAI;UAAEC,EAAE;UAAEX;QAAM,IAAIM,QAAQ,CAACM,IAAI;;QAEtD;QACAX,YAAY,CAACY,OAAO,CAAC,OAAO,EAAEL,KAAK,CAAC;QACpCP,YAAY,CAACY,OAAO,CAAC,MAAM,EAAEJ,IAAI,CAAC;QAClCR,YAAY,CAACY,OAAO,CAAC,MAAM,EAAEH,IAAI,CAAC;QAClCT,YAAY,CAACY,OAAO,CAAC,IAAI,EAAEF,EAAE,CAAC;QAC9BV,YAAY,CAACY,OAAO,CAAC,OAAO,EAAEb,KAAK,CAAC;;QAEpC;QACAL,IAAI,CAACmB,IAAI,CAAC;UACRC,IAAI,EAAE,SAAS;UACfC,KAAK,EAAE,kBAAkB;UACzBC,KAAK,EAAE,IAAI;UAAE;UACbC,iBAAiB,EAAE;QAErB,CAAC,CAAC;;QAEF;QACA,IAAIT,IAAG,KAAM,OAAO,EAAE;UACpBX,MAAM,CAACqB,IAAI,CAAC,YAAY,CAAC;QAC3B,OAAO,IAAIV,IAAG,KAAM,SAAS,EAAE;UAC7BX,MAAM,CAACqB,IAAI,CAAC,MAAM,CAAC;QACrB;MACF,EAAE,OAAOC,KAAK,EAAE;QACd;QACAzB,IAAI,CAACmB,IAAI,CAAC;UACRC,IAAI,EAAE,OAAO;UACbC,KAAK,EAAE,cAAc;UACrBK,IAAI,EAAED,KAAK,CAACd,QAAQ,EAAEM,IAAI,EAAEU,OAAM,IAAK,gCAAgC;UACvEL,KAAK,EAAE,IAAI;UAAE;UACbC,iBAAiB,EAAE;QACrB,CAAC,CAAC;MACJ;IACF,CAAC;IAED,OAAO;MACLlB,KAAK;MACLH,QAAQ;MACRQ,KAAK;MACLF,cAAc;MACdJ;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}