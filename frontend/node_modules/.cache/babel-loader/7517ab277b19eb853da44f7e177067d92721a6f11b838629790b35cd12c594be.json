{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, onBeforeUnmount, nextTick } from 'vue';\nimport { useRouter } from 'vue-router';\nimport axios from 'axios';\nimport { exportToCSV } from '@/utils/exportCSV';\nimport { exportToPDF } from '@/utils/exportPDF';\nimport Papa from 'papaparse';\nimport 'select2';\nimport feather from 'feather-icons';\nimport ClipLoader from 'vue-spinner/src/ClipLoader.vue';\nimport Swal from 'sweetalert2';\nimport Navbar from '/src/components/Admin/Navbar.vue';\nimport $ from 'jquery';\nexport default {\n  components: {\n    Navbar,\n    ClipLoader\n  },\n  setup() {\n    const apiURL = process.env.VUE_APP_URL;\n    const imageURL = process.env.VUE_APP_IMAGE_URL;\n    const products = ref([]);\n    const loading = ref(true);\n    const select = ref(null);\n    const table = ref(null);\n    const jsonData = ref([]);\n\n    //  get products from the API\n    const getProductList = async () => {\n      loading.value = true;\n      try {\n        const response = await axios.get(`${apiURL}/products_list`);\n        products.value = response.data.products;\n      } catch (error) {\n        Swal.fire('Error', 'Unable to get products', 'error');\n      } finally {\n        loading.value = false;\n      }\n    };\n    const deleteAlert = async productId => {\n      try {\n        const {\n          value: result\n        } = await Swal.fire({\n          title: 'Delete Product',\n          text: \"You won't be able to revert this!\",\n          icon: 'warning',\n          showCancelButton: true,\n          confirmButtonColor: '#3085d6',\n          cancelButtonColor: '#d33',\n          confirmButtonText: 'Yes, delete it!'\n        });\n        if (result) {\n          try {\n            // Send a PUT request to update the product status to \"deleted\"\n            const response = await axios.delete(`${apiURL}/delete_product/${productId}`);\n            if (response.data.success) {\n              Swal.fire('Deleted!', 'Your product has been deleted.', 'success');\n            } else {\n              Swal.fire('Failed', 'There was an issue deleting the product.', 'error');\n            }\n          } catch (error) {\n            console.error('Error updating product:', error);\n            Swal.fire('Error', 'Failed to delete the product.', 'error');\n          }\n        } else {\n          Swal.fire('Cancelled', 'Your product is safe :)', 'error');\n        }\n      } catch (error) {\n        Swal.fire('Error', error, 'error');\n      } finally {\n        getProductList();\n      }\n    };\n    const exportCSVAlert = async () => {\n      try {\n        const {\n          value: result\n        } = await Swal.fire({\n          title: 'Export Product',\n          text: 'Export via CSV',\n          icon: 'question',\n          showCancelButton: true,\n          confirmButtonColor: '#3085d6',\n          cancelButtonColor: '#d33',\n          confirmButtonText: 'Export'\n        });\n        if (result) {\n          const response = await axios.get(`${apiURL}/get_report`);\n\n          // Ensure products are available\n          if (response.data.success && response.data.products && response.data.products.length > 0) {\n            const products = response.data.products;\n            exportToCSV(products, `product_report`); // Call function to export CSV\n            Swal.fire('Success', 'products successfully exported', 'success');\n          } else {\n            Swal.fire('Error', 'No products found to export', 'error');\n          }\n        }\n      } catch (error) {\n        console.error('Error during export:', error);\n        Swal.fire('Error', 'Something went wrong while exporting.', 'error');\n      }\n    };\n    const exportPDFAlert = async () => {\n      try {\n        const {\n          value: result\n        } = await Swal.fire({\n          title: 'Export Product',\n          text: 'Export via PDF',\n          icon: 'question',\n          showCancelButton: true,\n          confirmButtonColor: '#3085d6',\n          cancelButtonColor: '#d33',\n          confirmButtonText: 'Export'\n        });\n        if (result) {\n          const response = await axios.get(`${apiURL}/get_report`);\n\n          // Ensure products are available\n          if (response.data.success && response.data.products && response.data.products.length > 0) {\n            const products = response.data.products;\n            exportToPDF(`product_report`, products); // Call function to export CSV\n            Swal.fire('Success', 'products successfully exported', 'success');\n          } else {\n            Swal.fire('Error', 'No products found to export', 'error');\n          }\n        }\n      } catch (error) {\n        console.error('Error during export:', error);\n        Swal.fire('Error', 'Something went wrong while exporting.', 'error');\n      }\n    };\n    const uploadCSV = event => {\n      const file = event.target.files[0];\n      if (!file) return;\n      if (file.type !== 'text/csv') {\n        Swal.fire('Error', 'Please upload a valid CSV file', 'error');\n        return;\n      }\n      Papa.parse(file, {\n        complete: function (result) {\n          // Store parsed CSV data\n          jsonData.value = result.data;\n        },\n        header: true,\n        // Treat the first row as header\n        skipEmptyLines: true\n      });\n    };\n    const validateCSVData = async data => {\n      const validData = [];\n      const invalidData = [];\n\n      // Define required fields\n      const requiredFields = ['sku', 'name', 'price', 'cost'];\n      for (const row of data) {\n        let isValid = true;\n\n        // Check if required fields are present\n        requiredFields.forEach(field => {\n          if (!row[field]) {\n            isValid = false;\n          }\n        });\n\n        // If SKU is missing, generate a new one\n        if (isValid && !row.sku) {\n          row.sku = await autoGenerateSKU();\n        } else if (isValid && row.sku) {\n          // Validate SKU if it's not empty\n          if (!validateSKUFormat(row.sku)) {\n            isValid = false; // Invalid format\n          } else {\n            // Check if SKU already exists\n            const exists = await checkSKU(row.sku);\n            if (exists) {\n              isValid = false; // SKU already exists\n            }\n          }\n        }\n\n        // If valid, add to validData, else add to invalidData\n        if (isValid) {\n          validData.push(row);\n        } else {\n          invalidData.push(row);\n        }\n      }\n      return {\n        validData,\n        invalidData\n      };\n    };\n    const validateSKUFormat = sku => {\n      // Ensure SKU is 13 digits\n      return /^[0-9]{13}$/.test(sku);\n    };\n    const checkSKU = async sku => {\n      try {\n        const response = await axios.get(`${apiURL}/check_sku/${sku}`);\n        return response.data.exists; // Return true if SKU exists\n      } catch (error) {\n        console.error('Error checking SKU:', error);\n        return true; // Assume false if error occurs\n      }\n    };\n    const autoGenerateSKU = async () => {\n      let sku = generateEAN13();\n\n      // Loop to regenerate SKU until it's unique\n      while (true) {\n        try {\n          // Check if SKU exists in the database\n          const response = await axios.get(`${apiURL}/check_sku/${sku}`);\n          if (!response.data.exists) {\n            // If SKU is unique, return it\n            return sku;\n          } else {\n            // Regenerate SKU if it exists\n            sku = generateEAN13();\n          }\n        } catch (error) {\n          console.error('Error checking SKU:', error);\n          return null; // Exit if there's an error\n        }\n      }\n    };\n    const generateEAN13 = () => {\n      let digits = '4';\n      for (let i = 0; i < 11; i++) {\n        digits += Math.floor(Math.random() * 10).toString();\n      }\n      let sumOdd = 0;\n      let sumEven = 0;\n      for (let i = 0; i < 12; i++) {\n        const digit = parseInt(digits[i], 10);\n        if (i % 2 === 0) {\n          sumOdd += digit;\n        } else {\n          sumEven += digit;\n        }\n      }\n      const totalSum = sumOdd + sumEven * 3;\n      const checksum = (10 - totalSum % 10) % 10;\n      return digits + checksum;\n    };\n    const submitImport = async () => {\n      loading.value = true;\n      const {\n        validData,\n        invalidData\n      } = validateCSVData(jsonData.value);\n      if (validData.length === 0) {\n        Swal.fire('Error', 'No valid data found in the CSV file', 'error');\n        loading.value = false;\n        return;\n      }\n      try {\n        // // Send the valid data to the backend for insertion\n        // const response = await axios.post(`${apiURL}/import_products`, { products: validData });\n\n        // if (response.data.success) {\n        //   Swal.fire('Success', `${validData.length} products successfully imported`, 'success');\n        //   jsonData.value = []; // Clear the data after successful import\n        // } else {\n        //   Swal.fire('Error', 'Failed to import products', 'error');\n        // }\n\n        // // Optionally handle invalid data, you can show a message or log it.\n        // if (invalidData.length > 0) {\n        //   Swal.fire('Warning', 'Some rows were skipped due to missing required fields', 'warning');\n        // }\n      } catch (error) {\n        Swal.fire('Error', 'Something went wrong while importing.', 'error');\n      } finally {\n        loading.value = false;\n      }\n    };\n    onMounted(async () => {\n      try {\n        await nextTick();\n        await getProductList();\n        nextTick(() => {\n          const table = document.querySelector('.table');\n          if (table) {\n            $(table).DataTable();\n          }\n        });\n        feather.replace();\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    onBeforeUnmount(() => {\n      feather.replace();\n      $(select.value).select2('destroy');\n    });\n    return {\n      products,\n      loading,\n      select,\n      apiURL,\n      imageURL,\n      deleteAlert,\n      exportCSVAlert,\n      exportPDFAlert,\n      uploadCSV,\n      submitImport\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","onBeforeUnmount","nextTick","useRouter","axios","exportToCSV","exportToPDF","Papa","feather","ClipLoader","Swal","Navbar","$","components","setup","apiURL","process","env","VUE_APP_URL","imageURL","VUE_APP_IMAGE_URL","products","loading","select","table","jsonData","getProductList","value","response","get","data","error","fire","deleteAlert","productId","result","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","delete","success","console","exportCSVAlert","length","exportPDFAlert","uploadCSV","event","file","target","files","type","parse","complete","header","skipEmptyLines","validateCSVData","validData","invalidData","requiredFields","row","isValid","forEach","field","sku","autoGenerateSKU","validateSKUFormat","exists","checkSKU","push","test","generateEAN13","digits","i","Math","floor","random","toString","sumOdd","sumEven","digit","parseInt","totalSum","checksum","submitImport","document","querySelector","DataTable","replace","log","select2"],"sources":["C:\\Users\\Administrator\\OneDrive\\Desktop\\POSExpress\\frontend\\src\\components\\Admin\\Inventory\\ProductList.vue"],"sourcesContent":["<template>\r\n  <Navbar />\r\n\r\n  <div class=\"page-wrapper\">\r\n    <ClipLoader v-if=\"loading\" />\r\n    <div class=\"content\">\r\n      <div class=\"page-header\">\r\n        <div class=\"add-item d-flex\">\r\n          <div class=\"page-title\">\r\n            <h4>Product List</h4>\r\n            <h6>Manage your products</h6>\r\n          </div>\r\n        </div>\r\n        <ul class=\"table-top-head\">\r\n          <li>\r\n            <a data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Pdf\" type=\"button\"\r\n              @click=\"exportPDFAlert();\"><img src=\"/assets/img/icons/pdf.svg\" alt=\"img\" /></a>\r\n          </li>\r\n          <li>\r\n            <a type=\"button\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Excel\"\r\n              @click=\"exportCSVAlert();\"><img src=\"/assets/img/icons/excel.svg\" alt=\"img\" /></a>\r\n          </li>\r\n          <li>\r\n            <a data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Print\"><i data-feather=\"printer\"\r\n                class=\"feather-rotate-ccw\"></i></a>\r\n          </li>\r\n          <li>\r\n            <router-link to=\"/products\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Refresh\"><i\r\n                data-feather=\"rotate-ccw\" class=\"feather-rotate-ccw\"></i></router-link>\r\n          </li>\r\n          <li>\r\n            <a data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Collapse\" id=\"collapse-header\"><i\r\n                data-feather=\"chevron-up\" class=\"feather-chevron-up\"></i></a>\r\n          </li>\r\n        </ul>\r\n        <div class=\"page-btn\">\r\n          <router-link to=\"create-product\" class=\"btn btn-added\"><i data-feather=\"plus-circle\" class=\"me-2\"></i>Add New\r\n            Product</router-link>\r\n        </div>\r\n        <div class=\"page-btn import\">\r\n          <a href=\"#\" class=\"btn btn-added color\" data-bs-toggle=\"modal\" data-bs-target=\"#view-notes\"><i\r\n              data-feather=\"download\" class=\"me-2\"></i>Import Product</a>\r\n        </div>\r\n      </div>\r\n      <div class=\"card table-list-card\">\r\n        <div class=\"card-body\">\r\n          <div class=\"table-responsive\">\r\n            <table class=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>SKU</th>\r\n                  <th>Product</th>\r\n                  <th>Category</th>\r\n                  <th>Price</th>\r\n                  <th>Status</th>\r\n                  <th>Created On</th>\r\n                  <th>Updated On</th>\r\n\r\n                  <th class=\"no-sort\">Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr v-if=\"products.length <= 0\">\r\n                  <td colspan=\"8\">No products available</td>\r\n                </tr>\r\n                <tr v-else v-for=\"product in products\" :key=\"product._id\">\r\n                  <td>{{ product.sku }}</td>\r\n                  <td>\r\n                    <div class=\"productimgname\">\r\n                      <a href=\"javascript:void(0);\" class=\"product-img stock-img\">\r\n                        <img v-if=\"product.image\" :src=\"`${imageURL}${product.image}`\"\r\n                          alt=\"/img/icons/no-image-icon.png\" />\r\n                        <img v-else :src=\"`/img/icons/no-image-icon.png`\" />\r\n                      </a>\r\n                      <a href=\"javascript:void(0);\">{{ product.name }}</a>\r\n                    </div>\r\n                  </td>\r\n                  <td>{{ product.category }}</td>\r\n                  <td>{{ product.price.toFixed(2) }}</td>\r\n                  <td>\r\n                    <span :class=\"{\r\n                      'badge': true,\r\n                      'badge-linesuccess': product.status === 'active',\r\n                      'badge-linewarning': product.status === 'inactive'\r\n                    }\">\r\n                      {{ product.status }}\r\n                    </span>\r\n                  </td>\r\n                  <td>{{ $formatDate(product.createdAt) }}</td>\r\n                  <td>{{ $formatDate(product.updatedAt) }}</td>\r\n                  <td class=\"action-table-data\">\r\n                    <div class=\"edit-delete-action\">\r\n                      <router-link class=\"me-2 edit-icon p-2\"\r\n                        :to=\"{ name: 'ProductDetails', params: { id: product._id } }\">\r\n                        <font-awesome-icon icon=\"eye\" class=\"feather-eye\" />\r\n                      </router-link>\r\n                      <router-link :to=\"{ name: 'EditProduct', params: { id: product._id } }\" class=\"me-2 p-2\">\r\n                        <font-awesome-icon icon=\"fa-pen-to-square\" class=\"feather-edit\" />\r\n                      </router-link>\r\n                      <a class=\"confirm-text p-2\" href=\"javascript:void(0);\" @click=\"deleteAlert(product._id)\">\r\n                        <font-awesome-icon icon=\"fa-trash\" class=\"feather-trash-2\" />\r\n                      </a>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"modal fade\" id=\"view-notes\">\r\n    <div class=\"modal-dialog modal-dialog-centered\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"page-wrapper-new p-0\">\r\n          <div class=\"content\">\r\n            <div class=\"modal-header border-0 custom-modal-header\">\r\n              <div class=\"page-title\">\r\n                <h4>Import Product</h4>\r\n              </div>\r\n              <button type=\"button\" class=\"close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"modal-body custom-modal-body\">\r\n              <form @submit.prevent=\"submitImport\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-lg-12 col-sm-6 col-12\">\r\n                    <div class=\"modal-footer-btn download-file\">\r\n                      <a href=\"files/Sample.csv\" class=\"btn btn-submit\">Download Sample File</a>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-12\">\r\n                    <div class=\"input-blocks image-upload-down\">\r\n                      <label>Upload CSV File</label>\r\n                      <div class=\"image-upload download\">\r\n                        <input type=\"file\" accept=\".csv\" @change=\"uploadCSV\" />\r\n                        <div class=\"image-uploads\">\r\n                          <img src=\"assets/img/download-img.png\" alt=\"img\" />\r\n                          <h4>Drag and drop a <span>file to upload</span></h4>\r\n                        </div>\r\n                      </div>\r\n                      <pre>{{ jsonData }}</pre>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-12\">\r\n                  <div class=\"modal-footer-btn\">\r\n                    <button type=\"button\" class=\"btn btn-cancel me-2\" data-bs-dismiss=\"modal\">Cancel</button>\r\n                    <button type=\"submit\" class=\"btn btn-submit\">Submit</button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, onBeforeUnmount, nextTick } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport axios from 'axios';\r\nimport { exportToCSV } from '@/utils/exportCSV';\r\nimport { exportToPDF } from '@/utils/exportPDF';\r\nimport Papa from 'papaparse';\r\nimport 'select2';\r\nimport feather from 'feather-icons';\r\nimport ClipLoader from 'vue-spinner/src/ClipLoader.vue';\r\nimport Swal from 'sweetalert2';\r\nimport Navbar from '/src/components/Admin/Navbar.vue';\r\nimport $ from 'jquery';\r\n\r\nexport default {\r\n  components: {\r\n    Navbar,\r\n    ClipLoader,\r\n  },\r\n  setup() {\r\n    const apiURL = process.env.VUE_APP_URL;\r\n    const imageURL = process.env.VUE_APP_IMAGE_URL;\r\n    const products = ref([]);\r\n    const loading = ref(true);\r\n    const select = ref(null);\r\n    const table = ref(null);\r\n    const jsonData = ref([]);\r\n\r\n    //  get products from the API\r\n    const getProductList = async () => {\r\n      loading.value = true;\r\n      try {\r\n        const response = await axios.get(`${apiURL}/products_list`);\r\n        products.value = response.data.products;\r\n\r\n      } catch (error) {\r\n        Swal.fire('Error', 'Unable to get products', 'error')\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n\r\n    const deleteAlert = async (productId) => {\r\n      try {\r\n        const { value: result } = await Swal.fire({\r\n          title: 'Delete Product',\r\n          text: \"You won't be able to revert this!\",\r\n          icon: 'warning',\r\n          showCancelButton: true,\r\n          confirmButtonColor: '#3085d6',\r\n          cancelButtonColor: '#d33',\r\n          confirmButtonText: 'Yes, delete it!',\r\n        });\r\n\r\n        if (result) {\r\n          try {\r\n            // Send a PUT request to update the product status to \"deleted\"\r\n            const response = await axios.delete(`${apiURL}/delete_product/${productId}`);\r\n\r\n            if (response.data.success) {\r\n              Swal.fire('Deleted!', 'Your product has been deleted.', 'success');\r\n\r\n            } else {\r\n              Swal.fire('Failed', 'There was an issue deleting the product.', 'error');\r\n            }\r\n          } catch (error) {\r\n            console.error('Error updating product:', error);\r\n            Swal.fire('Error', 'Failed to delete the product.', 'error');\r\n          }\r\n        } else {\r\n          Swal.fire('Cancelled', 'Your product is safe :)', 'error');\r\n        }\r\n      } catch (error) {\r\n        Swal.fire('Error', error, 'error');\r\n      } finally {\r\n        getProductList();\r\n      }\r\n\r\n    };\r\n    const exportCSVAlert = async () => {\r\n      try {\r\n        const { value: result } = await Swal.fire({\r\n          title: 'Export Product',\r\n          text: 'Export via CSV',\r\n          icon: 'question',\r\n          showCancelButton: true,\r\n          confirmButtonColor: '#3085d6',\r\n          cancelButtonColor: '#d33',\r\n          confirmButtonText: 'Export',\r\n        });\r\n\r\n        if (result) {\r\n          const response = await axios.get(`${apiURL}/get_report`);\r\n\r\n          // Ensure products are available\r\n          if (response.data.success && response.data.products && response.data.products.length > 0) {\r\n            const products = response.data.products;\r\n\r\n            exportToCSV(products, `product_report`); // Call function to export CSV\r\n            Swal.fire('Success', 'products successfully exported', 'success')\r\n          } else {\r\n            Swal.fire('Error', 'No products found to export', 'error');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error during export:', error);\r\n        Swal.fire('Error', 'Something went wrong while exporting.', 'error');\r\n      }\r\n    };\r\n    const exportPDFAlert = async () => {\r\n      try {\r\n        const { value: result } = await Swal.fire({\r\n          title: 'Export Product',\r\n          text: 'Export via PDF',\r\n          icon: 'question',\r\n          showCancelButton: true,\r\n          confirmButtonColor: '#3085d6',\r\n          cancelButtonColor: '#d33',\r\n          confirmButtonText: 'Export',\r\n        });\r\n\r\n        if (result) {\r\n          const response = await axios.get(`${apiURL}/get_report`);\r\n\r\n          // Ensure products are available\r\n          if (response.data.success && response.data.products && response.data.products.length > 0) {\r\n            const products = response.data.products;\r\n\r\n            exportToPDF(`product_report`, products); // Call function to export CSV\r\n            Swal.fire('Success', 'products successfully exported', 'success')\r\n          } else {\r\n            Swal.fire('Error', 'No products found to export', 'error');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error during export:', error);\r\n        Swal.fire('Error', 'Something went wrong while exporting.', 'error');\r\n      }\r\n    }\r\n\r\n\r\n\r\n    const uploadCSV = (event) => {\r\n      const file = event.target.files[0];\r\n      if (!file) return;\r\n\r\n      if (file.type !== 'text/csv') {\r\n        Swal.fire('Error', 'Please upload a valid CSV file', 'error');\r\n        return;\r\n      }\r\n\r\n      Papa.parse(file, {\r\n        complete: function (result) {\r\n          // Store parsed CSV data\r\n          jsonData.value = result.data;\r\n        },\r\n        header: true, // Treat the first row as header\r\n        skipEmptyLines: true,\r\n      });\r\n    };\r\n\r\n    const validateCSVData = async (data) => {\r\n      const validData = [];\r\n      const invalidData = [];\r\n\r\n      // Define required fields\r\n      const requiredFields = ['sku', 'name', 'price', 'cost'];\r\n\r\n      for (const row of data) {\r\n        let isValid = true;\r\n\r\n        // Check if required fields are present\r\n        requiredFields.forEach((field) => {\r\n          if (!row[field]) {\r\n            isValid = false;\r\n          }\r\n        });\r\n\r\n        // If SKU is missing, generate a new one\r\n        if (isValid && !row.sku) {\r\n          row.sku = await autoGenerateSKU();\r\n        } else if (isValid && row.sku) {\r\n          // Validate SKU if it's not empty\r\n          if (!validateSKUFormat(row.sku)) {\r\n            isValid = false; // Invalid format\r\n          } else {\r\n            // Check if SKU already exists\r\n            const exists = await checkSKU(row.sku);\r\n            if (exists) {\r\n              isValid = false; // SKU already exists\r\n            }\r\n          }\r\n        }\r\n\r\n        // If valid, add to validData, else add to invalidData\r\n        if (isValid) {\r\n          validData.push(row);\r\n        } else {\r\n          invalidData.push(row);\r\n        }\r\n      }\r\n\r\n      return { validData, invalidData };\r\n    };\r\n\r\n    const validateSKUFormat = (sku) => {\r\n      // Ensure SKU is 13 digits\r\n      return /^[0-9]{13}$/.test(sku);\r\n    };\r\n\r\n\r\n    const checkSKU = async (sku) => {\r\n      try {\r\n        const response = await axios.get(`${apiURL}/check_sku/${sku}`);\r\n        return response.data.exists; // Return true if SKU exists\r\n      } catch (error) {\r\n        console.error('Error checking SKU:', error);\r\n        return true; // Assume false if error occurs\r\n      }\r\n    };\r\n\r\n    const autoGenerateSKU = async () => {\r\n      let sku = generateEAN13();\r\n\r\n      // Loop to regenerate SKU until it's unique\r\n      while (true) {\r\n        try {\r\n          // Check if SKU exists in the database\r\n          const response = await axios.get(`${apiURL}/check_sku/${sku}`);\r\n\r\n          if (!response.data.exists) {\r\n            // If SKU is unique, return it\r\n            return sku;\r\n          } else {\r\n            // Regenerate SKU if it exists\r\n            sku = generateEAN13();\r\n          }\r\n        } catch (error) {\r\n          console.error('Error checking SKU:', error);\r\n          return null; // Exit if there's an error\r\n        }\r\n      }\r\n    };\r\n\r\n\r\n    const generateEAN13 = () => {\r\n      let digits = '4';\r\n      for (let i = 0; i < 11; i++) {\r\n        digits += Math.floor(Math.random() * 10).toString();\r\n      }\r\n\r\n      let sumOdd = 0;\r\n      let sumEven = 0;\r\n\r\n      for (let i = 0; i < 12; i++) {\r\n        const digit = parseInt(digits[i], 10);\r\n        if (i % 2 === 0) {\r\n          sumOdd += digit;\r\n        } else {\r\n          sumEven += digit;\r\n        }\r\n      }\r\n\r\n      const totalSum = sumOdd + (sumEven * 3);\r\n      const checksum = (10 - (totalSum % 10)) % 10;\r\n\r\n      return digits + checksum;\r\n    };\r\n\r\n\r\n    const submitImport = async () => {\r\n      loading.value = true;\r\n\r\n      const { validData, invalidData } = validateCSVData(jsonData.value);\r\n\r\n      if (validData.length === 0) {\r\n        Swal.fire('Error', 'No valid data found in the CSV file', 'error');\r\n        loading.value = false;\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // // Send the valid data to the backend for insertion\r\n        // const response = await axios.post(`${apiURL}/import_products`, { products: validData });\r\n\r\n        // if (response.data.success) {\r\n        //   Swal.fire('Success', `${validData.length} products successfully imported`, 'success');\r\n        //   jsonData.value = []; // Clear the data after successful import\r\n        // } else {\r\n        //   Swal.fire('Error', 'Failed to import products', 'error');\r\n        // }\r\n\r\n        // // Optionally handle invalid data, you can show a message or log it.\r\n        // if (invalidData.length > 0) {\r\n        //   Swal.fire('Warning', 'Some rows were skipped due to missing required fields', 'warning');\r\n        // }\r\n      } catch (error) {\r\n        Swal.fire('Error', 'Something went wrong while importing.', 'error');\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n\r\n\r\n    onMounted(async () => {\r\n      try {\r\n        await nextTick()\r\n        await getProductList();\r\n\r\n        nextTick(() => {\r\n          const table = document.querySelector('.table');\r\n          if (table) {\r\n            $(table).DataTable();\r\n          }\r\n        })\r\n        feather.replace();\r\n\r\n\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    });\r\n\r\n    onBeforeUnmount(() => {\r\n      feather.replace();\r\n      $(select.value).select2('destroy');\r\n    });\r\n\r\n\r\n    return {\r\n      products,\r\n      loading,\r\n      select,\r\n      apiURL,\r\n      imageURL,\r\n      deleteAlert,\r\n      exportCSVAlert,\r\n      exportPDFAlert,\r\n      uploadCSV,\r\n      submitImport\r\n    };\r\n  }\r\n\r\n\r\n};\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}