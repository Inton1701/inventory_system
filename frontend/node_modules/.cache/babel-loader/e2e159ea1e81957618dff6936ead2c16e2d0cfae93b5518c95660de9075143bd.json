{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport { ref, onMounted, onBeforeUnmount, computed, defineComponent } from \"vue\";\nimport { Line } from \"vue-chartjs\";\nimport { Chart as ChartJS, Title, Tooltip, Legend, LineElement, CategoryScale, LinearScale } from \"chart.js\";\nimport \"select2\";\nimport feather from \"feather-icons\";\nimport \"datatables.net-bs5\";\nimport \"datatables.net-bs5/css/dataTables.bootstrap5.min.css\";\nimport Navbar from \"/src/components/Admin/Navbar.vue\";\nimport axios from \"axios\";\n\n// Register chart.js components\nChartJS.register(Title, Tooltip, Legend, LineElement, CategoryScale, LinearScale);\nexport default defineComponent({\n  components: {\n    Navbar,\n    LineChart: Line\n  },\n  setup() {\n    const select = ref(\".select\");\n    const salesData = ref([]);\n    const chartData = computed(() => {\n      if (!salesData.value || salesData.value.length === 0) {\n        return {\n          labels: [],\n          datasets: []\n        };\n      }\n      const labels = salesData.value.map(data => data._id); // Dates as labels\n      const totalSales = salesData.value.map(data => data.totalSales);\n      const totalProfit = salesData.value.map(data => data.totalProfit);\n      return {\n        datasets: [{\n          label: \"Total Sales\",\n          data: totalSales,\n          borderColor: \"rgb(75, 192, 192)\",\n          backgroundColor: \"rgba(75, 192, 192, 0.2)\",\n          fill: true,\n          tension: 0.4\n        }, {\n          label: \"Total Profit\",\n          data: totalProfit,\n          borderColor: \"rgb(255, 99, 132)\",\n          backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n          fill: true,\n          tension: 0.4\n        }]\n      };\n    });\n\n    // Chart options for customization\n    const chartOptions = computed(() => ({\n      responsive: true,\n      plugins: {\n        legend: {\n          position: \"top\"\n        },\n        tooltip: {\n          enabled: true\n        }\n      },\n      scales: {\n        x: {\n          title: {\n            display: true,\n            text: \"Dates\"\n          }\n        },\n        y: {\n          title: {\n            display: true,\n            text: \"Values\"\n          },\n          beginAtZero: true\n        }\n      }\n    }));\n\n    // Fetch the sales data\n    onMounted(async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/get_sales\");\n        if (response.data.success) {\n          salesData.value = response.data.salesDatas;\n          console.log(\"Sales data fetched:\", salesData.value);\n        } else {\n          console.error(\"Failed to fetch sales data\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching sales data:\", error);\n      }\n    });\n    onBeforeUnmount(() => {\n      $(select.value).select2(\"destroy\");\n    });\n    return {\n      select,\n      salesData,\n      chartData,\n      // Chart data\n      chartOptions // Chart options\n    };\n  }\n});","map":{"version":3,"names":["ref","onMounted","onBeforeUnmount","computed","defineComponent","Line","Chart","ChartJS","Title","Tooltip","Legend","LineElement","CategoryScale","LinearScale","feather","Navbar","axios","register","components","LineChart","setup","select","salesData","chartData","value","length","labels","datasets","map","data","_id","totalSales","totalProfit","label","borderColor","backgroundColor","fill","tension","chartOptions","responsive","plugins","legend","position","tooltip","enabled","scales","x","title","display","text","y","beginAtZero","response","get","success","salesDatas","console","log","error","$","select2"],"sources":["C:\\Users\\Administrator\\OneDrive\\Desktop\\POSExpress\\frontend\\src\\components\\Admin\\Main\\Dashboard.vue"],"sourcesContent":["<template>\r\n  <Navbar />\r\n  <div class=\"page-wrapper\">\r\n    <div class=\"content\">\r\n      <div class=\"row\">\r\n        <div class=\"card-body\">\r\n  <LineChart \r\n    v-if=\"chartData.labels && chartData.labels.length > 0\" \r\n    :chart-data=\"chartData\" \r\n    :chart-options=\"chartOptions\" \r\n  />\r\n  <p v-else>Loading chart data...</p>\r\n</div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, onBeforeUnmount, computed, defineComponent } from \"vue\";\r\nimport { Line } from \"vue-chartjs\";\r\nimport { Chart as ChartJS, Title, Tooltip, Legend, LineElement, CategoryScale, LinearScale } from \"chart.js\";\r\nimport \"select2\";\r\nimport feather from \"feather-icons\";\r\nimport \"datatables.net-bs5\";\r\nimport \"datatables.net-bs5/css/dataTables.bootstrap5.min.css\";\r\nimport Navbar from \"/src/components/Admin/Navbar.vue\";\r\nimport axios from \"axios\";\r\n\r\n// Register chart.js components\r\nChartJS.register(Title, Tooltip, Legend, LineElement, CategoryScale, LinearScale);\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    Navbar,\r\n    LineChart: Line,\r\n  },\r\n  setup() {\r\n    const select = ref(\".select\");\r\n    const salesData = ref([]);\r\n\r\n    const chartData = computed(() => {\r\n  if (!salesData.value || salesData.value.length === 0) {\r\n    return {\r\n      labels: [],\r\n      datasets: [],\r\n    };\r\n  }\r\n\r\n  const labels = salesData.value.map((data) => data._id); // Dates as labels\r\n  const totalSales = salesData.value.map((data) => data.totalSales);\r\n  const totalProfit = salesData.value.map((data) => data.totalProfit);\r\n\r\n  return {\r\n \r\n    datasets: [\r\n      {\r\n        label: \"Total Sales\",\r\n        data: totalSales,\r\n        borderColor: \"rgb(75, 192, 192)\",\r\n        backgroundColor: \"rgba(75, 192, 192, 0.2)\",\r\n        fill: true,\r\n        tension: 0.4,\r\n      },\r\n      {\r\n        label: \"Total Profit\",\r\n        data: totalProfit,\r\n        borderColor: \"rgb(255, 99, 132)\",\r\n        backgroundColor: \"rgba(255, 99, 132, 0.2)\",\r\n        fill: true,\r\n        tension: 0.4,\r\n      },\r\n    ],\r\n  };\r\n});\r\n\r\n\r\n\r\n    // Chart options for customization\r\n    const chartOptions = computed(() => ({\r\n  responsive: true,\r\n  plugins: {\r\n    legend: {\r\n      position: \"top\",\r\n    },\r\n    tooltip: {\r\n      enabled: true,\r\n    },\r\n  },\r\n  scales: {\r\n    x: {\r\n      title: {\r\n        display: true,\r\n        text: \"Dates\",\r\n      },\r\n    },\r\n    y: {\r\n      title: {\r\n        display: true,\r\n        text: \"Values\",\r\n      },\r\n      beginAtZero: true,\r\n    },\r\n  },\r\n}));\r\n\r\n\r\n    // Fetch the sales data\r\n    onMounted(async () => {\r\n  try {\r\n    const response = await axios.get(\"http://localhost:5000/api/get_sales\");\r\n    if (response.data.success) {\r\n      salesData.value = response.data.salesDatas;\r\n      console.log(\"Sales data fetched:\", salesData.value);\r\n    } else {\r\n      console.error(\"Failed to fetch sales data\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error fetching sales data:\", error);\r\n  }\r\n});\r\n\r\n\r\n    onBeforeUnmount(() => {\r\n      $(select.value).select2(\"destroy\");\r\n    });\r\n\r\n    return {\r\n      select,\r\n      salesData,\r\n      chartData, // Chart data\r\n      chartOptions, // Chart options\r\n    };\r\n  },\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n/* Optional styling for your page or components */\r\n#salesChart {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  height: 400px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}