{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport { ref, onMounted, onBeforeUnmount } from \"vue\";\nimport Chart from \"chart.js/auto\";\nimport axios from \"axios\";\nimport Navbar from \"/src/components/Admin/Navbar.vue\";\nimport Swal from \"sweetalert2\";\nexport default {\n  components: {\n    Navbar\n  },\n  setup() {\n    const chartCanvas = ref(null);\n    let chartInstance = null;\n    const apiURL = process.env.VUE_APP_URL;\n    // Initialize statistics as ref variables\n    const totalItemsSold = ref(0);\n    const totalSales = ref(0);\n    const totalProfit = ref(0);\n    const totalLost = ref(0);\n    const totalTransactions = ref(0);\n    const totalCompletedTransactions = ref(0);\n    const totalVoidedTransactions = ref(0);\n    const totalReturnedTransactions = ref(0);\n    const isTransactionOpen = ref(false);\n    const dateRange = ref({\n      startDate: null,\n      endDate: null\n    });\n    const isLoading = ref(false);\n    const transactions = ref([]);\n    const getTransactions = async () => {\n      loading.value = true;\n      try {\n        const reponse = await axios.get(`${apiURL}/get_all_transactions`);\n        if (reponse.data.success) {\n          transactions.value = reponse.data.transactions;\n        } else {\n          Swal.fire('Eror', 'Failed to get all transaction', 'error');\n        }\n        nextTick(() => refreshDataTable());\n      } catch (error) {\n        Swal.fire('Eror', 'Something went wrong', 'error');\n      } finally {\n        loading.value = false;\n      }\n    };\n    // Function to render the chart after data is fetched\n    const renderChart = salesData => {\n      if (salesData.length > 0 && chartCanvas.value) {\n        const labels = salesData.map(data => data._id); // Assuming '_id' as labels\n        const totalSalesData = salesData.map(data => data.totalSales);\n        const totalProfitData = salesData.map(data => data.totalProfit);\n        const ctx = chartCanvas.value.getContext(\"2d\"); // Get the context for the canvas element\n\n        // Destroy existing chart instance before creating a new one\n        if (chartInstance) {\n          chartInstance.destroy();\n        }\n\n        // Initialize the chart with the provided data\n        chartInstance = new Chart(ctx, {\n          type: \"bar\",\n          data: {\n            labels: labels,\n            datasets: [{\n              label: \"Total Sales\",\n              data: totalSalesData,\n              backgroundColor: \"rgb(40, 199, 111)\",\n              borderColor: \"rgb(75, 192, 192)\",\n              borderWidth: 1\n            }, {\n              label: \"Total Profit\",\n              data: totalProfitData,\n              backgroundColor: \"rgb(255, 77, 77)\",\n              borderColor: \"rgb(255, 99, 132)\",\n              borderWidth: 1\n            }]\n          },\n          options: {\n            responsive: true,\n            plugins: {\n              legend: {\n                position: \"top\"\n              },\n              tooltip: {\n                enabled: true\n              }\n            },\n            scales: {\n              x: {\n                title: {\n                  display: true,\n                  text: \"Dates\"\n                }\n              },\n              y: {\n                title: {\n                  display: true,\n                  text: \"Values\"\n                },\n                beginAtZero: true\n              }\n            }\n          }\n        });\n      }\n    };\n\n    // Fetch transaction state (open or closed)\n    const updateTransactionState = async () => {\n      try {\n        const response = await axios.get(`${apiURL}/transaction_state`);\n        if (response.data.success) {\n          isTransactionOpen.value = response.data.isOpen; // This should reflect the correct state\n        } else {\n          console.error(\"Failed to fetch transaction state.\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching transaction state:\", error);\n        Swal.fire({\n          title: \"Error!\",\n          text: \"Failed to update transaction state\",\n          icon: \"error\",\n          confirmButtonText: \"OK\"\n        });\n      }\n    };\n    const toggleTransaction = async () => {\n      const action = isTransactionOpen.value ? \"close\" : \"open\";\n      try {\n        const result = await Swal.fire({\n          title: \"Confirm Action\",\n          text: `Are you sure you want to ${action} the transaction?`,\n          icon: \"question\",\n          showCancelButton: true,\n          confirmButtonText: \"Yes\",\n          cancelButtonText: \"No\"\n        });\n        if (result.isConfirmed) {\n          const endpoint = `${action}_transaction`;\n          const response = await axios.post(`${apiURL}/${endpoint}`);\n          if (response.data.success) {\n            isTransactionOpen.value = !isTransactionOpen.value;\n            await Swal.fire({\n              title: \"Success!\",\n              text: `Transaction ${action}ed successfully`,\n              icon: \"success\",\n              confirmButtonText: \"OK\"\n            });\n\n            // Reset data if the transaction was opened\n            if (isTransactionOpen.value) {\n              // Reset statistics and chart data\n              totalItemsSold.value = 0;\n              totalSales.value = 0;\n              totalProfit.value = 0;\n              totalLost.value = 0;\n              totalTransactions.value = 0;\n              totalCompletedTransactions.value = 0;\n              totalVoidedTransactions.value = 0;\n              totalReturnedTransactions.value = 0;\n              dateRange.value = {\n                startDate: null,\n                endDate: null\n              };\n\n              // Reload statistics and chart data\n              await fetchStatistics();\n            } else {\n              // Optionally, fetch statistics again when transaction is closed\n              await fetchStatistics();\n            }\n          } else {\n            throw new Error(response.data.message || `Failed to ${action} transaction`);\n          }\n        }\n      } catch (error) {\n        console.error(`Error ${action}ing transaction:`, error);\n        Swal.fire({\n          title: \"Error!\",\n          text: error.message,\n          icon: \"error\",\n          confirmButtonText: \"OK\"\n        });\n      }\n    };\n    const fetchStatistics = async () => {\n      try {\n        isLoading.value = true;\n        const response = await axios.get(`${apiURL}/get_statistics`);\n        if (response.data.success) {\n          const statistics = response.data.statistics;\n\n          // Set the statistics values\n          totalTransactions.value = statistics.totalTransactions;\n          totalCompletedTransactions.value = statistics.totalCompletedTransactions;\n          totalVoidedTransactions.value = statistics.totalVoidedTransactions;\n          totalReturnedTransactions.value = statistics.totalReturnedTransactions;\n          totalSales.value = statistics.totalSalesAmount;\n          totalProfit.value = statistics.totalProfitAmount;\n          totalLost.value = statistics.totalLossAmount;\n          totalItemsSold.value = statistics.totalItemsSold;\n          dateRange.value = statistics.dateRange || {\n            startDate: null,\n            endDate: null\n          };\n        } else {\n          console.error(\"Failed to fetch dashboard statistics\");\n        }\n\n        // Fetch the sales data for the chart\n        const chartResponse = await axios.get(`${apiURL}/get_sales`);\n        if (chartResponse.data.success) {\n          const salesData = chartResponse.data.salesDatas;\n          renderChart(salesData); // Render the chart once the data is fetched\n        } else {\n          console.error(\"Failed to fetch sales data for chart\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching statistics:\", error);\n        Swal.fire({\n          title: \"Error!\",\n          text: \"Failed to fetch dashboard data\",\n          icon: \"error\",\n          confirmButtonText: \"OK\"\n        });\n      } finally {\n        isLoading.value = false;\n      }\n    };\n    // On component mount, fetch initial data\n    onMounted(async () => {\n      await updateTransactionState();\n      await fetchStatistics();\n    });\n\n    // Clean up the chart instance when the component is unmounted\n    onBeforeUnmount(() => {\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n    });\n    return {\n      chartCanvas,\n      totalItemsSold,\n      totalSales,\n      totalProfit,\n      totalLost,\n      totalTransactions,\n      totalCompletedTransactions,\n      totalVoidedTransactions,\n      totalReturnedTransactions,\n      dateRange,\n      isTransactionOpen,\n      toggleTransaction\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","onBeforeUnmount","Chart","axios","Navbar","Swal","components","setup","chartCanvas","chartInstance","apiURL","process","env","VUE_APP_URL","totalItemsSold","totalSales","totalProfit","totalLost","totalTransactions","totalCompletedTransactions","totalVoidedTransactions","totalReturnedTransactions","isTransactionOpen","dateRange","startDate","endDate","isLoading","transactions","getTransactions","loading","value","reponse","get","data","success","fire","nextTick","refreshDataTable","error","renderChart","salesData","length","labels","map","_id","totalSalesData","totalProfitData","ctx","getContext","destroy","type","datasets","label","backgroundColor","borderColor","borderWidth","options","responsive","plugins","legend","position","tooltip","enabled","scales","x","title","display","text","y","beginAtZero","updateTransactionState","response","isOpen","console","icon","confirmButtonText","toggleTransaction","action","result","showCancelButton","cancelButtonText","isConfirmed","endpoint","post","fetchStatistics","Error","message","statistics","totalSalesAmount","totalProfitAmount","totalLossAmount","chartResponse","salesDatas"],"sources":["C:\\Users\\Administrator\\OneDrive\\Desktop\\POSExpress\\frontend\\src\\components\\Admin\\Main\\Dashboard.vue"],"sourcesContent":["<template>\r\n  <Navbar />\r\n\r\n  <div class=\"page-wrapper\">\r\n    <div class=\"content\">\r\n      <div class=\"row mb-3\">\r\n        <div class=\"col-12 d-flex justify-content-end\">\r\n          <button @click=\"toggleTransaction\" :class=\"['btn', isTransactionOpen ? 'btn-danger' : 'btn-success']\">\r\n            {{ isTransactionOpen ? 'Close Transaction' : 'Open Transaction' }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n      <!-- Total Items Sold -->\r\n\r\n      <div class=\"col-xl-3 col-sm-6 col-12 d-flex\">\r\n        <div class=\"dash-widget w-100\">\r\n          <div class=\"dash-widgetimg\">\r\n            <span><img src=\"assets/img/icons/dash1.svg\" alt=\"img\" /></span>\r\n          </div>\r\n          <div class=\"dash-widgetcontent\">\r\n            \r\n            <h5>\r\n              <span class=\"counters\">{{ totalItemsSold }}</span>\r\n            </h5>\r\n            <h6>Total Items Sold</h6>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Total Sales -->\r\n      <div class=\"col-xl-3 col-sm-6 col-12 d-flex\">\r\n        <div class=\"dash-widget dash1 w-100\">\r\n          <div class=\"dash-widgetimg\">\r\n            <span><img src=\"assets/img/icons/dash2.svg\" alt=\"img\" /></span>\r\n          </div>\r\n          <div class=\"dash-widgetcontent\">\r\n            <h5>\r\n              <font-awesome-icon icon=\"fa-peso-sign\" />\r\n              <span class=\"counters\">{{ totalSales.toFixed(2) }}</span>\r\n            </h5>\r\n            <h6>Total Sales</h6>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Total Profit -->\r\n      <div class=\"col-xl-3 col-sm-6 col-12 d-flex\">\r\n        <div class=\"dash-widget dash2 w-100\">\r\n          <div class=\"dash-widgetimg\">\r\n            <span>\r\n              <font-awesome-icon icon=\"fa-arrow-trend-up\" :size=\"'2x'\" style=\"color: #74C0FC;\" />\r\n            </span>\r\n          </div>\r\n          <div class=\"dash-widgetcontent\">\r\n            <h5>\r\n              <font-awesome-icon icon=\"fa-peso-sign\" />\r\n              <span class=\"counters\">{{ totalProfit.toFixed(2) }}</span>\r\n            </h5>\r\n            <h6>Total Profit</h6>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Total Lost -->\r\n      <div class=\"col-xl-3 col-sm-6 col-12 d-flex\">\r\n        <div class=\"dash-widget dash3 w-100\">\r\n          <div class=\"dash-widgetimg\">\r\n            <span>\r\n              <font-awesome-icon icon=\"fa-arrow-trend-down\" :size=\"'2x'\" style=\"color: #ee3a5e;\" />\r\n            </span>\r\n          </div>\r\n          <div class=\"dash-widgetcontent\">\r\n            <h5>\r\n              <font-awesome-icon icon=\"fa-peso-sign\" />\r\n              <span class=\"counters\">{{ totalLost.toFixed(2) }}</span>\r\n            </h5>\r\n            <h6>Total Lost</h6>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Total Transactions -->\r\n      <div class=\"col-xl-3 col-sm-6 col-12 d-flex\">\r\n        <div class=\"dash-count\">\r\n          <div class=\"dash-counts\">\r\n            <h4>{{ totalTransactions }}</h4>\r\n            <h5>Transactions</h5>\r\n          </div>\r\n          <div class=\"dash-imgs\">\r\n            <font-awesome-icon icon=\"fa-handshake\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Total Returns -->\r\n      <div class=\"col-xl-3 col-sm-6 col-12 d-flex\">\r\n        <div class=\"dash-count badge-bgprimary\">\r\n          <div class=\"dash-counts\">\r\n            <h4>{{ totalReturnedTransactions }}</h4>\r\n            <h5>Returns</h5>\r\n          </div>\r\n          <div class=\"dash-imgs\">\r\n            <font-awesome-icon icon=\"fa-reply\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Total Purchase Invoice -->\r\n      <div class=\"col-xl-3 col-sm-6 col-12 d-flex\">\r\n        <div class=\"dash-count das2 bg-danger\">\r\n          <div class=\"dash-counts\">\r\n            <h4>{{ totalVoidedTransactions }}</h4>\r\n            <h5>Void Purchases</h5>\r\n          </div>\r\n          <div class=\"dash-imgs\">\r\n            <font-awesome-icon icon=\"fa-ban\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Completed Transactions -->\r\n      <div class=\"col-xl-3 col-sm-6 col-12 d-flex\">\r\n        <div class=\"dash-count das3\">\r\n          <div class=\"dash-counts\">\r\n            <h4>{{ totalCompletedTransactions }}</h4>\r\n            <h5>Completed transactions</h5>\r\n          </div>\r\n          <div class=\"dash-imgs\">\r\n            <font-awesome-icon icon=\"fa-clipboard-check\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-7 col-sm-12 col-12 d-flex\">\r\n          <div class=\"card flex-fill\">\r\n            <div class=\"card-header d-flex justify-content-between align-items-center\">\r\n              <h5 class=\"card-title mb-0\">Purchase & Sales</h5>\r\n              <div class=\"graph-sets\">\r\n\r\n                <div class=\"dropdown dropdown-wraper\">\r\n                  <button class=\"btn btn-light btn-sm dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\"\r\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    2023\r\n                  </button>\r\n                  <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                    <li>\r\n                      <a href=\"javascript:void(0);\" class=\"dropdown-item\">2023</a>\r\n                    </li>\r\n                    <li>\r\n                      <a href=\"javascript:void(0);\" class=\"dropdown-item\">2022</a>\r\n                    </li>\r\n                    <li>\r\n                      <a href=\"javascript:void(0);\" class=\"dropdown-item\">2021</a>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <canvas ref=\"chartCanvas\"></canvas>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-xl-5 col-sm-12 col-12 d-flex\">\r\n          <div class=\"card flex-fill default-cover mb-4\">\r\n            <div class=\"card-header d-flex justify-content-between align-items-center\">\r\n              <h4 class=\"card-title mb-0\">Recent Transactions</h4>\r\n              <div class=\"view-all-link\">\r\n                <a href=\"javascript:void(0);\" class=\"view-all d-flex align-items-center\">\r\n                  View All<span class=\"ps-2 d-flex align-items-center\"><i data-feather=\"arrow-right\"\r\n                      class=\"feather-16\"></i></span>\r\n                </a>\r\n              </div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <div class=\"table-responsive dataview\">\r\n                <table class=\"table dashboard-recent-products\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>#</th>\r\n                      <th>Products</th>\r\n                      <th>Price</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>1</td>\r\n                      <td class=\"productimgname\">\r\n                        <a href=\"product-list.html\" class=\"product-img\">\r\n                          <img src=\"assets/img/products/stock-img-01.png\" alt=\"product\" />\r\n                        </a>\r\n                        <a href=\"product-list.html\">Lenevo 3rd Generation</a>\r\n                      </td>\r\n                      <td>$12500</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>2</td>\r\n                      <td class=\"productimgname\">\r\n                        <a href=\"product-list.html\" class=\"product-img\">\r\n                          <img src=\"assets/img/products/stock-img-06.png\" alt=\"product\" />\r\n                        </a>\r\n                        <a href=\"product-list.html\">Bold V3.2</a>\r\n                      </td>\r\n                      <td>$1600</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>3</td>\r\n                      <td class=\"productimgname\">\r\n                        <a href=\"product-list.html\" class=\"product-img\">\r\n                          <img src=\"assets/img/products/stock-img-02.png\" alt=\"product\" />\r\n                        </a>\r\n                        <a href=\"product-list.html\">Nike Jordan</a>\r\n                      </td>\r\n                      <td>$2000</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>4</td>\r\n                      <td class=\"productimgname\">\r\n                        <a href=\"product-list.html\" class=\"product-img\">\r\n                          <img src=\"assets/img/products/stock-img-03.png\" alt=\"product\" />\r\n                        </a>\r\n                        <a href=\"product-list.html\">Apple Series 5 Watch</a>\r\n                      </td>\r\n                      <td>$800</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"card\">\r\n        <div class=\"card-header\">\r\n          <h4 class=\"card-title\">Expired Products</h4>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div class=\"table-responsive dataview\">\r\n            <table class=\"table dashboard-expired-products\">\r\n              <thead>\r\n                <tr>\r\n                  <th class=\"no-sort\">\r\n                    <label class=\"checkboxs\">\r\n                      <input type=\"checkbox\" id=\"select-all\" />\r\n                      <span class=\"checkmarks\"></span>\r\n                    </label>\r\n                  </th>\r\n                  <th>Product</th>\r\n                  <th>SKU</th>\r\n                  <th>Manufactured Date</th>\r\n                  <th>Expired Date</th>\r\n                  <th class=\"no-sort\">Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>\r\n                    <label class=\"checkboxs\">\r\n                      <input type=\"checkbox\" />\r\n                      <span class=\"checkmarks\"></span>\r\n                    </label>\r\n                  </td>\r\n                  <td>\r\n                    <div class=\"productimgname\">\r\n                      <a href=\"javascript:void(0);\" class=\"product-img stock-img\">\r\n                        <img src=\"assets/img/products/expire-product-01.png\" alt=\"product\" />\r\n                      </a>\r\n                      <a href=\"javascript:void(0);\">Red Premium Handy </a>\r\n                    </div>\r\n                  </td>\r\n                  <td><a href=\"javascript:void(0);\">PT006</a></td>\r\n                  <td>17 Jan 2023</td>\r\n                  <td>29 Mar 2023</td>\r\n                  <td class=\"action-table-data\">\r\n                    <div class=\"edit-delete-action\">\r\n                      <a class=\"me-2 p-2\" href=\"#\">\r\n                        <i data-feather=\"edit\" class=\"feather-edit\"></i>\r\n                      </a>\r\n                      <a class=\"confirm-text p-2\" href=\"javascript:void(0);\">\r\n                        <i data-feather=\"trash-2\" class=\"feather-trash-2\"></i>\r\n                      </a>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <label class=\"checkboxs\">\r\n                      <input type=\"checkbox\" />\r\n                      <span class=\"checkmarks\"></span>\r\n                    </label>\r\n                  </td>\r\n                  <td>\r\n                    <div class=\"productimgname\">\r\n                      <a href=\"javascript:void(0);\" class=\"product-img stock-img\">\r\n                        <img src=\"assets/img/products/expire-product-02.png\" alt=\"product\" />\r\n                      </a>\r\n                      <a href=\"javascript:void(0);\">Iphone 14 Pro</a>\r\n                    </div>\r\n                  </td>\r\n                  <td><a href=\"javascript:void(0);\">PT007</a></td>\r\n                  <td>22 Feb 2023</td>\r\n                  <td>04 Apr 2023</td>\r\n                  <td class=\"action-table-data\">\r\n                    <div class=\"edit-delete-action\">\r\n                      <a class=\"me-2 p-2\" href=\"#\">\r\n                        <i data-feather=\"edit\" class=\"feather-edit\"></i>\r\n                      </a>\r\n                      <a class=\"confirm-text p-2\" href=\"javascript:void(0);\">\r\n                        <i data-feather=\"trash-2\" class=\"feather-trash-2\"></i>\r\n                      </a>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <label class=\"checkboxs\">\r\n                      <input type=\"checkbox\" />\r\n                      <span class=\"checkmarks\"></span>\r\n                    </label>\r\n                  </td>\r\n                  <td>\r\n                    <div class=\"productimgname\">\r\n                      <a href=\"javascript:void(0);\" class=\"product-img stock-img\">\r\n                        <img src=\"assets/img/products/expire-product-03.png\" alt=\"product\" />\r\n                      </a>\r\n                      <a href=\"javascript:void(0);\">Black Slim 200 </a>\r\n                    </div>\r\n                  </td>\r\n                  <td><a href=\"javascript:void(0);\">PT008</a></td>\r\n                  <td>18 Mar 2023</td>\r\n                  <td>13 May 2023</td>\r\n                  <td class=\"action-table-data\">\r\n                    <div class=\"edit-delete-action\">\r\n                      <a class=\"me-2 p-2\" href=\"#\">\r\n                        <i data-feather=\"edit\" class=\"feather-edit\"></i>\r\n                      </a>\r\n                      <a class=\"confirm-text p-2\" href=\"javascript:void(0);\">\r\n                        <i data-feather=\"trash-2\" class=\"feather-trash-2\"></i>\r\n                      </a>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <label class=\"checkboxs\">\r\n                      <input type=\"checkbox\" />\r\n                      <span class=\"checkmarks\"></span>\r\n                    </label>\r\n                  </td>\r\n                  <td>\r\n                    <div class=\"productimgname\">\r\n                      <a href=\"javascript:void(0);\" class=\"product-img stock-img\">\r\n                        <img src=\"assets/img/products/expire-product-04.png\" alt=\"product\" />\r\n                      </a>\r\n                      <a href=\"javascript:void(0);\">Woodcraft Sandal</a>\r\n                    </div>\r\n                  </td>\r\n                  <td><a href=\"javascript:void(0);\">PT009</a></td>\r\n                  <td>29 Mar 2023</td>\r\n                  <td>27 May 2023</td>\r\n                  <td class=\"action-table-data\">\r\n                    <div class=\"edit-delete-action\">\r\n                      <a class=\"me-2 p-2\" href=\"#\">\r\n                        <i data-feather=\"edit\" class=\"feather-edit\"></i>\r\n                      </a>\r\n                      <a class=\"confirm-text p-2\" href=\"javascript:void(0);\">\r\n                        <i data-feather=\"trash-2\" class=\"feather-trash-2\"></i>\r\n                      </a>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <label class=\"checkboxs\">\r\n                      <input type=\"checkbox\" />\r\n                      <span class=\"checkmarks\"></span>\r\n                    </label>\r\n                  </td>\r\n                  <td>\r\n                    <div class=\"productimgname\">\r\n                      <a href=\"javascript:void(0);\" class=\"product-img stock-img\">\r\n                        <img src=\"assets/img/products/stock-img-03.png\" alt=\"product\" />\r\n                      </a>\r\n                      <a href=\"javascript:void(0);\">Apple Series 5 Watch\r\n                      </a>\r\n                    </div>\r\n                  </td>\r\n                  <td><a href=\"javascript:void(0);\">PT010</a></td>\r\n                  <td>24 Mar 2023</td>\r\n                  <td>26 May 2023</td>\r\n                  <td class=\"action-table-data\">\r\n                    <div class=\"edit-delete-action\">\r\n                      <a class=\"me-2 p-2\" href=\"#\" data-bs-toggle=\"modal\" data-bs-target=\"#edit-units\">\r\n                        <i data-feather=\"edit\" class=\"feather-edit\"></i>\r\n                      </a>\r\n                      <a class=\"confirm-text p-2\" href=\"javascript:void(0);\">\r\n                        <i data-feather=\"trash-2\" class=\"feather-trash-2\"></i>\r\n                      </a>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  \r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, onBeforeUnmount } from \"vue\";\r\nimport Chart from \"chart.js/auto\";\r\nimport axios from \"axios\";\r\nimport Navbar from \"/src/components/Admin/Navbar.vue\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport default {\r\n  components: {\r\n    Navbar,\r\n  },\r\n  setup() {\r\n    const chartCanvas = ref(null);\r\n    let chartInstance = null;\r\n    const apiURL = process.env.VUE_APP_URL;\r\n    // Initialize statistics as ref variables\r\n    const totalItemsSold = ref(0);\r\n    const totalSales = ref(0);\r\n    const totalProfit = ref(0);\r\n    const totalLost = ref(0);\r\n    const totalTransactions = ref(0);\r\n    const totalCompletedTransactions = ref(0);\r\n    const totalVoidedTransactions = ref(0);\r\n    const totalReturnedTransactions = ref(0);\r\n    const isTransactionOpen = ref(false);\r\n    const dateRange = ref({ startDate: null, endDate: null });\r\n    const isLoading = ref(false);\r\n    const transactions = ref([])\r\n\r\n    const getTransactions = async () => {\r\n      loading.value = true;\r\n      try {\r\n        const reponse = await axios.get(`${apiURL}/get_all_transactions`);\r\n        if (reponse.data.success) {\r\n          transactions.value = reponse.data.transactions\r\n        } else {\r\n          Swal.fire('Eror', 'Failed to get all transaction', 'error');\r\n        }\r\n        nextTick(() => refreshDataTable());\r\n      } catch (error) {\r\n        Swal.fire('Eror', 'Something went wrong', 'error');\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    }\r\n    // Function to render the chart after data is fetched\r\n    const renderChart = (salesData) => {\r\n      if (salesData.length > 0 && chartCanvas.value) {\r\n        const labels = salesData.map((data) => data._id); // Assuming '_id' as labels\r\n        const totalSalesData = salesData.map((data) => data.totalSales);\r\n        const totalProfitData = salesData.map((data) => data.totalProfit);\r\n\r\n        const ctx = chartCanvas.value.getContext(\"2d\"); // Get the context for the canvas element\r\n\r\n        // Destroy existing chart instance before creating a new one\r\n        if (chartInstance) {\r\n          chartInstance.destroy();\r\n        }\r\n\r\n        // Initialize the chart with the provided data\r\n        chartInstance = new Chart(ctx, {\r\n          type: \"bar\",\r\n          data: {\r\n            labels: labels,\r\n            datasets: [\r\n              {\r\n                label: \"Total Sales\",\r\n                data: totalSalesData,\r\n                backgroundColor: \"rgb(40, 199, 111)\",\r\n                borderColor: \"rgb(75, 192, 192)\",\r\n                borderWidth: 1,\r\n              },\r\n              {\r\n                label: \"Total Profit\",\r\n                data: totalProfitData,\r\n                backgroundColor: \"rgb(255, 77, 77)\",\r\n                borderColor: \"rgb(255, 99, 132)\",\r\n                borderWidth: 1,\r\n              },\r\n            ],\r\n          },\r\n          options: {\r\n            responsive: true,\r\n            plugins: {\r\n              legend: {\r\n                position: \"top\",\r\n              },\r\n              tooltip: {\r\n                enabled: true,\r\n              },\r\n            },\r\n            scales: {\r\n              x: {\r\n                title: {\r\n                  display: true,\r\n                  text: \"Dates\",\r\n                },\r\n              },\r\n              y: {\r\n                title: {\r\n                  display: true,\r\n                  text: \"Values\",\r\n                },\r\n                beginAtZero: true,\r\n              },\r\n            },\r\n          },\r\n        });\r\n      }\r\n    };\r\n\r\n    // Fetch transaction state (open or closed)\r\n    const updateTransactionState = async () => {\r\n  try {\r\n    const response = await axios.get(`${apiURL}/transaction_state`);\r\n    if (response.data.success) {\r\n      isTransactionOpen.value = response.data.isOpen;  // This should reflect the correct state\r\n    } else {\r\n      console.error(\"Failed to fetch transaction state.\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error fetching transaction state:\", error);\r\n    Swal.fire({\r\n      title: \"Error!\",\r\n      text: \"Failed to update transaction state\",\r\n      icon: \"error\",\r\n      confirmButtonText: \"OK\",\r\n    });\r\n  }\r\n};\r\n\r\nconst toggleTransaction = async () => {\r\n  const action = isTransactionOpen.value ? \"close\" : \"open\";\r\n  try {\r\n    const result = await Swal.fire({\r\n      title: \"Confirm Action\",\r\n      text: `Are you sure you want to ${action} the transaction?`,\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonText: \"Yes\",\r\n      cancelButtonText: \"No\",\r\n    });\r\n\r\n    if (result.isConfirmed) {\r\n      const endpoint = `${action}_transaction`;\r\n      const response = await axios.post(`${apiURL}/${endpoint}`);\r\n\r\n      if (response.data.success) {\r\n        isTransactionOpen.value = !isTransactionOpen.value;\r\n        await Swal.fire({\r\n          title: \"Success!\",\r\n          text: `Transaction ${action}ed successfully`,\r\n          icon: \"success\",\r\n          confirmButtonText: \"OK\",\r\n        });\r\n\r\n        // Reset data if the transaction was opened\r\n        if (isTransactionOpen.value) {\r\n          // Reset statistics and chart data\r\n          totalItemsSold.value = 0;\r\n          totalSales.value = 0;\r\n          totalProfit.value = 0;\r\n          totalLost.value = 0;\r\n          totalTransactions.value = 0;\r\n          totalCompletedTransactions.value = 0;\r\n          totalVoidedTransactions.value = 0;\r\n          totalReturnedTransactions.value = 0;\r\n          dateRange.value = { startDate: null, endDate: null };\r\n\r\n          // Reload statistics and chart data\r\n          await fetchStatistics();\r\n        } else {\r\n          // Optionally, fetch statistics again when transaction is closed\r\n          await fetchStatistics();\r\n        }\r\n      } else {\r\n        throw new Error(response.data.message || `Failed to ${action} transaction`);\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error(`Error ${action}ing transaction:`, error);\r\n    Swal.fire({\r\n      title: \"Error!\",\r\n      text: error.message,\r\n      icon: \"error\",\r\n      confirmButtonText: \"OK\",\r\n    });\r\n  }\r\n};\r\n\r\n\r\nconst fetchStatistics = async () => {\r\n  try {\r\n    isLoading.value = true;\r\n\r\n    const response = await axios.get(`${apiURL}/get_statistics`);\r\n    if (response.data.success) {\r\n      const statistics = response.data.statistics;\r\n\r\n      // Set the statistics values\r\n      totalTransactions.value = statistics.totalTransactions;\r\n      totalCompletedTransactions.value = statistics.totalCompletedTransactions;\r\n      totalVoidedTransactions.value = statistics.totalVoidedTransactions;\r\n      totalReturnedTransactions.value = statistics.totalReturnedTransactions;\r\n      totalSales.value = statistics.totalSalesAmount;\r\n      totalProfit.value = statistics.totalProfitAmount;\r\n      totalLost.value = statistics.totalLossAmount;\r\n      totalItemsSold.value = statistics.totalItemsSold;\r\n      dateRange.value = statistics.dateRange || { startDate: null, endDate: null };\r\n    } else {\r\n      console.error(\"Failed to fetch dashboard statistics\");\r\n    }\r\n\r\n    // Fetch the sales data for the chart\r\n    const chartResponse = await axios.get(`${apiURL}/get_sales`);\r\n    if (chartResponse.data.success) {\r\n      const salesData = chartResponse.data.salesDatas;\r\n      renderChart(salesData); // Render the chart once the data is fetched\r\n    } else {\r\n      console.error(\"Failed to fetch sales data for chart\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error fetching statistics:\", error);\r\n    Swal.fire({\r\n      title: \"Error!\",\r\n      text: \"Failed to fetch dashboard data\",\r\n      icon: \"error\",\r\n      confirmButtonText: \"OK\",\r\n    });\r\n  } finally {\r\n    isLoading.value = false;\r\n  }\r\n};\r\n    // On component mount, fetch initial data\r\n    onMounted(async () => {\r\n      await updateTransactionState();\r\n      await fetchStatistics();\r\n    });\r\n\r\n    // Clean up the chart instance when the component is unmounted\r\n    onBeforeUnmount(() => {\r\n      if (chartInstance) {\r\n        chartInstance.destroy();\r\n      }\r\n    });\r\n\r\n    return {\r\n      chartCanvas,\r\n      totalItemsSold,\r\n      totalSales,\r\n      totalProfit,\r\n      totalLost,\r\n      totalTransactions,\r\n      totalCompletedTransactions,\r\n      totalVoidedTransactions,\r\n      totalReturnedTransactions,\r\n      dateRange,\r\n      isTransactionOpen,\r\n      toggleTransaction,\r\n    };\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";AA+ZA,SAASA,GAAG,EAAEC,SAAS,EAAEC,eAAc,QAAS,KAAK;AACrD,OAAOC,KAAI,MAAO,eAAe;AACjC,OAAOC,KAAI,MAAO,OAAO;AACzB,OAAOC,MAAK,MAAO,kCAAkC;AACrD,OAAOC,IAAG,MAAO,aAAa;AAE9B,eAAe;EACbC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,KAAKA,CAAA,EAAG;IACN,MAAMC,WAAU,GAAIT,GAAG,CAAC,IAAI,CAAC;IAC7B,IAAIU,aAAY,GAAI,IAAI;IACxB,MAAMC,MAAK,GAAIC,OAAO,CAACC,GAAG,CAACC,WAAW;IACtC;IACA,MAAMC,cAAa,GAAIf,GAAG,CAAC,CAAC,CAAC;IAC7B,MAAMgB,UAAS,GAAIhB,GAAG,CAAC,CAAC,CAAC;IACzB,MAAMiB,WAAU,GAAIjB,GAAG,CAAC,CAAC,CAAC;IAC1B,MAAMkB,SAAQ,GAAIlB,GAAG,CAAC,CAAC,CAAC;IACxB,MAAMmB,iBAAgB,GAAInB,GAAG,CAAC,CAAC,CAAC;IAChC,MAAMoB,0BAAyB,GAAIpB,GAAG,CAAC,CAAC,CAAC;IACzC,MAAMqB,uBAAsB,GAAIrB,GAAG,CAAC,CAAC,CAAC;IACtC,MAAMsB,yBAAwB,GAAItB,GAAG,CAAC,CAAC,CAAC;IACxC,MAAMuB,iBAAgB,GAAIvB,GAAG,CAAC,KAAK,CAAC;IACpC,MAAMwB,SAAQ,GAAIxB,GAAG,CAAC;MAAEyB,SAAS,EAAE,IAAI;MAAEC,OAAO,EAAE;IAAK,CAAC,CAAC;IACzD,MAAMC,SAAQ,GAAI3B,GAAG,CAAC,KAAK,CAAC;IAC5B,MAAM4B,YAAW,GAAI5B,GAAG,CAAC,EAAE;IAE3B,MAAM6B,eAAc,GAAI,MAAAA,CAAA,KAAY;MAClCC,OAAO,CAACC,KAAI,GAAI,IAAI;MACpB,IAAI;QACF,MAAMC,OAAM,GAAI,MAAM5B,KAAK,CAAC6B,GAAG,CAAC,GAAGtB,MAAM,uBAAuB,CAAC;QACjE,IAAIqB,OAAO,CAACE,IAAI,CAACC,OAAO,EAAE;UACxBP,YAAY,CAACG,KAAI,GAAIC,OAAO,CAACE,IAAI,CAACN,YAAW;QAC/C,OAAO;UACLtB,IAAI,CAAC8B,IAAI,CAAC,MAAM,EAAE,+BAA+B,EAAE,OAAO,CAAC;QAC7D;QACAC,QAAQ,CAAC,MAAMC,gBAAgB,CAAC,CAAC,CAAC;MACpC,EAAE,OAAOC,KAAK,EAAE;QACdjC,IAAI,CAAC8B,IAAI,CAAC,MAAM,EAAE,sBAAsB,EAAE,OAAO,CAAC;MACpD,UAAU;QACRN,OAAO,CAACC,KAAI,GAAI,KAAK;MACvB;IACF;IACA;IACA,MAAMS,WAAU,GAAKC,SAAS,IAAK;MACjC,IAAIA,SAAS,CAACC,MAAK,GAAI,KAAKjC,WAAW,CAACsB,KAAK,EAAE;QAC7C,MAAMY,MAAK,GAAIF,SAAS,CAACG,GAAG,CAAEV,IAAI,IAAKA,IAAI,CAACW,GAAG,CAAC,EAAE;QAClD,MAAMC,cAAa,GAAIL,SAAS,CAACG,GAAG,CAAEV,IAAI,IAAKA,IAAI,CAAClB,UAAU,CAAC;QAC/D,MAAM+B,eAAc,GAAIN,SAAS,CAACG,GAAG,CAAEV,IAAI,IAAKA,IAAI,CAACjB,WAAW,CAAC;QAEjE,MAAM+B,GAAE,GAAIvC,WAAW,CAACsB,KAAK,CAACkB,UAAU,CAAC,IAAI,CAAC,EAAE;;QAEhD;QACA,IAAIvC,aAAa,EAAE;UACjBA,aAAa,CAACwC,OAAO,CAAC,CAAC;QACzB;;QAEA;QACAxC,aAAY,GAAI,IAAIP,KAAK,CAAC6C,GAAG,EAAE;UAC7BG,IAAI,EAAE,KAAK;UACXjB,IAAI,EAAE;YACJS,MAAM,EAAEA,MAAM;YACdS,QAAQ,EAAE,CACR;cACEC,KAAK,EAAE,aAAa;cACpBnB,IAAI,EAAEY,cAAc;cACpBQ,eAAe,EAAE,mBAAmB;cACpCC,WAAW,EAAE,mBAAmB;cAChCC,WAAW,EAAE;YACf,CAAC,EACD;cACEH,KAAK,EAAE,cAAc;cACrBnB,IAAI,EAAEa,eAAe;cACrBO,eAAe,EAAE,kBAAkB;cACnCC,WAAW,EAAE,mBAAmB;cAChCC,WAAW,EAAE;YACf,CAAC;UAEL,CAAC;UACDC,OAAO,EAAE;YACPC,UAAU,EAAE,IAAI;YAChBC,OAAO,EAAE;cACPC,MAAM,EAAE;gBACNC,QAAQ,EAAE;cACZ,CAAC;cACDC,OAAO,EAAE;gBACPC,OAAO,EAAE;cACX;YACF,CAAC;YACDC,MAAM,EAAE;cACNC,CAAC,EAAE;gBACDC,KAAK,EAAE;kBACLC,OAAO,EAAE,IAAI;kBACbC,IAAI,EAAE;gBACR;cACF,CAAC;cACDC,CAAC,EAAE;gBACDH,KAAK,EAAE;kBACLC,OAAO,EAAE,IAAI;kBACbC,IAAI,EAAE;gBACR,CAAC;gBACDE,WAAW,EAAE;cACf;YACF;UACF;QACF,CAAC,CAAC;MACJ;IACF,CAAC;;IAED;IACA,MAAMC,sBAAqB,GAAI,MAAAA,CAAA,KAAY;MAC7C,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMpE,KAAK,CAAC6B,GAAG,CAAC,GAAGtB,MAAM,oBAAoB,CAAC;QAC/D,IAAI6D,QAAQ,CAACtC,IAAI,CAACC,OAAO,EAAE;UACzBZ,iBAAiB,CAACQ,KAAI,GAAIyC,QAAQ,CAACtC,IAAI,CAACuC,MAAM,EAAG;QACnD,OAAO;UACLC,OAAO,CAACnC,KAAK,CAAC,oCAAoC,CAAC;QACrD;MACF,EAAE,OAAOA,KAAK,EAAE;QACdmC,OAAO,CAACnC,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;QACzDjC,IAAI,CAAC8B,IAAI,CAAC;UACR8B,KAAK,EAAE,QAAQ;UACfE,IAAI,EAAE,oCAAoC;UAC1CO,IAAI,EAAE,OAAO;UACbC,iBAAiB,EAAE;QACrB,CAAC,CAAC;MACJ;IACF,CAAC;IAED,MAAMC,iBAAgB,GAAI,MAAAA,CAAA,KAAY;MACpC,MAAMC,MAAK,GAAIvD,iBAAiB,CAACQ,KAAI,GAAI,OAAM,GAAI,MAAM;MACzD,IAAI;QACF,MAAMgD,MAAK,GAAI,MAAMzE,IAAI,CAAC8B,IAAI,CAAC;UAC7B8B,KAAK,EAAE,gBAAgB;UACvBE,IAAI,EAAE,4BAA4BU,MAAM,mBAAmB;UAC3DH,IAAI,EAAE,UAAU;UAChBK,gBAAgB,EAAE,IAAI;UACtBJ,iBAAiB,EAAE,KAAK;UACxBK,gBAAgB,EAAE;QACpB,CAAC,CAAC;QAEF,IAAIF,MAAM,CAACG,WAAW,EAAE;UACtB,MAAMC,QAAO,GAAI,GAAGL,MAAM,cAAc;UACxC,MAAMN,QAAO,GAAI,MAAMpE,KAAK,CAACgF,IAAI,CAAC,GAAGzE,MAAM,IAAIwE,QAAQ,EAAE,CAAC;UAE1D,IAAIX,QAAQ,CAACtC,IAAI,CAACC,OAAO,EAAE;YACzBZ,iBAAiB,CAACQ,KAAI,GAAI,CAACR,iBAAiB,CAACQ,KAAK;YAClD,MAAMzB,IAAI,CAAC8B,IAAI,CAAC;cACd8B,KAAK,EAAE,UAAU;cACjBE,IAAI,EAAE,eAAeU,MAAM,iBAAiB;cAC5CH,IAAI,EAAE,SAAS;cACfC,iBAAiB,EAAE;YACrB,CAAC,CAAC;;YAEF;YACA,IAAIrD,iBAAiB,CAACQ,KAAK,EAAE;cAC3B;cACAhB,cAAc,CAACgB,KAAI,GAAI,CAAC;cACxBf,UAAU,CAACe,KAAI,GAAI,CAAC;cACpBd,WAAW,CAACc,KAAI,GAAI,CAAC;cACrBb,SAAS,CAACa,KAAI,GAAI,CAAC;cACnBZ,iBAAiB,CAACY,KAAI,GAAI,CAAC;cAC3BX,0BAA0B,CAACW,KAAI,GAAI,CAAC;cACpCV,uBAAuB,CAACU,KAAI,GAAI,CAAC;cACjCT,yBAAyB,CAACS,KAAI,GAAI,CAAC;cACnCP,SAAS,CAACO,KAAI,GAAI;gBAAEN,SAAS,EAAE,IAAI;gBAAEC,OAAO,EAAE;cAAK,CAAC;;cAEpD;cACA,MAAM2D,eAAe,CAAC,CAAC;YACzB,OAAO;cACL;cACA,MAAMA,eAAe,CAAC,CAAC;YACzB;UACF,OAAO;YACL,MAAM,IAAIC,KAAK,CAACd,QAAQ,CAACtC,IAAI,CAACqD,OAAM,IAAK,aAAaT,MAAM,cAAc,CAAC;UAC7E;QACF;MACF,EAAE,OAAOvC,KAAK,EAAE;QACdmC,OAAO,CAACnC,KAAK,CAAC,SAASuC,MAAM,kBAAkB,EAAEvC,KAAK,CAAC;QACvDjC,IAAI,CAAC8B,IAAI,CAAC;UACR8B,KAAK,EAAE,QAAQ;UACfE,IAAI,EAAE7B,KAAK,CAACgD,OAAO;UACnBZ,IAAI,EAAE,OAAO;UACbC,iBAAiB,EAAE;QACrB,CAAC,CAAC;MACJ;IACF,CAAC;IAGD,MAAMS,eAAc,GAAI,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF1D,SAAS,CAACI,KAAI,GAAI,IAAI;QAEtB,MAAMyC,QAAO,GAAI,MAAMpE,KAAK,CAAC6B,GAAG,CAAC,GAAGtB,MAAM,iBAAiB,CAAC;QAC5D,IAAI6D,QAAQ,CAACtC,IAAI,CAACC,OAAO,EAAE;UACzB,MAAMqD,UAAS,GAAIhB,QAAQ,CAACtC,IAAI,CAACsD,UAAU;;UAE3C;UACArE,iBAAiB,CAACY,KAAI,GAAIyD,UAAU,CAACrE,iBAAiB;UACtDC,0BAA0B,CAACW,KAAI,GAAIyD,UAAU,CAACpE,0BAA0B;UACxEC,uBAAuB,CAACU,KAAI,GAAIyD,UAAU,CAACnE,uBAAuB;UAClEC,yBAAyB,CAACS,KAAI,GAAIyD,UAAU,CAAClE,yBAAyB;UACtEN,UAAU,CAACe,KAAI,GAAIyD,UAAU,CAACC,gBAAgB;UAC9CxE,WAAW,CAACc,KAAI,GAAIyD,UAAU,CAACE,iBAAiB;UAChDxE,SAAS,CAACa,KAAI,GAAIyD,UAAU,CAACG,eAAe;UAC5C5E,cAAc,CAACgB,KAAI,GAAIyD,UAAU,CAACzE,cAAc;UAChDS,SAAS,CAACO,KAAI,GAAIyD,UAAU,CAAChE,SAAQ,IAAK;YAAEC,SAAS,EAAE,IAAI;YAAEC,OAAO,EAAE;UAAK,CAAC;QAC9E,OAAO;UACLgD,OAAO,CAACnC,KAAK,CAAC,sCAAsC,CAAC;QACvD;;QAEA;QACA,MAAMqD,aAAY,GAAI,MAAMxF,KAAK,CAAC6B,GAAG,CAAC,GAAGtB,MAAM,YAAY,CAAC;QAC5D,IAAIiF,aAAa,CAAC1D,IAAI,CAACC,OAAO,EAAE;UAC9B,MAAMM,SAAQ,GAAImD,aAAa,CAAC1D,IAAI,CAAC2D,UAAU;UAC/CrD,WAAW,CAACC,SAAS,CAAC,EAAE;QAC1B,OAAO;UACLiC,OAAO,CAACnC,KAAK,CAAC,sCAAsC,CAAC;QACvD;MACF,EAAE,OAAOA,KAAK,EAAE;QACdmC,OAAO,CAACnC,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClDjC,IAAI,CAAC8B,IAAI,CAAC;UACR8B,KAAK,EAAE,QAAQ;UACfE,IAAI,EAAE,gCAAgC;UACtCO,IAAI,EAAE,OAAO;UACbC,iBAAiB,EAAE;QACrB,CAAC,CAAC;MACJ,UAAU;QACRjD,SAAS,CAACI,KAAI,GAAI,KAAK;MACzB;IACF,CAAC;IACG;IACA9B,SAAS,CAAC,YAAY;MACpB,MAAMsE,sBAAsB,CAAC,CAAC;MAC9B,MAAMc,eAAe,CAAC,CAAC;IACzB,CAAC,CAAC;;IAEF;IACAnF,eAAe,CAAC,MAAM;MACpB,IAAIQ,aAAa,EAAE;QACjBA,aAAa,CAACwC,OAAO,CAAC,CAAC;MACzB;IACF,CAAC,CAAC;IAEF,OAAO;MACLzC,WAAW;MACXM,cAAc;MACdC,UAAU;MACVC,WAAW;MACXC,SAAS;MACTC,iBAAiB;MACjBC,0BAA0B;MAC1BC,uBAAuB;MACvBC,yBAAyB;MACzBE,SAAS;MACTD,iBAAiB;MACjBsD;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}