{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport { ref, computed, onMounted, onBeforeUnmount } from 'vue';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nexport default {\n  setup() {\n    const apiURL = process.env.VUE_APP_URL;\n    const imgURL = process.env.VUE_APP_IMAGE_URL;\n\n    // Reactive Variables\n    const selectedCategory = ref('all');\n    const barcode = ref('');\n    const barcodeInput = ref(null);\n    const cart = ref([]);\n    const categories = ref([]);\n    const subtotal = ref(0);\n    const VAT = ref(12);\n    const discount = ref(0);\n    const barcodeError = ref(null);\n    const paymentError = ref(null);\n    const lastAddedProduct = ref(null);\n    const stockQuantity = ref(null);\n    const newQuantity = ref(1);\n    const quantityError = ref(null);\n    const change = ref(null);\n    const clientPayment = ref(null);\n    const products = ref([]);\n    const transactionId = ref('');\n    const transactionError = ref(null);\n    const returnItems = ref([]);\n    const modalState = ref({\n      isPaymentOpen: false,\n      isQuantityOpen: false,\n      isReturnOpen: false,\n      isVoidOpen: false\n    });\n\n    // Computed Variables\n    const total = computed(() => subtotal.value + subtotal.value * VAT.value / 100 - discount.value);\n\n    // API Calls\n    const getCategories = async () => {\n      try {\n        const response = await axios.get(`${apiURL}/get_category_list`);\n        categories.value = response.data.categories;\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    const getProductsByCategory = async categoryName => {\n      try {\n        const response = await axios.get(`${apiURL}/get_products_by_category/${categoryName}`);\n        products.value = response.data.products;\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    const addProduct = async (product = null) => {\n      try {\n        change.value = null;\n        if (!product && barcode.value.trim()) {\n          const response = await axios.get(`${apiURL}/get_product_info/${barcode.value.trim()}`);\n          if (response.data.success) {\n            product = response.data.product;\n            barcodeError.value = null;\n          } else {\n            barcodeError.value = response.data.message || \"Product not found.\";\n            return;\n          }\n        }\n        if (product) {\n          lastAddedProduct.value = product;\n          stockQuantity.value = product.quantity;\n          const existingItem = cart.value.find(item => item._id === product._id);\n          if (existingItem) {\n            if (existingItem.quantity + 1 <= stockQuantity.value) {\n              existingItem.quantity++;\n            } else {\n              barcodeError.value = `Maximum stock reached for ${product.name}.`;\n            }\n          } else {\n            if (stockQuantity.value > 0) {\n              cart.value.push({\n                ...product,\n                quantity: 1\n              });\n            } else {\n              barcodeError.value = `No stock available for ${product.name}.`;\n            }\n          }\n          updateSubtotal();\n        }\n      } catch (error) {\n        console.error(\"Error adding product:\", error);\n        barcodeError.value = \"An error occurred while fetching the product.\";\n      } finally {\n        barcode.value = '';\n      }\n    };\n    const updateSubtotal = () => {\n      subtotal.value = cart.value.reduce((sum, item) => sum + item.quantity * item.price, 0);\n    };\n\n    // Modal Management\n    const openModal = modalName => {\n      closeAllModals();\n      modalState.value[modalName] = true;\n      setTimeout(() => {\n        const modalElement = document.querySelector(`#${modalName}-modal`);\n        if (modalElement) {\n          const modalInstance = new bootstrap.Modal(modalElement);\n          modalInstance.show();\n          modalElement.addEventListener('shown.bs.modal', () => {\n            const inputField = modalElement.querySelector('input');\n            if (inputField) inputField.focus();\n          });\n        }\n      }, 100);\n    };\n    const closeAllModals = () => {\n      for (let key in modalState.value) {\n        modalState.value[key] = false;\n      }\n    };\n    const handleKeydown = event => {\n      switch (event.key) {\n        case 'F1':\n          event.preventDefault();\n          if (total.value > 0) openModal('isPaymentOpen');\n          break;\n        case 'F2':\n          event.preventDefault();\n          openModal('isVoidOpen');\n          break;\n        case 'F3':\n          event.preventDefault();\n          openModal('isReturnOpen');\n          break;\n        case 'q':\n          event.preventDefault();\n          openModal('isQuantityOpen');\n          break;\n        case 'Escape':\n          barcodeInput.value?.focus();\n          break;\n        default:\n          break;\n      }\n    };\n    const processPayment = async () => {\n      if (clientPayment.value === null || clientPayment.value < total.value) {\n        paymentError.value = `Payment must be at least $${total.value}.`;\n        return;\n      }\n      try {\n        const transactionData = {\n          cart: cart.value.map(item => ({\n            _id: item._id,\n            sku: item.sku,\n            name: item.name,\n            price: item.price,\n            total: item.total,\n            quantity: item.quantity\n          })),\n          paymentMethod: \"Cash\",\n          discounts: discount.value,\n          netAmount: subtotal.value,\n          VAT: subtotal.value * VAT.value / 100,\n          totalAmount: total.value,\n          cash: clientPayment.value,\n          change: change.value,\n          status: \"Completed\",\n          employee: \"JohnDoe\"\n        };\n        const response = await axios.post(`${apiURL}/commit_transaction`, transactionData);\n        if (response.data.success) {\n          change.value = (clientPayment.value - total.value).toFixed(2);\n          Swal.fire({\n            title: 'Success!',\n            text: 'Transaction successful.',\n            icon: 'success',\n            timer: 1500,\n            showConfirmButton: false\n          });\n          cart.value = [];\n          subtotal.value = 0;\n          discount.value = 0;\n          clientPayment.value = null;\n          paymentError.value = null;\n          closeAllModals();\n        } else {\n          paymentError.value = response.data.message || \"Failed to process transaction.\";\n        }\n      } catch (error) {\n        paymentError.value = \"An error occurred while processing the payment.\";\n      }\n    };\n\n    // Lifecycle Hooks\n    onMounted(() => {\n      getCategories();\n      barcodeInput.value?.focus();\n      window.addEventListener('keydown', handleKeydown);\n    });\n    onBeforeUnmount(() => {\n      window.removeEventListener('keydown', handleKeydown);\n    });\n    return {\n      selectedCategory,\n      barcode,\n      barcodeInput,\n      cart,\n      categories,\n      subtotal,\n      VAT,\n      discount,\n      total,\n      barcodeError,\n      paymentError,\n      lastAddedProduct,\n      stockQuantity,\n      newQuantity,\n      quantityError,\n      addProduct,\n      updateSubtotal,\n      openModal,\n      modalState,\n      change,\n      clientPayment,\n      processPayment,\n      imgURL,\n      transactionId,\n      transactionError,\n      returnItems\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","onBeforeUnmount","axios","Swal","setup","apiURL","process","env","VUE_APP_URL","imgURL","VUE_APP_IMAGE_URL","selectedCategory","barcode","barcodeInput","cart","categories","subtotal","VAT","discount","barcodeError","paymentError","lastAddedProduct","stockQuantity","newQuantity","quantityError","change","clientPayment","products","transactionId","transactionError","returnItems","modalState","isPaymentOpen","isQuantityOpen","isReturnOpen","isVoidOpen","total","value","getCategories","response","get","data","error","console","getProductsByCategory","categoryName","addProduct","product","trim","success","message","quantity","existingItem","find","item","_id","name","push","updateSubtotal","reduce","sum","price","openModal","modalName","closeAllModals","setTimeout","modalElement","document","querySelector","modalInstance","bootstrap","Modal","show","addEventListener","inputField","focus","key","handleKeydown","event","preventDefault","processPayment","transactionData","map","sku","paymentMethod","discounts","netAmount","totalAmount","cash","status","employee","post","toFixed","fire","title","text","icon","timer","showConfirmButton","window","removeEventListener"],"sources":["C:\\Users\\Administrator\\OneDrive\\Desktop\\POSExpress\\frontend\\src\\components\\Apps\\POS.vue"],"sourcesContent":["<template>\r\n  <div class=\"main-wrapper\">\r\n    <div class=\"header\">\r\n      <!-- Header Content -->\r\n    </div>\r\n\r\n    <div class=\"page-wrapper pos-pg-wrapper ms-0\">\r\n      <div class=\"content pos-design p-0\">\r\n        <div class=\"row align-items-start pos-wrapper\">\r\n          <!-- Category Sidebar -->\r\n<!-- Category Sidebar -->\r\n<div class=\"col-md-3 col-lg-2 ps-0\">\r\n  <div class=\"category-list\">\r\n    <h5>Categories</h5>\r\n    <ul \r\n      class=\"list-group text-center overflow-auto\" \r\n      style=\"max-height: 100vh; overflow-y: auto; scrollbar-width: thin;\">\r\n\r\n      <li \r\n        v-for=\"category in categories\" \r\n        :key=\"category.name\" \r\n        class=\"list-group-item\"\r\n        :class=\"{ 'active': selectedCategory === category.name }\" \r\n        @click=\"selectCategory(category.name)\">\r\n        <a href=\"javascript:void(0);\">{{ category.name }}</a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n\r\n\r\n          <!-- Product Display -->\r\n          <div class=\"col-md-12 col-lg-6\">\r\n            <div class=\"row bg-white px-4 pb-5 mx-3 mt-2\">\r\n              <h4>Enter Barcode:</h4>\r\n              <input v-model=\"barcode\" ref=\"barcodeInput\"\r\n                class=\"form-control bg-light border border-dark fs-1 mb-2 mt-3\" type=\"text\" @keyup.enter=\"addProduct()\"\r\n                placeholder=\"Scan Barcode\" />\r\n              <p v-if=\"barcodeError.message\" class=\"text-danger\">ERROR: {{ barcodeError.message }}</p>\r\n\r\n            </div>\r\n            <div class=\"pos-wrapper\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12 col-lg-12\">\r\n                  <div class=\"pos-products\">\r\n                    <div class=\"tabs_container\">\r\n                      <!-- Display products based on selected category -->\r\n                      <div v-if=\"products.length\" class=\"tab_content active\">\r\n                        <div class=\"row\">\r\n                          <div v-for=\"product in products\" :key=\"product.id\"\r\n                            class=\"col-sm-2 col-md-12 col-lg-5 col-xl-5 product-item\">\r\n                            <div class=\"product-info default-cover card\" @click=\"addProduct(product)\">\r\n                              <a href=\"javascript:void(0);\" class=\"img-bg\">\r\n                                <img v-if=\"product.image\" :src=\"`${imgURL}${product.image}`\" alt=\"Product\" />\r\n                                <img v-else :src=\"`/img/icons/no-image-icon.png`\" />\r\n                                <span><i data-feather=\"check\"></i></span>\r\n                              </a>\r\n                              <h6 class=\"product-name\">\r\n                                <a href=\"javascript:void(0);\">{{ product.name }}</a>\r\n                              </h6>\r\n                              <div class=\"d-flex align-items-center justify-content-between price\">\r\n                                <span>Stock: {{ product.quantity }}</span>\r\n                                <p>${{ product.price }}</p>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                        </div>\r\n                      </div>\r\n\r\n                      <!-- If no products, show a message -->\r\n                      <div v-else class=\"no-products-message\">\r\n                        <p>No products available in this category.</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Order List and Summary -->\r\n          <div class=\"col-md-12 col-lg-4 ps-0\">\r\n            <aside class=\"product-order-list\">\r\n              <div class=\"head d-flex align-items-center justify-content-between w-100\">\r\n                <h5>Order List</h5>\r\n                <a class=\"confirm-text\" href=\"javascript:void(0);\"><i data-feather=\"trash-2\"\r\n                    class=\"feather-16 text-danger\"></i></a>\r\n              </div>\r\n\r\n              <div class=\"product-added block-section\">\r\n                <div class=\"product-wrap\">\r\n                  <table class=\"table table-responsive\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Product</th>\r\n                        <th>Price</th>\r\n                        <th>Quantity</th>\r\n                        <th>Total</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr v-for=\"item in cart\" :key=\"item.id\">\r\n                        <td>{{ item.name }}</td>\r\n                        <td>{{ item.price }}</td>\r\n                        <td>{{ item.quantity }}</td>\r\n                        <td>{{ item.quantity * item.price }}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"block-section\">\r\n                <h6>Order Summary</h6>\r\n                <table class=\"table table-responsive table-borderless\">\r\n                  <tr>\r\n                    <td>Sub Total</td>\r\n                    <td class=\"text-end\">${{ subtotal }}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>VAT</td>\r\n                    <td class=\"text-end\">{{ VAT }}%</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td class=\"danger\">Discount</td>\r\n                    <td class=\"danger text-end\">${{ discount }}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Total</td>\r\n                    <td class=\"text-end\">${{ total.toFixed(2) }}</td>\r\n                  </tr>\r\n                  <tr v-if=\"change\">\r\n                    <td>Change</td>\r\n                    <td class=\"text-end\">${{ change }}</td>\r\n                  </tr>\r\n                </table>\r\n              </div>\r\n            </aside>\r\n            <div class=\"btn-row d-sm-flex align-items-center justify-content-between\">\r\n              <a href=\"javascript:void(0);\" class=\"btn btn-success btn-icon flex-fill position-relative p-4 fs-6\"\r\n                data-bs-toggle=\"modal\" data-bs-target=\"payment-modal\">\r\n                <span class=\"keyboard-key\">F1</span>\r\n                <span class=\"me-1 d-flex align-items-center\">\r\n                  <i data-feather=\"credit-card\" class=\"feather-16\"></i>\r\n                </span>Pay\r\n              </a>\r\n              <a href=\"javascript:void(0);\" class=\"btn btn-danger btn-icon flex-fill position-relative p-4 fs-6\">\r\n                <span class=\"keyboard-key\">F2</span>\r\n                <span class=\"me-1 d-flex align-items-center\">\r\n                  <i data-feather=\"trash-2\" class=\"feather-16\"></i>\r\n                </span>Void\r\n              </a>\r\n\r\n              <a href=\"javascript:void(0);\" class=\"btn btn-info btn-icon flex-fill position-relative p-4 fs-6\"\r\n                data-bs-toggle=\"modal\" data-bs-target=\"#hold-order\" @click=\"openReturnModal\">\r\n                <span class=\"keyboard-key\">F3</span>\r\n                <span class=\"me-1 d-flex align-items-center\">\r\n                  <i data-feather=\"corner-up-right\" class=\"feather-16\"></i>\r\n                </span>Return\r\n              </a>\r\n\r\n            </div>\r\n\r\n          </div>\r\n          <!-- Action Buttons -->\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- Modal for Updating Quantity -->\r\n  <div class=\"modal fade\" id=\"update-quantity-modal\" tabindex=\"-1\" aria-labelledby=\"update-quantity-modalLabel\"\r\n    aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"update-quantity-modalLabel\">Update Quantity</h5>\r\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div class=\"form-group\">\r\n            <label for=\"new-quantity\">Quantity</label>\r\n            <input type=\"number\" id=\"new-quantity\" class=\"form-control\" v-model=\"newQuantity\" min=\"1\"\r\n              @keydown=\"handleModalKeydown\" />\r\n          </div>\r\n          <p v-if=\"quantityError\" class=\"text-danger\">{{ quantityError }}</p>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n          <button type=\"button\" class=\"btn btn-primary\" @click=\"updateProductQuantity\">Update</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Modal for Payment -->\r\n  <div class=\"modal fade\" id=\"payment-modal\" tabindex=\"-1\" aria-labelledby=\"payment-modalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"payment-modalLabel\">Payment</h5>\r\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div class=\"form-group\">\r\n            <label for=\"payment\">Amount to Pay: ${{ total }}</label>\r\n            <input type=\"number\" id=\"payment\" class=\"form-control\" v-model=\"clientPayment\" min=\"1\"\r\n              @keydown=\"handlePaymentKeydown\" placeholder=\"Enter payment amount\" />\r\n          </div>\r\n          <p v-if=\"paymentError.message\" class=\"text-danger\">{{ paymentError.message }}</p>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n          <button type=\"button\" class=\"btn btn-primary\" @click=\"processPayment\">Process Payment</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"modal fade\" id=\"return-modal\" tabindex=\"-1\" aria-labelledby=\"return-modalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"return-modalLabel\">Enter Transaction ID for Return</h5>\r\n          <button type=\"button\" class=\"btn-close\" id=\"return-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <input v-model=\"transactionId\" class=\"form-control\" type=\"text\" id=\"return-transaction\"\r\n            placeholder=\"Transaction ID\" />\r\n          <p v-if=\"transactionError\" class=\"text-danger\">{{ transactionError }}</p>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n          <button type=\"button\" class=\"btn btn-primary\" @click=\"fetchTransactionItems\">Fetch Items</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Modal for Return Item Selection -->\r\n  <div class=\"modal fade\" id=\"select-return-items-modal\" tabindex=\"-1\" aria-labelledby=\"select-return-items-modalLabel\"\r\n    aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"select-return-items-modalLabel\">Select Items for Return</h5>\r\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <table class=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Select</th>\r\n                <th>Product</th>\r\n                <th>Quantity</th>\r\n                <th>Return Quantity</th>\r\n                <th>Price</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr v-for=\"item in returnItems\" :key=\"item._id\">\r\n                <td>\r\n                  <input type=\"checkbox\" v-model=\"item.selected\" />\r\n                </td>\r\n                <td>{{ item.name }}</td>\r\n                <td>{{ item.quantity }}</td>\r\n                <td>\r\n                  <input type=\"number\" v-model=\"item.returnQuantity\" :max=\"item.quantity\" min=\"1\" />\r\n                </td>\r\n                <td>${{ item.price }}</td>\r\n              </tr>\r\n\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n          <button type=\"button\" class=\"btn btn-primary\" @click=\"processReturn\">Process Return</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <!-- Void Transaction Modal -->\r\n  <div class=\"modal fade\" id=\"void-transaction-modal\" tabindex=\"-1\" aria-labelledby=\"voidTransactionModalLabel\"\r\n    aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"voidTransactionModalLabel\">Void Transaction</h5>\r\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <form @submit.prevent=\"processVoid\">\r\n            <div class=\"mb-3\">\r\n              <label for=\"transaction-id\" class=\"form-label\">Transaction ID</label>\r\n              <input type=\"text\" id=\"transaction-id\" class=\"form-control\" v-model=\"transactionId\"\r\n                placeholder=\"Enter Transaction ID\" required>\r\n            </div>\r\n            <p v-if=\"transactionError\" class=\"text-danger\">{{ transactionError }}</p>\r\n          </form>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\r\n          <button type=\"button\" class=\"btn btn-danger\" @click=\"processVoid\">Void Transaction</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</template>\r\n<script>\r\nimport { ref, computed, onMounted, onBeforeUnmount } from 'vue';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport default {\r\n  setup() {\r\n    const apiURL = process.env.VUE_APP_URL;\r\n    const imgURL = process.env.VUE_APP_IMAGE_URL;\r\n\r\n    // Reactive Variables\r\n    const selectedCategory = ref('all');\r\n    const barcode = ref('');\r\n    const barcodeInput = ref(null);\r\n    const cart = ref([]);\r\n    const categories = ref([]);\r\n    const subtotal = ref(0);\r\n    const VAT = ref(12);\r\n    const discount = ref(0);\r\n    const barcodeError = ref(null);\r\n    const paymentError = ref(null);\r\n    const lastAddedProduct = ref(null);\r\n    const stockQuantity = ref(null);\r\n    const newQuantity = ref(1);\r\n    const quantityError = ref(null);\r\n    const change = ref(null);\r\n    const clientPayment = ref(null);\r\n    const products = ref([]);\r\n    const transactionId = ref('');\r\n    const transactionError = ref(null);\r\n    const returnItems = ref([]);\r\n\r\n    const modalState = ref({\r\n      isPaymentOpen: false,\r\n      isQuantityOpen: false,\r\n      isReturnOpen: false,\r\n      isVoidOpen: false,\r\n    });\r\n\r\n    // Computed Variables\r\n    const total = computed(() => \r\n      subtotal.value + (subtotal.value * VAT.value) / 100 - discount.value\r\n    );\r\n\r\n    // API Calls\r\n    const getCategories = async () => {\r\n      try {\r\n        const response = await axios.get(`${apiURL}/get_category_list`);\r\n        categories.value = response.data.categories;\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    const getProductsByCategory = async (categoryName) => {\r\n      try {\r\n        const response = await axios.get(`${apiURL}/get_products_by_category/${categoryName}`);\r\n        products.value = response.data.products;\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    const addProduct = async (product = null) => {\r\n      try {\r\n        change.value = null;\r\n\r\n        if (!product && barcode.value.trim()) {\r\n          const response = await axios.get(`${apiURL}/get_product_info/${barcode.value.trim()}`);\r\n          if (response.data.success) {\r\n            product = response.data.product;\r\n            barcodeError.value = null;\r\n          } else {\r\n            barcodeError.value = response.data.message || \"Product not found.\";\r\n            return;\r\n          }\r\n        }\r\n\r\n        if (product) {\r\n          lastAddedProduct.value = product;\r\n          stockQuantity.value = product.quantity;\r\n\r\n          const existingItem = cart.value.find(item => item._id === product._id);\r\n\r\n          if (existingItem) {\r\n            if (existingItem.quantity + 1 <= stockQuantity.value) {\r\n              existingItem.quantity++;\r\n            } else {\r\n              barcodeError.value = `Maximum stock reached for ${product.name}.`;\r\n            }\r\n          } else {\r\n            if (stockQuantity.value > 0) {\r\n              cart.value.push({ ...product, quantity: 1 });\r\n            } else {\r\n              barcodeError.value = `No stock available for ${product.name}.`;\r\n            }\r\n          }\r\n\r\n          updateSubtotal();\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error adding product:\", error);\r\n        barcodeError.value = \"An error occurred while fetching the product.\";\r\n      } finally {\r\n        barcode.value = '';\r\n      }\r\n    };\r\n\r\n    const updateSubtotal = () => {\r\n      subtotal.value = cart.value.reduce((sum, item) => sum + item.quantity * item.price, 0);\r\n    };\r\n\r\n    // Modal Management\r\n    const openModal = (modalName) => {\r\n      closeAllModals();\r\n      modalState.value[modalName] = true;\r\n      setTimeout(() => {\r\n        const modalElement = document.querySelector(`#${modalName}-modal`);\r\n        if (modalElement) {\r\n          const modalInstance = new bootstrap.Modal(modalElement);\r\n          modalInstance.show();\r\n\r\n          modalElement.addEventListener('shown.bs.modal', () => {\r\n            const inputField = modalElement.querySelector('input');\r\n            if (inputField) inputField.focus();\r\n          });\r\n        }\r\n      }, 100);\r\n    };\r\n\r\n    const closeAllModals = () => {\r\n      for (let key in modalState.value) {\r\n        modalState.value[key] = false;\r\n      }\r\n    };\r\n\r\n    const handleKeydown = (event) => {\r\n      switch (event.key) {\r\n        case 'F1':\r\n          event.preventDefault();\r\n          if (total.value > 0) openModal('isPaymentOpen');\r\n          break;\r\n        case 'F2':\r\n          event.preventDefault();\r\n          openModal('isVoidOpen');\r\n          break;\r\n        case 'F3':\r\n          event.preventDefault();\r\n          openModal('isReturnOpen');\r\n          break;\r\n        case 'q':\r\n          event.preventDefault();\r\n          openModal('isQuantityOpen');\r\n          break;\r\n        case 'Escape':\r\n          barcodeInput.value?.focus();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n\r\n    const processPayment = async () => {\r\n      if (clientPayment.value === null || clientPayment.value < total.value) {\r\n        paymentError.value = `Payment must be at least $${total.value}.`;\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const transactionData = {\r\n          cart: cart.value.map(item => ({\r\n            _id: item._id,\r\n            sku: item.sku,\r\n            name: item.name,\r\n            price: item.price,\r\n            total: item.total,\r\n            quantity: item.quantity,\r\n          })),\r\n          paymentMethod: \"Cash\",\r\n          discounts: discount.value,\r\n          netAmount: subtotal.value,\r\n          VAT: (subtotal.value * VAT.value) / 100,\r\n          totalAmount: total.value,\r\n          cash: clientPayment.value,\r\n          change: change.value,\r\n          status: \"Completed\",\r\n          employee: \"JohnDoe\",\r\n        };\r\n\r\n        const response = await axios.post(`${apiURL}/commit_transaction`, transactionData);\r\n\r\n        if (response.data.success) {\r\n          change.value = (clientPayment.value - total.value).toFixed(2);\r\n          Swal.fire({\r\n            title: 'Success!',\r\n            text: 'Transaction successful.',\r\n            icon: 'success',\r\n            timer: 1500,\r\n            showConfirmButton: false,\r\n          });\r\n\r\n          cart.value = [];\r\n          subtotal.value = 0;\r\n          discount.value = 0;\r\n          clientPayment.value = null;\r\n          paymentError.value = null;\r\n          closeAllModals();\r\n        } else {\r\n          paymentError.value = response.data.message || \"Failed to process transaction.\";\r\n        }\r\n      } catch (error) {\r\n        paymentError.value = \"An error occurred while processing the payment.\";\r\n      }\r\n    };\r\n\r\n    // Lifecycle Hooks\r\n    onMounted(() => {\r\n      getCategories();\r\n      barcodeInput.value?.focus();\r\n      window.addEventListener('keydown', handleKeydown);\r\n    });\r\n\r\n    onBeforeUnmount(() => {\r\n      window.removeEventListener('keydown', handleKeydown);\r\n    });\r\n\r\n    return {\r\n      selectedCategory,\r\n      barcode,\r\n      barcodeInput,\r\n      cart,\r\n      categories,\r\n      subtotal,\r\n      VAT,\r\n      discount,\r\n      total,\r\n      barcodeError,\r\n      paymentError,\r\n      lastAddedProduct,\r\n      stockQuantity,\r\n      newQuantity,\r\n      quantityError,\r\n      addProduct,\r\n      updateSubtotal,\r\n      openModal,\r\n      modalState,\r\n      change,\r\n      clientPayment,\r\n      processPayment,\r\n      imgURL,\r\n      transactionId,\r\n      transactionError,\r\n      returnItems,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n\r\n\r\n\r\n<style scoped>\r\n/* Container for the product display */\r\n.tabs_container {\r\n  min-height: 620px;\r\n  max-height: 620px;\r\n  overflow-y: auto;\r\n  background: #fff;\r\n  padding: 20px;\r\n\r\n}\r\n\r\n/* Flex container for product display */\r\n.tab_content {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 1rem;\r\n  /* Space between items */\r\n  justify-content: space-between;\r\n}\r\n\r\n/* Ensure product-info fits within columns properly */\r\n.product-info {\r\n  position: relative;\r\n  padding: 15px;\r\n  background: #f9f9f9;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  transition: transform 0.2s ease-in-out;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  /* Optional shadow */\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  /* Flex to ensure each card takes equal width */\r\n  flex: 1 1 calc(33.33% - 1rem);\r\n  /* Default to 3 items per row */\r\n  height: 100%;\r\n\r\n}\r\n\r\n.product-info img {\r\n  width: 100%;\r\n  height: 150px;\r\n  /* Fixed height for images */\r\n  object-fit: cover;\r\n  /* Ensure images cover the area proportionally */\r\n}\r\n\r\n.product-info:hover {\r\n  transform: scale(1.05);\r\n  /* Slight zoom effect on hover */\r\n}\r\n\r\n/* Mobile and tablet adjustments for card layout */\r\n@media (max-width: 1200px) {\r\n  .product-info {\r\n    flex: 1 1 calc(25% - 1rem);\r\n    /* 4 items per row for large screens */\r\n    height: 300px;\r\n    /* Set height for large screens */\r\n  }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .product-info {\r\n    flex: 1 1 calc(33.33% - 1rem);\r\n    /* 3 items per row for medium screens */\r\n    height: 250px;\r\n    /* Adjust height for medium screens */\r\n  }\r\n}\r\n\r\n@media (max-width: 576px) {\r\n  .product-info {\r\n    flex: 1 1 calc(50% - 1rem);\r\n    /* 2 items per row for small screens */\r\n    height: 200px;\r\n    /* Adjust height for small screens */\r\n  }\r\n}\r\n\r\n/* Category List Styling */\r\n.category-list {\r\n  padding: 15px;\r\n  background-color: #f9f9f9;\r\n  border-right: 1px solid #ddd;\r\n}\r\n\r\n.category-list ul {\r\n  list-style-type: none;\r\n  padding-left: 0;\r\n}\r\n\r\n.category-list li {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.category-list a {\r\n  text-decoration: none;\r\n  color: #333;\r\n  font-size: 16px;\r\n  padding: 8px 10px;\r\n  border-radius: 4px;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.category-list a:active {\r\n  color: #fff;\r\n}\r\n\r\n.category-list a:hover {\r\n  color: #fff;\r\n\r\n}\r\n\r\n.list-group-item.active {\r\n  background-color: #22A95E;\r\n  /* Green background for active list item */\r\n  border-color: #22A95E;\r\n  /* Optional: Match border with the active color */\r\n}\r\n\r\n.list-group-item.active a {\r\n  color: #fff;\r\n  /* Make the text white inside the active list item */\r\n}\r\n\r\n/* Keyboard Key Styling for the UI */\r\n.keyboard-key {\r\n  position: absolute;\r\n  top: 5px;\r\n  left: 5px;\r\n  font-size: 12px;\r\n  background-color: rgba(0, 0, 0, 0.1);\r\n  color: white;\r\n  padding: 5px 8px;\r\n  border-radius: 4px;\r\n  font-family: 'Courier New', monospace;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.product-wrap {\r\n  max-height: 100%;\r\n\r\n  overflow: hidden;\r\n\r\n}\r\n\r\n.table {\r\n  width: 100%;\r\n  table-layout: auto;\r\n  word-wrap: break-word;\r\n\r\n}\r\n\r\n.table th,\r\n.table td {\r\n  white-space: normal;\r\n\r\n  word-break: break-word;\r\n\r\n  text-align: left;\r\n\r\n}\r\n\r\n.product-name-cell {\r\n  max-width: 200px;\r\n  /* Adjust as needed for column width */\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  /* Optional: adds \"...\" for long text */\r\n  white-space: normal;\r\n}\r\n\r\n.quantity-input {\r\n  width: 50px;\r\n  /* Ensures quantity input field doesn't take too much space */\r\n  text-align: center;\r\n}\r\n\r\n.no-products-message {\r\n  display: flex;\r\n  justify-content: center;\r\n  /* Center horizontally */\r\n  align-items: center;\r\n  /* Center vertically */\r\n  height: 200px;\r\n  /* Adjust the height as needed */\r\n  text-align: center;\r\n  /* Center the text */\r\n  font-size: 18px;\r\n  /* Optional: Adjust the font size */\r\n  color: #777;\r\n  /* Optional: Set a color for the text */\r\n}\r\n.category-list ul::-webkit-scrollbar {\r\n  width: 8px;\r\n}\r\n\r\n.category-list ul::-webkit-scrollbar-thumb {\r\n  background-color: #ccc;\r\n  border-radius: 4px;\r\n}\r\n\r\n.category-list ul::-webkit-scrollbar-thumb:hover {\r\n  background-color: #aaa;\r\n}\r\n</style>\r\n"],"mappings":";;;;;AA0TA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,eAAc,QAAS,KAAK;AAC/D,OAAOC,KAAI,MAAO,OAAO;AACzB,OAAOC,IAAG,MAAO,aAAa;AAE9B,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIC,OAAO,CAACC,GAAG,CAACC,WAAW;IACtC,MAAMC,MAAK,GAAIH,OAAO,CAACC,GAAG,CAACG,iBAAiB;;IAE5C;IACA,MAAMC,gBAAe,GAAIb,GAAG,CAAC,KAAK,CAAC;IACnC,MAAMc,OAAM,GAAId,GAAG,CAAC,EAAE,CAAC;IACvB,MAAMe,YAAW,GAAIf,GAAG,CAAC,IAAI,CAAC;IAC9B,MAAMgB,IAAG,GAAIhB,GAAG,CAAC,EAAE,CAAC;IACpB,MAAMiB,UAAS,GAAIjB,GAAG,CAAC,EAAE,CAAC;IAC1B,MAAMkB,QAAO,GAAIlB,GAAG,CAAC,CAAC,CAAC;IACvB,MAAMmB,GAAE,GAAInB,GAAG,CAAC,EAAE,CAAC;IACnB,MAAMoB,QAAO,GAAIpB,GAAG,CAAC,CAAC,CAAC;IACvB,MAAMqB,YAAW,GAAIrB,GAAG,CAAC,IAAI,CAAC;IAC9B,MAAMsB,YAAW,GAAItB,GAAG,CAAC,IAAI,CAAC;IAC9B,MAAMuB,gBAAe,GAAIvB,GAAG,CAAC,IAAI,CAAC;IAClC,MAAMwB,aAAY,GAAIxB,GAAG,CAAC,IAAI,CAAC;IAC/B,MAAMyB,WAAU,GAAIzB,GAAG,CAAC,CAAC,CAAC;IAC1B,MAAM0B,aAAY,GAAI1B,GAAG,CAAC,IAAI,CAAC;IAC/B,MAAM2B,MAAK,GAAI3B,GAAG,CAAC,IAAI,CAAC;IACxB,MAAM4B,aAAY,GAAI5B,GAAG,CAAC,IAAI,CAAC;IAC/B,MAAM6B,QAAO,GAAI7B,GAAG,CAAC,EAAE,CAAC;IACxB,MAAM8B,aAAY,GAAI9B,GAAG,CAAC,EAAE,CAAC;IAC7B,MAAM+B,gBAAe,GAAI/B,GAAG,CAAC,IAAI,CAAC;IAClC,MAAMgC,WAAU,GAAIhC,GAAG,CAAC,EAAE,CAAC;IAE3B,MAAMiC,UAAS,GAAIjC,GAAG,CAAC;MACrBkC,aAAa,EAAE,KAAK;MACpBC,cAAc,EAAE,KAAK;MACrBC,YAAY,EAAE,KAAK;MACnBC,UAAU,EAAE;IACd,CAAC,CAAC;;IAEF;IACA,MAAMC,KAAI,GAAIrC,QAAQ,CAAC,MACrBiB,QAAQ,CAACqB,KAAI,GAAKrB,QAAQ,CAACqB,KAAI,GAAIpB,GAAG,CAACoB,KAAK,GAAI,GAAE,GAAInB,QAAQ,CAACmB,KACjE,CAAC;;IAED;IACA,MAAMC,aAAY,GAAI,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMrC,KAAK,CAACsC,GAAG,CAAC,GAAGnC,MAAM,oBAAoB,CAAC;QAC/DU,UAAU,CAACsB,KAAI,GAAIE,QAAQ,CAACE,IAAI,CAAC1B,UAAU;MAC7C,EAAE,OAAO2B,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAED,MAAME,qBAAoB,GAAI,MAAOC,YAAY,IAAK;MACpD,IAAI;QACF,MAAMN,QAAO,GAAI,MAAMrC,KAAK,CAACsC,GAAG,CAAC,GAAGnC,MAAM,6BAA6BwC,YAAY,EAAE,CAAC;QACtFlB,QAAQ,CAACU,KAAI,GAAIE,QAAQ,CAACE,IAAI,CAACd,QAAQ;MACzC,EAAE,OAAOe,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAED,MAAMI,UAAS,GAAI,MAAAA,CAAOC,OAAM,GAAI,IAAI,KAAK;MAC3C,IAAI;QACFtB,MAAM,CAACY,KAAI,GAAI,IAAI;QAEnB,IAAI,CAACU,OAAM,IAAKnC,OAAO,CAACyB,KAAK,CAACW,IAAI,CAAC,CAAC,EAAE;UACpC,MAAMT,QAAO,GAAI,MAAMrC,KAAK,CAACsC,GAAG,CAAC,GAAGnC,MAAM,qBAAqBO,OAAO,CAACyB,KAAK,CAACW,IAAI,CAAC,CAAC,EAAE,CAAC;UACtF,IAAIT,QAAQ,CAACE,IAAI,CAACQ,OAAO,EAAE;YACzBF,OAAM,GAAIR,QAAQ,CAACE,IAAI,CAACM,OAAO;YAC/B5B,YAAY,CAACkB,KAAI,GAAI,IAAI;UAC3B,OAAO;YACLlB,YAAY,CAACkB,KAAI,GAAIE,QAAQ,CAACE,IAAI,CAACS,OAAM,IAAK,oBAAoB;YAClE;UACF;QACF;QAEA,IAAIH,OAAO,EAAE;UACX1B,gBAAgB,CAACgB,KAAI,GAAIU,OAAO;UAChCzB,aAAa,CAACe,KAAI,GAAIU,OAAO,CAACI,QAAQ;UAEtC,MAAMC,YAAW,GAAItC,IAAI,CAACuB,KAAK,CAACgB,IAAI,CAACC,IAAG,IAAKA,IAAI,CAACC,GAAE,KAAMR,OAAO,CAACQ,GAAG,CAAC;UAEtE,IAAIH,YAAY,EAAE;YAChB,IAAIA,YAAY,CAACD,QAAO,GAAI,KAAK7B,aAAa,CAACe,KAAK,EAAE;cACpDe,YAAY,CAACD,QAAQ,EAAE;YACzB,OAAO;cACLhC,YAAY,CAACkB,KAAI,GAAI,6BAA6BU,OAAO,CAACS,IAAI,GAAG;YACnE;UACF,OAAO;YACL,IAAIlC,aAAa,CAACe,KAAI,GAAI,CAAC,EAAE;cAC3BvB,IAAI,CAACuB,KAAK,CAACoB,IAAI,CAAC;gBAAE,GAAGV,OAAO;gBAAEI,QAAQ,EAAE;cAAE,CAAC,CAAC;YAC9C,OAAO;cACLhC,YAAY,CAACkB,KAAI,GAAI,0BAA0BU,OAAO,CAACS,IAAI,GAAG;YAChE;UACF;UAEAE,cAAc,CAAC,CAAC;QAClB;MACF,EAAE,OAAOhB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7CvB,YAAY,CAACkB,KAAI,GAAI,+CAA+C;MACtE,UAAU;QACRzB,OAAO,CAACyB,KAAI,GAAI,EAAE;MACpB;IACF,CAAC;IAED,MAAMqB,cAAa,GAAIA,CAAA,KAAM;MAC3B1C,QAAQ,CAACqB,KAAI,GAAIvB,IAAI,CAACuB,KAAK,CAACsB,MAAM,CAAC,CAACC,GAAG,EAAEN,IAAI,KAAKM,GAAE,GAAIN,IAAI,CAACH,QAAO,GAAIG,IAAI,CAACO,KAAK,EAAE,CAAC,CAAC;IACxF,CAAC;;IAED;IACA,MAAMC,SAAQ,GAAKC,SAAS,IAAK;MAC/BC,cAAc,CAAC,CAAC;MAChBjC,UAAU,CAACM,KAAK,CAAC0B,SAAS,IAAI,IAAI;MAClCE,UAAU,CAAC,MAAM;QACf,MAAMC,YAAW,GAAIC,QAAQ,CAACC,aAAa,CAAC,IAAIL,SAAS,QAAQ,CAAC;QAClE,IAAIG,YAAY,EAAE;UAChB,MAAMG,aAAY,GAAI,IAAIC,SAAS,CAACC,KAAK,CAACL,YAAY,CAAC;UACvDG,aAAa,CAACG,IAAI,CAAC,CAAC;UAEpBN,YAAY,CAACO,gBAAgB,CAAC,gBAAgB,EAAE,MAAM;YACpD,MAAMC,UAAS,GAAIR,YAAY,CAACE,aAAa,CAAC,OAAO,CAAC;YACtD,IAAIM,UAAU,EAAEA,UAAU,CAACC,KAAK,CAAC,CAAC;UACpC,CAAC,CAAC;QACJ;MACF,CAAC,EAAE,GAAG,CAAC;IACT,CAAC;IAED,MAAMX,cAAa,GAAIA,CAAA,KAAM;MAC3B,KAAK,IAAIY,GAAE,IAAK7C,UAAU,CAACM,KAAK,EAAE;QAChCN,UAAU,CAACM,KAAK,CAACuC,GAAG,IAAI,KAAK;MAC/B;IACF,CAAC;IAED,MAAMC,aAAY,GAAKC,KAAK,IAAK;MAC/B,QAAQA,KAAK,CAACF,GAAG;QACf,KAAK,IAAI;UACPE,KAAK,CAACC,cAAc,CAAC,CAAC;UACtB,IAAI3C,KAAK,CAACC,KAAI,GAAI,CAAC,EAAEyB,SAAS,CAAC,eAAe,CAAC;UAC/C;QACF,KAAK,IAAI;UACPgB,KAAK,CAACC,cAAc,CAAC,CAAC;UACtBjB,SAAS,CAAC,YAAY,CAAC;UACvB;QACF,KAAK,IAAI;UACPgB,KAAK,CAACC,cAAc,CAAC,CAAC;UACtBjB,SAAS,CAAC,cAAc,CAAC;UACzB;QACF,KAAK,GAAG;UACNgB,KAAK,CAACC,cAAc,CAAC,CAAC;UACtBjB,SAAS,CAAC,gBAAgB,CAAC;UAC3B;QACF,KAAK,QAAQ;UACXjD,YAAY,CAACwB,KAAK,EAAEsC,KAAK,CAAC,CAAC;UAC3B;QACF;UACE;MACJ;IACF,CAAC;IAED,MAAMK,cAAa,GAAI,MAAAA,CAAA,KAAY;MACjC,IAAItD,aAAa,CAACW,KAAI,KAAM,IAAG,IAAKX,aAAa,CAACW,KAAI,GAAID,KAAK,CAACC,KAAK,EAAE;QACrEjB,YAAY,CAACiB,KAAI,GAAI,6BAA6BD,KAAK,CAACC,KAAK,GAAG;QAChE;MACF;MAEA,IAAI;QACF,MAAM4C,eAAc,GAAI;UACtBnE,IAAI,EAAEA,IAAI,CAACuB,KAAK,CAAC6C,GAAG,CAAC5B,IAAG,KAAM;YAC5BC,GAAG,EAAED,IAAI,CAACC,GAAG;YACb4B,GAAG,EAAE7B,IAAI,CAAC6B,GAAG;YACb3B,IAAI,EAAEF,IAAI,CAACE,IAAI;YACfK,KAAK,EAAEP,IAAI,CAACO,KAAK;YACjBzB,KAAK,EAAEkB,IAAI,CAAClB,KAAK;YACjBe,QAAQ,EAAEG,IAAI,CAACH;UACjB,CAAC,CAAC,CAAC;UACHiC,aAAa,EAAE,MAAM;UACrBC,SAAS,EAAEnE,QAAQ,CAACmB,KAAK;UACzBiD,SAAS,EAAEtE,QAAQ,CAACqB,KAAK;UACzBpB,GAAG,EAAGD,QAAQ,CAACqB,KAAI,GAAIpB,GAAG,CAACoB,KAAK,GAAI,GAAG;UACvCkD,WAAW,EAAEnD,KAAK,CAACC,KAAK;UACxBmD,IAAI,EAAE9D,aAAa,CAACW,KAAK;UACzBZ,MAAM,EAAEA,MAAM,CAACY,KAAK;UACpBoD,MAAM,EAAE,WAAW;UACnBC,QAAQ,EAAE;QACZ,CAAC;QAED,MAAMnD,QAAO,GAAI,MAAMrC,KAAK,CAACyF,IAAI,CAAC,GAAGtF,MAAM,qBAAqB,EAAE4E,eAAe,CAAC;QAElF,IAAI1C,QAAQ,CAACE,IAAI,CAACQ,OAAO,EAAE;UACzBxB,MAAM,CAACY,KAAI,GAAI,CAACX,aAAa,CAACW,KAAI,GAAID,KAAK,CAACC,KAAK,EAAEuD,OAAO,CAAC,CAAC,CAAC;UAC7DzF,IAAI,CAAC0F,IAAI,CAAC;YACRC,KAAK,EAAE,UAAU;YACjBC,IAAI,EAAE,yBAAyB;YAC/BC,IAAI,EAAE,SAAS;YACfC,KAAK,EAAE,IAAI;YACXC,iBAAiB,EAAE;UACrB,CAAC,CAAC;UAEFpF,IAAI,CAACuB,KAAI,GAAI,EAAE;UACfrB,QAAQ,CAACqB,KAAI,GAAI,CAAC;UAClBnB,QAAQ,CAACmB,KAAI,GAAI,CAAC;UAClBX,aAAa,CAACW,KAAI,GAAI,IAAI;UAC1BjB,YAAY,CAACiB,KAAI,GAAI,IAAI;UACzB2B,cAAc,CAAC,CAAC;QAClB,OAAO;UACL5C,YAAY,CAACiB,KAAI,GAAIE,QAAQ,CAACE,IAAI,CAACS,OAAM,IAAK,gCAAgC;QAChF;MACF,EAAE,OAAOR,KAAK,EAAE;QACdtB,YAAY,CAACiB,KAAI,GAAI,iDAAiD;MACxE;IACF,CAAC;;IAED;IACArC,SAAS,CAAC,MAAM;MACdsC,aAAa,CAAC,CAAC;MACfzB,YAAY,CAACwB,KAAK,EAAEsC,KAAK,CAAC,CAAC;MAC3BwB,MAAM,CAAC1B,gBAAgB,CAAC,SAAS,EAAEI,aAAa,CAAC;IACnD,CAAC,CAAC;IAEF5E,eAAe,CAAC,MAAM;MACpBkG,MAAM,CAACC,mBAAmB,CAAC,SAAS,EAAEvB,aAAa,CAAC;IACtD,CAAC,CAAC;IAEF,OAAO;MACLlE,gBAAgB;MAChBC,OAAO;MACPC,YAAY;MACZC,IAAI;MACJC,UAAU;MACVC,QAAQ;MACRC,GAAG;MACHC,QAAQ;MACRkB,KAAK;MACLjB,YAAY;MACZC,YAAY;MACZC,gBAAgB;MAChBC,aAAa;MACbC,WAAW;MACXC,aAAa;MACbsB,UAAU;MACVY,cAAc;MACdI,SAAS;MACT/B,UAAU;MACVN,MAAM;MACNC,aAAa;MACbsD,cAAc;MACdvE,MAAM;MACNmB,aAAa;MACbC,gBAAgB;MAChBC;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}