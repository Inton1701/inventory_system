{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport { ref, onMounted, onBeforeUnmount, computed, nextTick } from 'vue';\nimport axios from 'axios';\nimport 'select2';\nimport feather from 'feather-icons';\nimport ClipLoader from 'vue-spinner/src/ClipLoader.vue';\nimport Swal from 'sweetalert2';\nimport Sidebar from '/src/components/Admin/Sidebar.vue';\nimport Navbar from '/src/components/Admin/Navbar.vue';\nimport $ from 'jquery';\nexport default {\n  components: {\n    Sidebar,\n    Navbar,\n    ClipLoader\n  },\n  setup() {\n    const apiURL = process.env.VUE_APP_URL;\n    const imageURL = process.env.VUE_IMAGE_URL;\n    const products = ref([]);\n    const lowStocks = ref([]);\n    const outOfStock = ref([]);\n    const history = ref([]);\n    const select = ref(null);\n    const editProductData = ref({});\n    const selectedProductId = ref(null);\n    const entryValue = ref(null);\n    const newQuantityAlert = ref(0);\n    const activeTab = ref('low');\n    const tableInstance = ref(null);\n    const loadingStates = ref({\n      all: false,\n      low: false,\n      out: false,\n      history: false\n    });\n    onMounted(() => {\n      // Fetch data for the active tab on \n      setTimeout(() => {\n        const activeTabData = tabs.find(tab => tab.key === activeTab.value);\n        if (activeTabData && activeTabData.fetch) {\n          activeTabData.fetch();\n        }\n      }, 1000);\n    });\n    onBeforeUnmount(() => {\n      // Destroy DataTable instance on component unmount\n\n      if (tableInstance.value) {\n        tableInstance.value.destroy();\n      }\n    });\n    const tabs = [{\n      key: 'all',\n      label: 'All Stocks',\n      fetch: () => fetchStock('products_list', products)\n    }, {\n      key: 'low',\n      label: 'Low Stocks',\n      fetch: () => fetchStock('low_stocks', lowStocks)\n    }, {\n      key: 'out',\n      label: 'Out of Stocks',\n      fetch: () => fetchStock('no_stock', outOfStock)\n    },\n    // Changed here\n    {\n      key: 'history',\n      label: 'History',\n      fetch: () => fetchStock('stock_history_list', history)\n    }];\n\n    // Function to get products from the API\n    const fetchStock = async (endpoint, stateVariable) => {\n      loadingStates.value[activeTab.value] = true;\n      try {\n        const response = await axios.get(`${apiURL}/${endpoint}`);\n        console.log(`${endpoint} response:`, response.data);\n\n        // Check for the endpoint and populate the appropriate state variable\n        if (endpoint === 'stock_history_list') {\n          history.value = response.data.history;\n        } else if (endpoint === 'products_list') {\n          products.value = response.data.products;\n        } else if (endpoint === 'low_stocks') {\n          lowStocks.value = response.data.lowStock;\n        } else if (endpoint === 'out_of_stock') {\n          outOfStock.value = response.data.noStock;\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Error',\n          text: 'Failed to fetch products. Please try again later.'\n        });\n      } finally {\n        loadingStates.value[activeTab.value] = false;\n      }\n    };\n    const changeTab = async key => {\n      activeTab.value = key;\n      const selectedTab = tabs.find(tab => tab.key === key);\n      if (selectedTab && selectedTab.fetch) {\n        await selectedTab.fetch();\n      }\n\n      // Initialize DataTable after the DOM is updated\n      nextTick(() => {\n        initializeDataTable();\n      });\n    };\n    const filteredProducts = computed(() => {\n      console.log('Active Tab:', activeTab.value); // Log active tab\n      console.log('Filtered Products:', filteredProducts.value); // Log filtered products\n      if (activeTab.value === 'all') return products.value;\n      if (activeTab.value === 'low') return lowStocks.value;\n      if (activeTab.value === 'out') return outOfStock.value;\n      if (activeTab.value === 'history') return history.value;\n      return [];\n    });\n    const openEditStockModal = async productId => {\n      try {\n        entryValue.value = 0;\n        newQuantityAlert.value = 0;\n        const response = await axios.get(`${apiURL}/get_product/${productId}`);\n        editProductData.value = response.data.product;\n        newQuantityAlert.value = editProductData.value.quantityAlert;\n        selectedProductId.value = editProductData.value._id;\n        const modal = new bootstrap.Modal(document.getElementById('edit-stock'));\n        modal.show();\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Something Went wrong',\n          showConfirmButton: true\n        });\n      }\n    };\n    const initializeDataTable = () => {\n      nextTick(() => {\n        // Check if the active tab corresponds to the correct table\n        const tableSelector = activeTab.value === 'history' ? '#history-table' // Target the history tab table\n        : '#other-table'; // Target other tables\n\n        const tableElement = document.querySelector(tableSelector);\n\n        // If the table does not exist in the DOM, skip DataTable initialization\n        if (!tableElement) {\n          return;\n        }\n        if (tableInstance.value) {\n          tableInstance.value.destroy();\n        }\n\n        // Initialize DataTable\n        tableInstance.value = $(tableSelector).DataTable({\n          paging: true,\n          searching: true,\n          info: true,\n          autoWidth: false,\n          responsive: true,\n          language: {\n            emptyTable: 'No data available for this tab.'\n          }\n        });\n      });\n    };\n    const editStock = async () => {\n      try {\n        const payload = {\n          entryValue: Number(entryValue.value),\n          quantityAlert: Number(newQuantityAlert.value)\n        };\n        const response = await axios.patch(`${apiURL}/edit_stock/${editProductData.value._id}`, payload);\n        if (response.data.success) {\n          const result = await Swal.fire({\n            icon: 'success',\n            title: response.data.message,\n            showConfirmButton: true\n          });\n          if (result.isConfirmed) {\n            document.querySelector('#edit-stock .btn-cancel').click();\n          }\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: response.data.message,\n            showConfirmButton: true\n          });\n        }\n      } catch (error) {\n        console.error('Error updating stock:', error);\n        Swal.fire({\n          icon: 'error',\n          title: 'Failed to update stock.',\n          showConfirmButton: true\n        });\n      } finally {\n        fetchStockForCurrentTab();\n      }\n    };\n    const fetchStockForCurrentTab = async () => {\n      if (activeTab.value === 'all') {\n        await fetchStock('products_list', products);\n      } else if (activeTab.value === 'low') {\n        await fetchStock('low_stocks', lowStocks);\n      } else if (activeTab.value === 'out') {\n        await fetchStock('no_stock', outOfStock);\n      } else if (activeTab.value === 'history') {\n        await fetchStock('stock_history_list', history);\n      }\n    };\n    const deleteAlert = async productId => {\n      const {\n        value: result\n      } = await Swal.fire({\n        title: 'Delete Product',\n        text: \"You won't be able to revert this!\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes, delete it!'\n      });\n      if (result) {\n        try {\n          const response = await axios.patch(`${apiURL}/edit_products/${productId}`, {\n            status: 'deleted'\n          });\n          if (response.data.success) {\n            Swal.fire('Deleted!', 'Your product has been deleted.', 'success');\n            this.products = this.products.filter(product => product._id !== productId);\n          } else {\n            Swal.fire('Failed', 'There was an issue deleting the product.', 'error');\n          }\n        } catch (error) {\n          Swal.fire('Error', 'Failed to delete the product.', 'error');\n        }\n      } else {\n        Swal.fire('Cancelled', 'Your product is safe :)', 'error');\n      }\n    };\n    return {\n      products,\n      select,\n      lowStocks,\n      outOfStock,\n      history,\n      selectedProductId,\n      openEditStockModal,\n      editProductData,\n      editStock,\n      entryValue,\n      newQuantityAlert,\n      activeTab,\n      changeTab,\n      filteredProducts,\n      tabs,\n      loadingStates,\n      apiURL,\n      imageURL,\n      deleteAlert\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","onBeforeUnmount","computed","nextTick","axios","feather","ClipLoader","Swal","Sidebar","Navbar","$","components","setup","apiURL","process","env","VUE_APP_URL","imageURL","VUE_IMAGE_URL","products","lowStocks","outOfStock","history","select","editProductData","selectedProductId","entryValue","newQuantityAlert","activeTab","tableInstance","loadingStates","all","low","out","setTimeout","activeTabData","tabs","find","tab","key","value","fetch","destroy","label","fetchStock","endpoint","stateVariable","response","get","console","log","data","lowStock","noStock","error","fire","icon","title","text","changeTab","selectedTab","initializeDataTable","filteredProducts","openEditStockModal","productId","product","quantityAlert","_id","modal","bootstrap","Modal","document","getElementById","show","showConfirmButton","tableSelector","tableElement","querySelector","DataTable","paging","searching","info","autoWidth","responsive","language","emptyTable","editStock","payload","Number","patch","success","result","message","isConfirmed","click","fetchStockForCurrentTab","deleteAlert","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","status","filter"],"sources":["C:\\Users\\Administrator\\OneDrive\\Desktop\\POSExpress\\frontend\\src\\components\\Admin\\Inventory\\ManageStocks.vue"],"sourcesContent":["<template>\r\n    <Navbar />\r\n\r\n    <div class=\"page-wrapper\">\r\n        <div class=\"content\">\r\n            <div class=\"page-header\">\r\n                <div class=\"page-title me-auto\">\r\n                    <h4>Manage Stocks</h4>\r\n                </div>\r\n                <ul class=\"table-top-head low-stock-top-head\">\r\n                    <li>\r\n                        <div class=\"status-toggle d-flex justify-content-between align-items-center\">\r\n                            <input type=\"checkbox\" id=\"user2\" class=\"check\" checked />\r\n                            <label for=\"user2\" class=\"checktoggle\">checkbox</label>\r\n                            Notify\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        <a data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Pdf\"><img\r\n                                src=\"/assets/img/icons/pdf.svg\" alt=\"img\" /></a>\r\n                    </li>\r\n                    <li>\r\n                        <a data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Excel\"><img\r\n                                src=\"/assets/img/icons/excel.svg\" alt=\"img\" /></a>\r\n                    </li>\r\n                    <li>\r\n                        <a data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Print\"><i data-feather=\"printer\"\r\n                                class=\"feather-rotate-ccw\"></i></a>\r\n                    </li>\r\n                    <li>\r\n                        <a data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Refresh\"><i data-feather=\"rotate-ccw\"\r\n                                class=\"feather-rotate-ccw\"></i></a>\r\n                    </li>\r\n                    <li>\r\n                        <a data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Collapse\" id=\"collapse-header\"><i\r\n                                data-feather=\"chevron-up\" class=\"feather-chevron-up\"></i></a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div class=\"table-tab\">\r\n                <ul class=\"nav nav-pills\" id=\"pills-tab\" role=\"tablist\">\r\n                    <li v-for=\"(tab, index) in tabs\" :key=\"index\" class=\"nav-item\" role=\"presentation\">\r\n                        <button class=\"nav-link\" :class=\"{ active: activeTab === tab.key }\" :id=\"`pills-${tab.key}-tab`\"\r\n                            type=\"button\" @click=\"changeTab(tab.key)\">\r\n                            {{ tab.label }}\r\n                        </button>\r\n                    </li>\r\n                </ul>\r\n                <div class=\"tab-content\" id=\"pills-tabContent\">\r\n                    <div class=\"tab-pane fade show active\" id=\"pills-table\" role=\"tabpanel\">\r\n                        <div class=\"card table-list-card\">\r\n                            <div class=\"card-body\">\r\n                                <ClipLoader v-if=\"loading\" />\r\n                                <ClipLoader v-if=\"loadingStates[activeTab]\" />\r\n\r\n\r\n                                <div class=\"table-responsive\" v-show=\"activeTab === 'history'\">\r\n                                    <table id=\"history-table\" class=\"table\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>SKU</th>\r\n                                                <th>Product Name</th>\r\n                                                <th>Previous Stock</th>\r\n                                                <th>Changes</th>\r\n                                                <th>New Stock</th>\r\n                                                <th>Updated At</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr v-for=\"record in history\" :key=\"record._id\">\r\n                                                <td>{{ record.sku }}</td>\r\n                                                <td>{{ record.product }}</td>\r\n                                                <td>{{ record.prevStock }}</td>\r\n                                                <td>{{ record.change }}</td>\r\n                                                <td>{{ record.newStock }}</td>\r\n                                                <td>{{ $formatDate(record.updatedAt) }}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n\r\n                                <div class=\"table-responsive\" v-show=\"activeTab !== 'history'\">\r\n                                    <table id=\"other-table\" class=\"table\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>SKU</th>\r\n                                                <th>Product Name</th>\r\n                                                <th>Category</th>\r\n                                                <th>Status</th>\r\n                                                <th>Created On</th>\r\n                                                <th>Last Restock</th>\r\n                                                <th>Qty</th>\r\n                                                <th>Qty Alert</th>\r\n                                                <th class=\"no-sort\">Modify</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr v-for=\"product in filteredProducts\" :key=\"product._id\">\r\n                                                <td>{{ product.sku }}</td>\r\n                                                <td>{{ product.name }}</td>\r\n                                                <td>{{ product.category }}</td>\r\n                                                <td>\r\n                                                    <span :class=\"{\r\n                                                        'badge': true,\r\n                                                        'badge-linesuccess': product.status === 'active',\r\n                                                        'badge-linewarning': product.status === 'inactive'\r\n                                                    }\">\r\n                                                        {{ product.status }}\r\n                                                    </span>\r\n                                                </td>\r\n                                                <td>{{ $formatDate(product.updatedAt) }}</td>\r\n                                                <td>{{ $formatDate(product.lastRestock) }}</td>\r\n                                                <td>{{ product.quantity }}</td>\r\n                                                <td>{{ product.quantityAlert }}</td>\r\n                                                <td class=\"action-table-data\">\r\n                                                    <div class=\"edit-delete-action\">\r\n                                                        <a @click=\"openEditStockModal(product._id)\" class=\"me-2 p-2\"\r\n                                                            type=\"button\">\r\n                                                            <font-awesome-icon icon=\"fa-pen-to-square\"\r\n                                                                class=\"feather-edit\" />\r\n                                                        </a>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- Modal -->\r\n    <div class=\"modal fade\" id=\"edit-stock\">\r\n        <div class=\"modal-dialog modal-dialog-centered custom-modal-two\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"page-wrapper-new p-0\">\r\n                    <div class=\"content\">\r\n                        <div class=\"modal-header border-0 custom-modal-header\">\r\n                            <div class=\"page-title\">\r\n                                <h4>Edit Stocks</h4>\r\n                            </div>\r\n                            <button type=\"button\" class=\"close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div v-if=\"editProductData\" class=\"modal-body custom-modal-body\">\r\n                            <form @submit.prevent=\"editStock\">\r\n                                <input type=\"hidden\" input=\"\">\r\n                                <p>Product SKU: {{ editProductData.sku }}</p>\r\n                                <p>Note: use (-) to deduct stock, e.g., -5</p>\r\n                                <div class=\"mb-3\">\r\n                                    <label class=\"form-label\">Qty</label>\r\n                                    <input type=\"number\" v-model=\"entryValue\" class=\"form-control\" placeholder=\"0\"\r\n                                        required />\r\n                                </div>\r\n                                <div class=\"mb-3\">\r\n                                    <label class=\"form-label\">Qty Alert</label>\r\n                                    <input type=\"number\" v-model=\"newQuantityAlert\" class=\"form-control\"\r\n                                        placeholder=\"0\" />\r\n                                </div>\r\n                                <div class=\"modal-footer-btn\">\r\n                                    <button type=\"button\" class=\"btn btn-cancel me-2\"\r\n                                        data-bs-dismiss=\"modal\">Cancel</button>\r\n                                    <button type=\"submit\" class=\"btn btn-submit\">Save Changes</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { ref, onMounted, onBeforeUnmount, computed, nextTick } from 'vue';\r\nimport axios from 'axios';\r\nimport 'select2';\r\nimport feather from 'feather-icons';\r\nimport ClipLoader from 'vue-spinner/src/ClipLoader.vue';\r\nimport Swal from 'sweetalert2';\r\nimport Sidebar from '/src/components/Admin/Sidebar.vue';\r\nimport Navbar from '/src/components/Admin/Navbar.vue';\r\nimport $ from 'jquery';\r\n\r\nexport default {\r\n    components: {\r\n        Sidebar,\r\n        Navbar,\r\n        ClipLoader,\r\n    },\r\n    setup() {\r\n        const apiURL = process.env.VUE_APP_URL;\r\n        const imageURL = process.env.VUE_IMAGE_URL;\r\n        const products = ref([]);\r\n        const lowStocks = ref([]);\r\n        const outOfStock = ref([]);\r\n        const history = ref([]);\r\n        const select = ref(null);\r\n        const editProductData = ref({});\r\n        const selectedProductId = ref(null);\r\n        const entryValue = ref(null);\r\n        const newQuantityAlert = ref(0);\r\n        const activeTab = ref('low');\r\n        const tableInstance = ref(null);\r\n        const loadingStates = ref({\r\n            all: false,\r\n            low: false,\r\n            out: false,\r\n            history: false,\r\n        });\r\n        onMounted(() => {\r\n\r\n  // Fetch data for the active tab on \r\n  setTimeout(() => {\r\n  const activeTabData = tabs.find(tab => tab.key === activeTab.value);\r\n  if (activeTabData && activeTabData.fetch) {\r\n    activeTabData.fetch();\r\n  }},1000)\r\n});\r\n\r\n        onBeforeUnmount(() => {\r\n            // Destroy DataTable instance on component unmount\r\n    \r\n            if (tableInstance.value) {\r\n                tableInstance.value.destroy();\r\n            }\r\n        });\r\n\r\n        const tabs = [\r\n    { key: 'all', label: 'All Stocks', fetch: () => fetchStock('products_list', products) },\r\n    { key: 'low', label: 'Low Stocks', fetch: () => fetchStock('low_stocks', lowStocks) },\r\n    { key: 'out', label: 'Out of Stocks', fetch: () => fetchStock('no_stock', outOfStock) },  // Changed here\r\n    { key: 'history', label: 'History', fetch: () => fetchStock('stock_history_list', history) },\r\n];\r\n\r\n        // Function to get products from the API\r\n        const fetchStock = async (endpoint, stateVariable) => {\r\n  loadingStates.value[activeTab.value] = true;\r\n  try {\r\n    const response = await axios.get(`${apiURL}/${endpoint}`);\r\n    console.log(`${endpoint} response:`, response.data);\r\n    \r\n    // Check for the endpoint and populate the appropriate state variable\r\n    if (endpoint === 'stock_history_list') {\r\n      history.value = response.data.history;\r\n    } else if (endpoint === 'products_list') {\r\n      products.value = response.data.products;\r\n    } else if (endpoint === 'low_stocks') {\r\n      lowStocks.value = response.data.lowStock;\r\n    } else if (endpoint === 'out_of_stock') {\r\n      outOfStock.value = response.data.noStock;\r\n    }\r\n  } catch (error) {\r\n    Swal.fire({\r\n      icon: 'error',\r\n      title: 'Error',\r\n      text: 'Failed to fetch products. Please try again later.',\r\n    });\r\n  } finally {\r\n    loadingStates.value[activeTab.value] = false;\r\n\r\n  }\r\n};\r\n\r\n        const changeTab = async (key) => {\r\n            activeTab.value = key;\r\n            const selectedTab = tabs.find((tab) => tab.key === key);\r\n\r\n            if (selectedTab && selectedTab.fetch) {\r\n                await selectedTab.fetch(); \r\n            }\r\n\r\n            // Initialize DataTable after the DOM is updated\r\n            nextTick(() => {\r\n                initializeDataTable();\r\n            });\r\n        };\r\n\r\n        const filteredProducts = computed(() => {\r\n    console.log('Active Tab:', activeTab.value);  // Log active tab\r\n    console.log('Filtered Products:', filteredProducts.value);  // Log filtered products\r\n    if (activeTab.value === 'all') return products.value;\r\n    if (activeTab.value === 'low') return lowStocks.value;\r\n    if (activeTab.value === 'out') return outOfStock.value;\r\n    if (activeTab.value === 'history') return history.value;\r\n    return [];\r\n});\r\n\r\n        \r\n        const openEditStockModal = async (productId) => {\r\n            try {\r\n                entryValue.value = 0;\r\n                newQuantityAlert.value = 0;\r\n\r\n                const response = await axios.get(`${apiURL}/get_product/${productId}`);\r\n\r\n                editProductData.value = response.data.product;\r\n                newQuantityAlert.value = editProductData.value.quantityAlert;\r\n                selectedProductId.value = editProductData.value._id;\r\n\r\n                const modal = new bootstrap.Modal(document.getElementById('edit-stock'));\r\n                modal.show();\r\n            } catch (error) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Something Went wrong',\r\n                    showConfirmButton: true,\r\n                });\r\n            }\r\n        };\r\n\r\n        const initializeDataTable = () => {\r\n            nextTick(() => {\r\n                // Check if the active tab corresponds to the correct table\r\n                const tableSelector = activeTab.value === 'history'\r\n                    ? '#history-table' // Target the history tab table\r\n                    : '#other-table';   // Target other tables\r\n\r\n                const tableElement = document.querySelector(tableSelector);\r\n\r\n                // If the table does not exist in the DOM, skip DataTable initialization\r\n                if (!tableElement) {\r\n                    return;\r\n                }\r\n                if (tableInstance.value) {\r\n                    tableInstance.value.destroy();\r\n                }\r\n\r\n                // Initialize DataTable\r\n                tableInstance.value = $(tableSelector).DataTable({\r\n                    paging: true,\r\n                    searching: true,\r\n                    info: true,\r\n                    autoWidth: false,\r\n                    responsive: true,\r\n                    language: {\r\n                        emptyTable: 'No data available for this tab.',\r\n                    },\r\n                });\r\n            });\r\n        };\r\n       \r\n\r\n        const editStock = async () => {\r\n            try {\r\n                const payload = {\r\n                    entryValue: Number(entryValue.value),\r\n                    quantityAlert: Number(newQuantityAlert.value),\r\n                };\r\n\r\n                const response = await axios.patch(\r\n                    `${apiURL}/edit_stock/${editProductData.value._id}`,\r\n                    payload\r\n                );\r\n\r\n                if (response.data.success) {\r\n                    const result = await Swal.fire({\r\n                        icon: 'success',\r\n                        title: response.data.message,\r\n                        showConfirmButton: true,\r\n                    });\r\n                    if (result.isConfirmed) {\r\n                        document.querySelector('#edit-stock .btn-cancel').click();\r\n                    }\r\n                } else {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: response.data.message,\r\n                        showConfirmButton: true,\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                console.error('Error updating stock:', error);\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Failed to update stock.',\r\n                    showConfirmButton: true,\r\n                });\r\n            } finally {\r\n                fetchStockForCurrentTab();\r\n            }\r\n        };\r\n\r\n        const fetchStockForCurrentTab = async () => {\r\n            if (activeTab.value === 'all') {\r\n                await fetchStock('products_list', products);\r\n            } else if (activeTab.value === 'low') {\r\n                await fetchStock('low_stocks', lowStocks);\r\n            } else if (activeTab.value === 'out') {\r\n                await fetchStock('no_stock', outOfStock);\r\n            } else if (activeTab.value === 'history') {\r\n                await fetchStock('stock_history_list', history);\r\n            }\r\n        };\r\n\r\n        const deleteAlert = async (productId) => {\r\n            const { value: result } = await Swal.fire({\r\n                title: 'Delete Product',\r\n                text: \"You won't be able to revert this!\",\r\n                icon: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#3085d6',\r\n                cancelButtonColor: '#d33',\r\n                confirmButtonText: 'Yes, delete it!',\r\n            });\r\n\r\n            if (result) {\r\n                try {\r\n                    const response = await axios.patch(`${apiURL}/edit_products/${productId}`, {\r\n                        status: 'deleted',\r\n                    });\r\n\r\n                    if (response.data.success) {\r\n                        Swal.fire('Deleted!', 'Your product has been deleted.', 'success');\r\n                        this.products = this.products.filter(product => product._id !== productId);\r\n                    } else {\r\n                        Swal.fire('Failed', 'There was an issue deleting the product.', 'error');\r\n                    }\r\n                } catch (error) {\r\n                    Swal.fire('Error', 'Failed to delete the product.', 'error');\r\n                }\r\n            } else {\r\n                Swal.fire('Cancelled', 'Your product is safe :)', 'error');\r\n            }\r\n        };\r\n\r\n        return {\r\n            products,\r\n            select,\r\n            lowStocks,\r\n            outOfStock,\r\n            history,\r\n            selectedProductId,\r\n            openEditStockModal,\r\n            editProductData,\r\n            editStock,\r\n            entryValue,\r\n            newQuantityAlert,\r\n            activeTab,\r\n            changeTab,\r\n            filteredProducts,\r\n            tabs,\r\n            loadingStates,\r\n            apiURL,\r\n            imageURL,\r\n            deleteAlert\r\n        };\r\n    },\r\n\r\n};\r\n\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}