{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport { ref, computed, onMounted, onUnmounted } from 'vue';\nimport axios from 'axios';\nexport default {\n  setup() {\n    const apiURL = process.env.VUE_APP_URL;\n    const selectedCategory = ref('all');\n    const barcode = ref('');\n    const barcodeInput = ref(null);\n    const cart = ref([]);\n    const categories = ref([]);\n    const subtotal = ref(0);\n    const tax = ref(12); // Example tax rate\n    const discount = ref(0);\n    const total = computed(() => subtotal.value + subtotal.value * tax.value / 100 - discount.value);\n    const barcodeError = ref({\n      message: null\n    });\n    const selectedProduct = ref({}); // Used to store the product selected for quantity update\n    const lastInsertedProduct = ref(null); // Keep track of the last inserted product\n\n    // Fetch categories from the API\n    const getCategories = async () => {\n      try {\n        const response = await axios.get(`${apiURL}/get_category_list`);\n        categories.value = response.data.categories;\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    // Function to add a product to the cart\n    const addProduct = async () => {\n      try {\n        if (!barcode.value.trim()) {\n          barcodeError.value.message = \"Please enter a valid barcode.\";\n          return;\n        }\n\n        // Fetch product by barcode\n        const response = await axios.get(`${apiURL}/get_product_info/${barcode.value.trim()}`);\n        if (response.data.success) {\n          const product = response.data.product;\n          barcodeError.value.message = null;\n\n          // Add product to the cart or increment quantity if it already exists\n          const existingItem = cart.value.find(item => item._id === product._id);\n          if (existingItem) {\n            existingItem.quantity += 1; // Increment quantity\n          } else {\n            cart.value.push({\n              ...product,\n              quantity: 1\n            }); // Add new product\n          }\n\n          // Keep track of the last inserted product\n          lastInsertedProduct.value = product;\n        } else {\n          barcodeError.value.message = response.data.message || \"Product not found.\";\n        }\n      } catch (error) {\n        console.error(\"Error adding product:\", error);\n        barcodeError.value.message = \"An error occurred while fetching the product.\";\n      } finally {\n        barcode.value = \"\"; // Clear the barcode input\n      }\n    };\n\n    // Function to update the subtotal after modifying cart quantities\n    const updateSubtotal = () => {\n      subtotal.value = cart.value.reduce((sum, item) => sum + item.quantity * item.price, 0);\n    };\n\n    // Update total based on subtotal, tax, and discount\n    const updateTotal = () => {\n      updateSubtotal();\n    };\n\n    // Function to open the quantity modal and pass the selected product\n    const openQuantityModal = product => {\n      selectedProduct.value = {\n        ...product\n      }; // Clone the product to avoid direct mutations\n      const modal = new bootstrap.Modal(document.getElementById(\"edit-quantity\"));\n      modal.show();\n    };\n\n    // Function to update product quantity in the cart\n    const updateProductQuantity = () => {\n      const productIndex = cart.value.findIndex(item => item._id === selectedProduct.value._id);\n      if (productIndex !== -1) {\n        cart.value[productIndex].quantity = selectedProduct.value.quantity;\n        updateSubtotal(); // Recalculate subtotal after updating quantity\n      }\n    };\n\n    // Capture the keydown event for special combinations (e.g., @q)\n    const handleKeydown = event => {\n      if (event.key === \"q\" && barcode.value.startsWith(\"@\")) {\n        event.preventDefault(); // Prevent typing \"@q\"\n        if (lastInsertedProduct.value) {\n          openQuantityModal(lastInsertedProduct.value); // Open quantity modal for the last inserted product\n        }\n      }\n    };\n\n    // Get categories and set up event listener on mounted\n    onMounted(() => {\n      getCategories();\n      barcodeInput.value.focus();\n\n      // Add a global keydown listener for barcode input\n      barcodeInput.value.addEventListener(\"keydown\", handleKeydown);\n    });\n\n    // Cleanup the keydown event listener on unmount\n    onUnmounted(() => {\n      barcodeInput.value.removeEventListener(\"keydown\", handleKeydown);\n    });\n    return {\n      categories,\n      selectedCategory,\n      barcode,\n      cart,\n      subtotal,\n      tax,\n      discount,\n      total,\n      addProduct,\n      barcodeError,\n      barcodeInput,\n      updateProductQuantity,\n      selectedProduct,\n      lastInsertedProduct\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","onUnmounted","axios","setup","apiURL","process","env","VUE_APP_URL","selectedCategory","barcode","barcodeInput","cart","categories","subtotal","tax","discount","total","value","barcodeError","message","selectedProduct","lastInsertedProduct","getCategories","response","get","data","error","console","addProduct","trim","success","product","existingItem","find","item","_id","quantity","push","updateSubtotal","reduce","sum","price","updateTotal","openQuantityModal","modal","bootstrap","Modal","document","getElementById","show","updateProductQuantity","productIndex","findIndex","handleKeydown","event","key","startsWith","preventDefault","focus","addEventListener","removeEventListener"],"sources":["C:\\Users\\Administrator\\OneDrive\\Desktop\\POSExpress\\frontend\\src\\components\\Apps\\POS.vue"],"sourcesContent":["<template>\r\n  <div class=\"main-wrapper\">\r\n    <div class=\"header\">\r\n      <!-- Header Content -->\r\n    </div>\r\n\r\n    <div class=\"page-wrapper pos-pg-wrapper ms-0\">\r\n      <div class=\"content pos-design p-0\">\r\n        <div class=\"row align-items-start pos-wrapper\">\r\n          <!-- Category Sidebar -->\r\n          <div class=\"col-md-3 col-lg-2 ps-0\">\r\n            <div class=\"category-list\">\r\n              <h5>Categories</h5>\r\n              <ul class=\"list-group text-center\">\r\n                <li v-for=\"category in categories\" :key=\"category.name\" class=\"list-group-item\"\r\n                  :class=\"{ 'active': selectedCategory === category.name }\" @click=\"selectCategory(category.name)\">\r\n                  <a href=\"javascript:void(0);\">{{ category.name }}</a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Product Display -->\r\n          <div class=\"col-md-12 col-lg-6\">\r\n            <div class=\"row bg-white px-4 pb-5 mx-3 mt-2\">\r\n              <h4>Enter Barcode:</h4>\r\n<input\r\n  v-model=\"barcode\"\r\n  ref=\"barcodeInput\"\r\n  class=\"form-control bg-light border border-dark fs-1 mb-2 mt-3\"\r\n  type=\"text\"\r\n  @keydown=\"handleSpecialKey\"\r\n  placeholder=\"Scan Barcode\"\r\n/>\r\n<p v-if=\"barcodeError.message\" class=\"text-danger\">ERROR: {{ barcodeError.message }}</p>\r\n\r\n            </div>\r\n\r\n            <div class=\"pos-wrapper\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12 col-lg-12\">\r\n                  <div class=\"pos-products\">\r\n                    <div class=\"tabs_container\">\r\n                      <div class=\"tab_content active\" v-for=\"category in filteredCategories\" :key=\"category.name\">\r\n                        <div class=\"row\">\r\n                          <div class=\"col-sm-4 col-md-4 col-lg-5 col-xl-3 product-item\"\r\n                            v-for=\"product in category.products\" :key=\"product.id\">\r\n                            <div class=\"product-info default-cover card\">\r\n                              <a href=\"javascript:void(0);\" class=\"img-bg\">\r\n                                <img :src=\"product.image\" alt=\"Product\" />\r\n                                <span><i data-feather=\"check\"></i></span>\r\n                              </a>\r\n                              <h6 class=\"product-name\">\r\n                                <a href=\"javascript:void(0);\">{{ product.name }}</a>\r\n                              </h6>\r\n                              <div class=\"d-flex align-items-center justify-content-between price\">\r\n                                <span>{{ product.stock }} Pcs</span>\r\n                                <p>${{ product.price }}</p>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Order List and Summary -->\r\n          <div class=\"col-md-12 col-lg-4 ps-0\">\r\n            <aside class=\"product-order-list\">\r\n              <div class=\"head d-flex align-items-center justify-content-between w-100\">\r\n                <h5>Order List</h5>\r\n                <a class=\"confirm-text\" href=\"javascript:void(0);\"><i data-feather=\"trash-2\"\r\n                    class=\"feather-16 text-danger\"></i></a>\r\n              </div>\r\n\r\n              <div class=\"product-added block-section\">\r\n                <div class=\"product-wrap\">\r\n  <table class=\"table table-responsive\">\r\n    <thead>\r\n      <tr>\r\n        <th>Product</th>\r\n        <th>Price</th>\r\n        <th>Quantity</th>\r\n        <th>Total</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr v-for=\"item in cart\" :key=\"item.id\">\r\n        <td class=\"product-name-cell\">{{ item.name }}</td>\r\n        <td>${{ item.price }}</td>\r\n        <td>\r\n          <input\r\n            type=\"number\"\r\n            v-model.number=\"item.quantity\"\r\n            class=\"quantity-input\"\r\n            @input=\"updateSubtotal\"\r\n          />\r\n        </td>\r\n        <td>${{ item.quantity * item.price }}</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n              </div>\r\n\r\n              <div class=\"block-section\">\r\n                <h6>Order Summary</h6>\r\n                <table class=\"table table-responsive table-borderless\">\r\n                  <tr>\r\n                    <td>Sub Total</td>\r\n                    <td class=\"text-end\">${{ subtotal }}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Tax</td>\r\n                    <td class=\"text-end\">{{ tax }}%</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td class=\"danger\">Discount</td>\r\n                    <td class=\"danger text-end\">${{ discount }}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Total</td>\r\n                    <td class=\"text-end\">${{ total }}</td>\r\n                  </tr>\r\n                </table>\r\n              </div>\r\n            </aside>\r\n            <div class=\"btn-row d-sm-flex align-items-center justify-content-between\">\r\n            <a href=\"javascript:void(0);\" class=\"btn btn-info btn-icon flex-fill position-relative p-4 fs-6\"\r\n              data-bs-toggle=\"modal\" data-bs-target=\"#hold-order\">\r\n              <span class=\"keyboard-key\">F1</span>\r\n              <span class=\"me-1 d-flex align-items-center\">\r\n                <i data-feather=\"corner-up-right\" class=\"feather-16\"></i>\r\n              </span>Return\r\n            </a>\r\n            <a href=\"javascript:void(0);\" class=\"btn btn-danger btn-icon flex-fill position-relative p-4 fs-6\">\r\n              <span class=\"keyboard-key\">F2</span>\r\n              <span class=\"me-1 d-flex align-items-center\">\r\n                <i data-feather=\"trash-2\" class=\"feather-16\"></i>\r\n              </span>Void\r\n            </a>\r\n            <a href=\"javascript:void(0);\" class=\"btn btn-success btn-icon flex-fill position-relative p-4 fs-6\"\r\n              data-bs-toggle=\"modal\" data-bs-target=\"#payment-completed\">\r\n              <span class=\"keyboard-key\">F3</span>\r\n              <span class=\"me-1 d-flex align-items-center\">\r\n                <i data-feather=\"credit-card\" class=\"feather-16\"></i>\r\n              </span>Pay\r\n            </a>\r\n          </div>\r\n \r\n          </div>\r\n          <!-- Action Buttons -->\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Quantity Update Modal -->\r\n<div\r\n  class=\"modal fade\"\r\n  id=\"edit-quantity\"\r\n  tabindex=\"-1\"\r\n  role=\"dialog\"\r\n  aria-labelledby=\"quantityModalLabel\"\r\n  aria-hidden=\"true\"\r\n>\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"quantityModalLabel\">Update Quantity</h5>\r\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"form-group\">\r\n          <label for=\"productSku\">Product SKU:</label>\r\n          <input\r\n            id=\"productSku\"\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            v-model=\"selectedProduct.sku\"\r\n            disabled\r\n          />\r\n        </div>\r\n        <div class=\"form-group mt-3\">\r\n          <label for=\"productQuantity\">Quantity:</label>\r\n          <input\r\n            id=\"productQuantity\"\r\n            type=\"number\"\r\n            class=\"form-control\"\r\n            v-model.number=\"selectedProduct.quantity\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-secondary\"\r\n          data-bs-dismiss=\"modal\"\r\n        >\r\n          Close\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-primary\"\r\n          @click=\"updateProductQuantity\"\r\n          data-bs-dismiss=\"modal\"\r\n        >\r\n          Update\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted,onUnmounted } from 'vue';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  setup() {\r\n    const apiURL = process.env.VUE_APP_URL;\r\n    const selectedCategory = ref('all');\r\n    const barcode = ref('');\r\n    const barcodeInput = ref(null);\r\n    const cart = ref([]);\r\n    const categories = ref([]);\r\n    const subtotal = ref(0);\r\n    const tax = ref(12); // Example tax rate\r\n    const discount = ref(0);\r\n    const total = computed(() => subtotal.value + (subtotal.value * tax.value) / 100 - discount.value);\r\n    const barcodeError = ref({ message: null });\r\n    const selectedProduct = ref({}); // Used to store the product selected for quantity update\r\n    const lastInsertedProduct = ref(null); // Keep track of the last inserted product\r\n\r\n    // Fetch categories from the API\r\n    const getCategories = async () => {\r\n      try {\r\n        const response = await axios.get(`${apiURL}/get_category_list`);\r\n        categories.value = response.data.categories;\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    // Function to add a product to the cart\r\n    const addProduct = async () => {\r\n      try {\r\n        if (!barcode.value.trim()) {\r\n          barcodeError.value.message = \"Please enter a valid barcode.\";\r\n          return;\r\n        }\r\n\r\n        // Fetch product by barcode\r\n        const response = await axios.get(`${apiURL}/get_product_info/${barcode.value.trim()}`);\r\n        if (response.data.success) {\r\n          const product = response.data.product;\r\n          barcodeError.value.message = null;\r\n\r\n          // Add product to the cart or increment quantity if it already exists\r\n          const existingItem = cart.value.find((item) => item._id === product._id);\r\n          if (existingItem) {\r\n            existingItem.quantity += 1; // Increment quantity\r\n          } else {\r\n            cart.value.push({ ...product, quantity: 1 }); // Add new product\r\n          }\r\n\r\n          // Keep track of the last inserted product\r\n          lastInsertedProduct.value = product;\r\n        } else {\r\n          barcodeError.value.message = response.data.message || \"Product not found.\";\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error adding product:\", error);\r\n        barcodeError.value.message = \"An error occurred while fetching the product.\";\r\n      } finally {\r\n        barcode.value = \"\"; // Clear the barcode input\r\n      }\r\n    };\r\n\r\n    // Function to update the subtotal after modifying cart quantities\r\n    const updateSubtotal = () => {\r\n      subtotal.value = cart.value.reduce((sum, item) => sum + item.quantity * item.price, 0);\r\n    };\r\n\r\n    // Update total based on subtotal, tax, and discount\r\n    const updateTotal = () => {\r\n      updateSubtotal();\r\n    };\r\n\r\n    // Function to open the quantity modal and pass the selected product\r\n    const openQuantityModal = (product) => {\r\n      selectedProduct.value = { ...product }; // Clone the product to avoid direct mutations\r\n      const modal = new bootstrap.Modal(document.getElementById(\"edit-quantity\"));\r\n      modal.show();\r\n    };\r\n\r\n    // Function to update product quantity in the cart\r\n    const updateProductQuantity = () => {\r\n      const productIndex = cart.value.findIndex(\r\n        (item) => item._id === selectedProduct.value._id\r\n      );\r\n      if (productIndex !== -1) {\r\n        cart.value[productIndex].quantity = selectedProduct.value.quantity;\r\n        updateSubtotal(); // Recalculate subtotal after updating quantity\r\n      }\r\n    };\r\n\r\n    // Capture the keydown event for special combinations (e.g., @q)\r\n    const handleKeydown = (event) => {\r\n      if (event.key === \"q\" && barcode.value.startsWith(\"@\")) {\r\n        event.preventDefault(); // Prevent typing \"@q\"\r\n        if (lastInsertedProduct.value) {\r\n          openQuantityModal(lastInsertedProduct.value); // Open quantity modal for the last inserted product\r\n        }\r\n      }\r\n    };\r\n\r\n    // Get categories and set up event listener on mounted\r\n    onMounted(() => {\r\n      getCategories();\r\n      barcodeInput.value.focus();\r\n\r\n      // Add a global keydown listener for barcode input\r\n      barcodeInput.value.addEventListener(\"keydown\", handleKeydown);\r\n    });\r\n\r\n    // Cleanup the keydown event listener on unmount\r\n    onUnmounted(() => {\r\n      barcodeInput.value.removeEventListener(\"keydown\", handleKeydown);\r\n    });\r\n\r\n    return {\r\n      categories,\r\n      selectedCategory,\r\n      barcode,\r\n      cart,\r\n      subtotal,\r\n      tax,\r\n      discount,\r\n      total,\r\n\r\n      addProduct,\r\n \r\n      barcodeError,\r\n      barcodeInput,\r\n      updateProductQuantity,\r\n      selectedProduct,\r\n      lastInsertedProduct\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Container for the product display */\r\n.tabs_container {\r\n  min-height: 620px;\r\n  max-height: 620px;\r\n  overflow-y: auto;\r\n  background: #fff;\r\n  padding: 20px;\r\n\r\n}\r\n\r\n/* Flex container for product display */\r\n.tab_content {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 1rem;\r\n  /* Space between items */\r\n  justify-content: space-between;\r\n}\r\n\r\n/* Ensure product-info fits within columns properly */\r\n.product-info {\r\n  position: relative;\r\n  padding: 15px;\r\n  background: #f9f9f9;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  transition: transform 0.2s ease-in-out;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  /* Optional shadow */\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  /* Flex to ensure each card takes equal width */\r\n  flex: 1 1 calc(33.33% - 1rem);\r\n  /* Default to 3 items per row */\r\n  height: 100%;\r\n\r\n}\r\n\r\n.product-info img {\r\n  width: 100%;\r\n  height: 150px;\r\n  /* Fixed height for images */\r\n  object-fit: cover;\r\n  /* Ensure images cover the area proportionally */\r\n}\r\n\r\n.product-info:hover {\r\n  transform: scale(1.05);\r\n  /* Slight zoom effect on hover */\r\n}\r\n\r\n/* Mobile and tablet adjustments for card layout */\r\n@media (max-width: 1200px) {\r\n  .product-info {\r\n    flex: 1 1 calc(25% - 1rem);\r\n    /* 4 items per row for large screens */\r\n    height: 300px;\r\n    /* Set height for large screens */\r\n  }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .product-info {\r\n    flex: 1 1 calc(33.33% - 1rem);\r\n    /* 3 items per row for medium screens */\r\n    height: 250px;\r\n    /* Adjust height for medium screens */\r\n  }\r\n}\r\n\r\n@media (max-width: 576px) {\r\n  .product-info {\r\n    flex: 1 1 calc(50% - 1rem);\r\n    /* 2 items per row for small screens */\r\n    height: 200px;\r\n    /* Adjust height for small screens */\r\n  }\r\n}\r\n\r\n/* Category List Styling */\r\n.category-list {\r\n  padding: 15px;\r\n  background-color: #f9f9f9;\r\n  border-right: 1px solid #ddd;\r\n}\r\n\r\n.category-list ul {\r\n  list-style-type: none;\r\n  padding-left: 0;\r\n}\r\n\r\n.category-list li {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.category-list a {\r\n  text-decoration: none;\r\n  color: #333;\r\n  font-size: 16px;\r\n  padding: 8px 10px;\r\n  border-radius: 4px;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.category-list a:active {\r\n  color: #fff;\r\n}\r\n\r\n.category-list a:hover {\r\n  color: #fff;\r\n\r\n}\r\n\r\n.list-group-item.active {\r\n  background-color: #22A95E;\r\n  /* Green background for active list item */\r\n  border-color: #22A95E;\r\n  /* Optional: Match border with the active color */\r\n}\r\n\r\n.list-group-item.active a {\r\n  color: #fff;\r\n  /* Make the text white inside the active list item */\r\n}\r\n\r\n/* Keyboard Key Styling for the UI */\r\n.keyboard-key {\r\n  position: absolute;\r\n  top: 5px;\r\n  left: 5px;\r\n  font-size: 12px;\r\n  background-color: rgba(0, 0, 0, 0.1);\r\n  color: white;\r\n  padding: 5px 8px;\r\n  border-radius: 4px;\r\n  font-family: 'Courier New', monospace;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\r\n}\r\n.product-wrap {\r\n  max-height: 100%; /* Prevents fixed height causing auto-scroll */\r\n  overflow: hidden; /* Prevents unnecessary scrollbars */\r\n}\r\n\r\n.table {\r\n  width: 100%; /* Ensures the table fits within its container */\r\n  table-layout: auto; /* Allows cells to resize based on content */\r\n  word-wrap: break-word; /* Enables word wrapping for text */\r\n}\r\n\r\n.table th,\r\n.table td {\r\n  white-space: normal; /* Allows text to wrap to the next line */\r\n  word-break: break-word; /* Forces breaking of long words if needed */\r\n  text-align: left; /* Aligns text for readability */\r\n}\r\n\r\n.product-name-cell {\r\n  max-width: 200px; /* Adjust as needed for column width */\r\n  overflow: hidden;\r\n  text-overflow: ellipsis; /* Optional: adds \"...\" for long text */\r\n  white-space: normal;\r\n}\r\n\r\n.quantity-input {\r\n  width: 50px; /* Ensures quantity input field doesn't take too much space */\r\n  text-align: center;\r\n}\r\n\r\n</style>\r\n"],"mappings":";;;;AA+NA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,EAACC,WAAU,QAAS,KAAK;AAC1D,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIC,OAAO,CAACC,GAAG,CAACC,WAAW;IACtC,MAAMC,gBAAe,GAAIV,GAAG,CAAC,KAAK,CAAC;IACnC,MAAMW,OAAM,GAAIX,GAAG,CAAC,EAAE,CAAC;IACvB,MAAMY,YAAW,GAAIZ,GAAG,CAAC,IAAI,CAAC;IAC9B,MAAMa,IAAG,GAAIb,GAAG,CAAC,EAAE,CAAC;IACpB,MAAMc,UAAS,GAAId,GAAG,CAAC,EAAE,CAAC;IAC1B,MAAMe,QAAO,GAAIf,GAAG,CAAC,CAAC,CAAC;IACvB,MAAMgB,GAAE,GAAIhB,GAAG,CAAC,EAAE,CAAC,EAAE;IACrB,MAAMiB,QAAO,GAAIjB,GAAG,CAAC,CAAC,CAAC;IACvB,MAAMkB,KAAI,GAAIjB,QAAQ,CAAC,MAAMc,QAAQ,CAACI,KAAI,GAAKJ,QAAQ,CAACI,KAAI,GAAIH,GAAG,CAACG,KAAK,GAAI,GAAE,GAAIF,QAAQ,CAACE,KAAK,CAAC;IAClG,MAAMC,YAAW,GAAIpB,GAAG,CAAC;MAAEqB,OAAO,EAAE;IAAK,CAAC,CAAC;IAC3C,MAAMC,eAAc,GAAItB,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;IACjC,MAAMuB,mBAAkB,GAAIvB,GAAG,CAAC,IAAI,CAAC,EAAE;;IAEvC;IACA,MAAMwB,aAAY,GAAI,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMrB,KAAK,CAACsB,GAAG,CAAC,GAAGpB,MAAM,oBAAoB,CAAC;QAC/DQ,UAAU,CAACK,KAAI,GAAIM,QAAQ,CAACE,IAAI,CAACb,UAAU;MAC7C,EAAE,OAAOc,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;;IAED;IACA,MAAME,UAAS,GAAI,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,IAAI,CAACnB,OAAO,CAACQ,KAAK,CAACY,IAAI,CAAC,CAAC,EAAE;UACzBX,YAAY,CAACD,KAAK,CAACE,OAAM,GAAI,+BAA+B;UAC5D;QACF;;QAEA;QACA,MAAMI,QAAO,GAAI,MAAMrB,KAAK,CAACsB,GAAG,CAAC,GAAGpB,MAAM,qBAAqBK,OAAO,CAACQ,KAAK,CAACY,IAAI,CAAC,CAAC,EAAE,CAAC;QACtF,IAAIN,QAAQ,CAACE,IAAI,CAACK,OAAO,EAAE;UACzB,MAAMC,OAAM,GAAIR,QAAQ,CAACE,IAAI,CAACM,OAAO;UACrCb,YAAY,CAACD,KAAK,CAACE,OAAM,GAAI,IAAI;;UAEjC;UACA,MAAMa,YAAW,GAAIrB,IAAI,CAACM,KAAK,CAACgB,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,GAAE,KAAMJ,OAAO,CAACI,GAAG,CAAC;UACxE,IAAIH,YAAY,EAAE;YAChBA,YAAY,CAACI,QAAO,IAAK,CAAC,EAAE;UAC9B,OAAO;YACLzB,IAAI,CAACM,KAAK,CAACoB,IAAI,CAAC;cAAE,GAAGN,OAAO;cAAEK,QAAQ,EAAE;YAAE,CAAC,CAAC,EAAE;UAChD;;UAEA;UACAf,mBAAmB,CAACJ,KAAI,GAAIc,OAAO;QACrC,OAAO;UACLb,YAAY,CAACD,KAAK,CAACE,OAAM,GAAII,QAAQ,CAACE,IAAI,CAACN,OAAM,IAAK,oBAAoB;QAC5E;MACF,EAAE,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7CR,YAAY,CAACD,KAAK,CAACE,OAAM,GAAI,+CAA+C;MAC9E,UAAU;QACRV,OAAO,CAACQ,KAAI,GAAI,EAAE,EAAE;MACtB;IACF,CAAC;;IAED;IACA,MAAMqB,cAAa,GAAIA,CAAA,KAAM;MAC3BzB,QAAQ,CAACI,KAAI,GAAIN,IAAI,CAACM,KAAK,CAACsB,MAAM,CAAC,CAACC,GAAG,EAAEN,IAAI,KAAKM,GAAE,GAAIN,IAAI,CAACE,QAAO,GAAIF,IAAI,CAACO,KAAK,EAAE,CAAC,CAAC;IACxF,CAAC;;IAED;IACA,MAAMC,WAAU,GAAIA,CAAA,KAAM;MACxBJ,cAAc,CAAC,CAAC;IAClB,CAAC;;IAED;IACA,MAAMK,iBAAgB,GAAKZ,OAAO,IAAK;MACrCX,eAAe,CAACH,KAAI,GAAI;QAAE,GAAGc;MAAQ,CAAC,EAAE;MACxC,MAAMa,KAAI,GAAI,IAAIC,SAAS,CAACC,KAAK,CAACC,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC,CAAC;MAC3EJ,KAAK,CAACK,IAAI,CAAC,CAAC;IACd,CAAC;;IAED;IACA,MAAMC,qBAAoB,GAAIA,CAAA,KAAM;MAClC,MAAMC,YAAW,GAAIxC,IAAI,CAACM,KAAK,CAACmC,SAAS,CACtClB,IAAI,IAAKA,IAAI,CAACC,GAAE,KAAMf,eAAe,CAACH,KAAK,CAACkB,GAC/C,CAAC;MACD,IAAIgB,YAAW,KAAM,CAAC,CAAC,EAAE;QACvBxC,IAAI,CAACM,KAAK,CAACkC,YAAY,CAAC,CAACf,QAAO,GAAIhB,eAAe,CAACH,KAAK,CAACmB,QAAQ;QAClEE,cAAc,CAAC,CAAC,EAAE;MACpB;IACF,CAAC;;IAED;IACA,MAAMe,aAAY,GAAKC,KAAK,IAAK;MAC/B,IAAIA,KAAK,CAACC,GAAE,KAAM,GAAE,IAAK9C,OAAO,CAACQ,KAAK,CAACuC,UAAU,CAAC,GAAG,CAAC,EAAE;QACtDF,KAAK,CAACG,cAAc,CAAC,CAAC,EAAE;QACxB,IAAIpC,mBAAmB,CAACJ,KAAK,EAAE;UAC7B0B,iBAAiB,CAACtB,mBAAmB,CAACJ,KAAK,CAAC,EAAE;QAChD;MACF;IACF,CAAC;;IAED;IACAjB,SAAS,CAAC,MAAM;MACdsB,aAAa,CAAC,CAAC;MACfZ,YAAY,CAACO,KAAK,CAACyC,KAAK,CAAC,CAAC;;MAE1B;MACAhD,YAAY,CAACO,KAAK,CAAC0C,gBAAgB,CAAC,SAAS,EAAEN,aAAa,CAAC;IAC/D,CAAC,CAAC;;IAEF;IACApD,WAAW,CAAC,MAAM;MAChBS,YAAY,CAACO,KAAK,CAAC2C,mBAAmB,CAAC,SAAS,EAAEP,aAAa,CAAC;IAClE,CAAC,CAAC;IAEF,OAAO;MACLzC,UAAU;MACVJ,gBAAgB;MAChBC,OAAO;MACPE,IAAI;MACJE,QAAQ;MACRC,GAAG;MACHC,QAAQ;MACRC,KAAK;MAELY,UAAU;MAEVV,YAAY;MACZR,YAAY;MACZwC,qBAAqB;MACrB9B,eAAe;MACfC;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}