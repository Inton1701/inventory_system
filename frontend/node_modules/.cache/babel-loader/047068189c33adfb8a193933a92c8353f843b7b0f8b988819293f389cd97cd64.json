{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport JsBarcode from 'jsbarcode';\nimport { onMounted, watch, ref, nextTick } from 'vue';\nexport default {\n  props: {\n    sku: {\n      type: String,\n      default: '' // must be no value\n    }\n  },\n  setup(props) {\n    const svgRef = ref(null);\n    const errorMessage = ref('');\n    const fallbackSku = '0000000000000';\n    const calculateEAN13Checksum = sku => {\n      const digits = sku.split('').map(Number);\n      let sum = 0;\n      for (let i = 0; i < 12; i++) {\n        sum += i % 2 === 0 ? digits[i] : digits[i] * 3;\n      }\n      return (10 - sum % 10) % 10;\n    };\n    const generateBarcode = async sku => {\n      try {\n        if (!sku || typeof sku !== 'string') {\n          throw new Error('Invalid SKU');\n        }\n        if (sku.length < 13) {\n          sku = sku.padStart(13, '0');\n        } else if (sku.length > 13) {\n          sku = sku.slice(0, 13);\n        }\n        if (sku.length !== 13 || !/^\\d{13}$/.test(sku)) {\n          throw new Error('Invalid SKU format: must be numeric and 13 digits.');\n        }\n        const checksum = calculateEAN13Checksum(sku);\n        sku = sku.slice(0, 12) + checksum;\n        errorMessage.value = '';\n        await nextTick();\n        JsBarcode(svgRef.value, sku, {\n          format: 'EAN13',\n          lineColor: '#000',\n          width: 2,\n          height: 50,\n          displayValue: true\n        });\n      } catch (error) {\n        console.error(error.message);\n        errorMessage.value = error.message;\n        JsBarcode(svgRef.value, fallbackSku, {\n          format: 'CODE128',\n          lineColor: '#000',\n          width: 2,\n          height: 50,\n          displayValue: true\n        });\n      }\n    };\n    const downloadBarcode = () => {\n      const svg = svgRef.value;\n      if (!svg) return;\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      const svgData = new XMLSerializer().serializeToString(svg);\n      const img = new Image();\n      const svgBlob = new Blob([svgData], {\n        type: 'image/svg+xml;charset=utf-8'\n      });\n      const url = URL.createObjectURL(svgBlob);\n      img.onload = () => {\n        canvas.width = img.width;\n        canvas.height = img.height;\n        ctx.fillStyle = 'white';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(img, 0, 0);\n        const pngUrl = canvas.toDataURL('image/png');\n        const link = document.createElement('a');\n        link.href = pngUrl;\n        link.download = `${props.sku}_barcode.png`;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        URL.revokeObjectURL(url);\n      };\n      img.src = url;\n    };\n    onMounted(() => generateBarcode(props.sku));\n    watch(() => props.sku, newSku => {\n      generateBarcode(newSku);\n    });\n    return {\n      svgRef,\n      errorMessage,\n      downloadBarcode\n    };\n  }\n};","map":{"version":3,"names":["JsBarcode","onMounted","watch","ref","nextTick","props","sku","type","String","default","setup","svgRef","errorMessage","fallbackSku","calculateEAN13Checksum","digits","split","map","Number","sum","i","generateBarcode","Error","length","padStart","slice","test","checksum","value","format","lineColor","width","height","displayValue","error","console","message","downloadBarcode","svg","canvas","document","createElement","ctx","getContext","svgData","XMLSerializer","serializeToString","img","Image","svgBlob","Blob","url","URL","createObjectURL","onload","fillStyle","fillRect","drawImage","pngUrl","toDataURL","link","href","download","body","appendChild","click","removeChild","revokeObjectURL","src","newSku"],"sources":["C:\\Users\\Administrator\\OneDrive\\Desktop\\POSExpress\\frontend\\src\\components\\Admin\\Inventory\\Barcode.vue"],"sourcesContent":["<script>\r\nimport JsBarcode from 'jsbarcode';\r\nimport { onMounted, watch, ref, nextTick } from 'vue';\r\n\r\nexport default {\r\n  props: {\r\n    sku: {\r\n      type: String,\r\n      default: '' // must be no value\r\n    }\r\n  },\r\n  setup(props) {\r\n    const svgRef = ref(null);\r\n    const errorMessage = ref('');\r\n    const fallbackSku = '0000000000000';\r\n\r\n    const calculateEAN13Checksum = (sku) => {\r\n      const digits = sku.split('').map(Number);\r\n      let sum = 0;\r\n      for (let i = 0; i < 12; i++) {\r\n        sum += (i % 2 === 0 ? digits[i] : digits[i] * 3);\r\n      }\r\n      return (10 - (sum % 10)) % 10;\r\n    };\r\n\r\n    const generateBarcode = async (sku) => {\r\n      try {\r\n        if (!sku || typeof sku !== 'string') {\r\n          throw new Error('Invalid SKU');\r\n        }\r\n        if (sku.length < 13) {\r\n          sku = sku.padStart(13, '0');\r\n        } else if (sku.length > 13) {\r\n          sku = sku.slice(0, 13);\r\n        }\r\n        if (sku.length !== 13 || !/^\\d{13}$/.test(sku)) {\r\n          throw new Error('Invalid SKU format: must be numeric and 13 digits.');\r\n        }\r\n\r\n        const checksum = calculateEAN13Checksum(sku);\r\n        sku = sku.slice(0, 12) + checksum;\r\n        errorMessage.value = '';\r\n        await nextTick();\r\n\r\n        JsBarcode(svgRef.value, sku, {\r\n          format: 'EAN13',\r\n          lineColor: '#000',\r\n          width: 2,\r\n          height: 50,\r\n          displayValue: true\r\n        });\r\n      } catch (error) {\r\n        console.error(error.message);\r\n        errorMessage.value = error.message;\r\n        JsBarcode(svgRef.value, fallbackSku, {\r\n          format: 'CODE128',\r\n          lineColor: '#000',\r\n          width: 2,\r\n          height: 50,\r\n          displayValue: true\r\n        });\r\n      }\r\n    };\r\n\r\n    const downloadBarcode = () => {\r\n      const svg = svgRef.value;\r\n      if (!svg) return;\r\n\r\n      const canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d');\r\n      const svgData = new XMLSerializer().serializeToString(svg);\r\n      const img = new Image();\r\n      const svgBlob = new Blob([svgData], { type: 'image/svg+xml;charset=utf-8' });\r\n      const url = URL.createObjectURL(svgBlob);\r\n\r\n      img.onload = () => {\r\n        canvas.width = img.width;\r\n        canvas.height = img.height;\r\n        ctx.fillStyle = 'white';\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n        ctx.drawImage(img, 0, 0);\r\n\r\n        const pngUrl = canvas.toDataURL('image/png');\r\n        const link = document.createElement('a');\r\n        link.href = pngUrl;\r\n        link.download = `${props.sku}_barcode.png`;\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n        URL.revokeObjectURL(url);\r\n      };\r\n      img.src = url;\r\n    };\r\n\r\n    onMounted(() => generateBarcode(props.sku));\r\n    watch(() => props.sku, (newSku) => {\r\n      generateBarcode(newSku);\r\n    });\r\n\r\n    return {\r\n      svgRef,\r\n      errorMessage,\r\n      downloadBarcode\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<template>\r\n  <div>\r\n    <div v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</div>\r\n    <svg ref=\"svgRef\"></svg>\r\n    <button @click=\"downloadBarcode\">Download Barcode as PNG</button>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.error-message {\r\n  color: red;\r\n  font-weight: bold;\r\n  margin-top: 10px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}