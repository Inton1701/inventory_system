{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"barcode-generator\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_3 = {\n  ref: \"svgRef\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"product-name text-center\"\n};\nconst _hoisted_5 = {\n  class: \"controls\"\n};\nconst _hoisted_6 = {\n  class: \"checkbox-wrapper\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$setup.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString($setup.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), (_openBlock(), _createElementBlock(\"svg\", _hoisted_3, null, 512 /* NEED_PATCH */)), $setup.showProductName ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _toDisplayString($props.productName), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_5, [_createCommentVNode(\" Download Button \"), _createElementVNode(\"button\", {\n    class: \"btn btn-primary\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.downloadBarcode && $setup.downloadBarcode(...args))\n  }, \"Download Barcode\"), _createCommentVNode(\" Checkbox and Label \"), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.showProductName = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $setup.showProductName]]), _cache[2] || (_cache[2] = _createElementVNode(\"span\", null, \"Show Product Name\", -1 /* HOISTED */))])])])]);\n}","map":{"version":3,"names":["class","key","ref","_createElementBlock","_hoisted_1","$setup","errorMessage","_hoisted_2","_toDisplayString","_createCommentVNode","_hoisted_3","showProductName","_hoisted_4","$props","productName","_createElementVNode","_hoisted_5","onClick","_cache","args","downloadBarcode","_hoisted_6","type","$event"],"sources":["C:\\Users\\Administrator\\OneDrive\\Desktop\\POSExpress\\frontend\\src\\components\\Admin\\Inventory\\Barcode.vue"],"sourcesContent":["<script>\r\nimport JsBarcode from 'jsbarcode';\r\nimport { onMounted, watch, ref, nextTick } from 'vue';\r\n\r\nexport default {\r\n  props: {\r\n    sku: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    productName: {\r\n      type: String,\r\n      default: 'Product Name'\r\n    },\r\n    format: {\r\n      type: String,\r\n      default: 'EAN13'\r\n    },\r\n    lineColor: {\r\n      type: String,\r\n      default: '#000000'\r\n    },\r\n    width: {\r\n      type: Number,\r\n      default: 2\r\n    },\r\n    height: {\r\n      type: Number,\r\n      default: 50\r\n    }\r\n  },\r\n  setup(props) {\r\n    const svgRef = ref(null);\r\n    const errorMessage = ref('');\r\n    const showProductName = ref(true);\r\n\r\n    const generateBarcode = async (sku) => {\r\n      try {\r\n        if (!sku || typeof sku !== 'string') {\r\n          throw new Error('Invalid SKU: Must be a string.');\r\n        }\r\n\r\n        // Validate based on barcode format (e.g., EAN13 requires 13 digits)\r\n        if (props.format === 'EAN13' && (!/^\\d{13}$/.test(sku))) {\r\n          throw new Error('Invalid EAN13 SKU: Must be 13 numeric digits.');\r\n        }\r\n\r\n        errorMessage.value = '';\r\n        await nextTick();\r\n\r\n        // Generate barcode directly from the user input\r\n        JsBarcode(svgRef.value, sku, {\r\n          format: props.format,\r\n          lineColor: props.lineColor,\r\n          width: props.width,\r\n          height: props.height,\r\n          displayValue: true\r\n        });\r\n      } catch (error) {\r\n        console.error(error.message);\r\n        errorMessage.value = error.message;\r\n\r\n        // Display fallback barcode if input is invalid\r\n        JsBarcode(svgRef.value, '0000000000000', {\r\n          format: 'CODE128',\r\n          lineColor: props.lineColor,\r\n          width: props.width,\r\n          height: props.height,\r\n          displayValue: true\r\n        });\r\n      }\r\n    };\r\n\r\n    const downloadBarcode = () => {\r\n      const svg = svgRef.value;\r\n      const canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d');\r\n      const svgData = new XMLSerializer().serializeToString(svg);\r\n      const img = new Image();\r\n      const svgBlob = new Blob([svgData], { type: 'image/svg+xml;charset=utf-8' });\r\n      const url = URL.createObjectURL(svgBlob);\r\n\r\n      img.onload = () => {\r\n        canvas.width = img.width;\r\n        canvas.height = img.height + (showProductName.value ? 30 : 0);\r\n        ctx.fillStyle = 'white';\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        ctx.drawImage(img, 0, 0);\r\n\r\n        if (showProductName.value) {\r\n          ctx.font = '12px Arial';\r\n          ctx.fillStyle = 'black';\r\n          ctx.textAlign = 'center';\r\n          ctx.fillText(props.productName, canvas.width / 2, img.height + 20);\r\n        }\r\n\r\n        const pngUrl = canvas.toDataURL('image/png');\r\n        const link = document.createElement('a');\r\n        link.href = pngUrl;\r\n        link.download = `${props.productName}_barcode.png`;\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n        URL.revokeObjectURL(url);\r\n      };\r\n      img.src = url;\r\n    };\r\n\r\n    onMounted(() => generateBarcode(props.sku));\r\n    watch(\r\n      () => props.sku,\r\n      (newSku) => {\r\n        generateBarcode(newSku);\r\n      }\r\n    );\r\n\r\n    return {\r\n      svgRef,\r\n      errorMessage,\r\n      downloadBarcode,\r\n      showProductName\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"barcode-generator\">\r\n    <div v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</div>\r\n    <svg ref=\"svgRef\"></svg>\r\n    <div v-if=\"showProductName\" class=\"product-name text-center\">{{ productName }}</div>\r\n\r\n    <div class=\"controls\">\r\n      <!-- Download Button -->\r\n      <button class=\"btn btn-primary\" @click=\"downloadBarcode\">Download Barcode</button>\r\n\r\n      <!-- Checkbox and Label -->\r\n      <div class=\"checkbox-wrapper\">\r\n        <label>\r\n          <input type=\"checkbox\" v-model=\"showProductName\" />\r\n          <span>Show Product Name</span>\r\n        </label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.error-message {\r\n  color: red;\r\n  font-weight: bold;\r\n  margin-top: 10px;\r\n}\r\n\r\n.product-name {\r\n  text-align: center;\r\n  font-size: 12px;\r\n  color: black;\r\n  font-weight: bold;\r\n}\r\n\r\n.controls {\r\n  margin-top: 15px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.checkbox-wrapper {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 10px; /* Adds spacing below the button */\r\n}\r\n\r\n.checkbox-wrapper label {\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 14px;\r\n  color: #6c757d;\r\n}\r\n\r\n.checkbox-wrapper input {\r\n  margin-right: 8px;\r\n}\r\n</style>"],"mappings":";;EAgIOA,KAAK,EAAC;AAAmB;;EAhIhCC,GAAA;EAiI6BD,KAAK,EAAC;;;EAC1BE,GAAG,EAAC;AAAQ;;EAlIrBD,GAAA;EAmIgCD,KAAK,EAAC;;;EAE7BA,KAAK,EAAC;AAAU;;EAKdA,KAAK,EAAC;AAAkB;;uBAVjCG,mBAAA,CAiBM,OAjBNC,UAiBM,GAhBOC,MAAA,CAAAC,YAAY,I,cAAvBH,mBAAA,CAAuE,OAAvEI,UAAuE,EAAAC,gBAAA,CAArBH,MAAA,CAAAC,YAAY,oBAjIlEG,mBAAA,iB,cAkIIN,mBAAA,CAAwB,OAAxBO,UAAwB,gCACbL,MAAA,CAAAM,eAAe,I,cAA1BR,mBAAA,CAAoF,OAApFS,UAAoF,EAAAJ,gBAAA,CAApBK,MAAA,CAAAC,WAAW,oBAnI/EL,mBAAA,gBAqIIM,mBAAA,CAWM,OAXNC,UAWM,GAVJP,mBAAA,qBAAwB,EACxBM,mBAAA,CAAkF;IAA1Ef,KAAK,EAAC,iBAAiB;IAAEiB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEd,MAAA,CAAAe,eAAA,IAAAf,MAAA,CAAAe,eAAA,IAAAD,IAAA,CAAe;KAAE,kBAAgB,GAEzEV,mBAAA,wBAA2B,EAC3BM,mBAAA,CAKM,OALNM,UAKM,GAJJN,mBAAA,CAGQ,gB,gBAFNA,mBAAA,CAAmD;IAA5CO,IAAI,EAAC,UAAU;IA5IhC,uBAAAJ,MAAA,QAAAA,MAAA,MAAAK,MAAA,IA4I0ClB,MAAA,CAAAM,eAAe,GAAAY,MAAA;qDAAflB,MAAA,CAAAM,eAAe,E,6BAC/CI,mBAAA,CAA8B,cAAxB,mBAAiB,qB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}